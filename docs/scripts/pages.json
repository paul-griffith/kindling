[{"name":"ByCountAscending","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.ByCountAscending","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/-by-count-ascending/index.html","searchKeys":["ByCountAscending","ByCountAscending","io.github.inductiveautomation.kindling.utils.FilterComparator.ByCountAscending"]},{"name":"ByCountDescending","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.ByCountDescending","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/-by-count-descending/index.html","searchKeys":["ByCountDescending","ByCountDescending","io.github.inductiveautomation.kindling.utils.FilterComparator.ByCountDescending"]},{"name":"ByNameAscending","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.ByNameAscending","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/-by-name-ascending/index.html","searchKeys":["ByNameAscending","ByNameAscending","io.github.inductiveautomation.kindling.idb.generic.TableComparator.ByNameAscending"]},{"name":"ByNameAscending","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.ByNameAscending","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/-by-name-ascending/index.html","searchKeys":["ByNameAscending","ByNameAscending","io.github.inductiveautomation.kindling.utils.FilterComparator.ByNameAscending"]},{"name":"ByNameDescending","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.ByNameDescending","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/-by-name-descending/index.html","searchKeys":["ByNameDescending","ByNameDescending","io.github.inductiveautomation.kindling.idb.generic.TableComparator.ByNameDescending"]},{"name":"ByNameDescending","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.ByNameDescending","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/-by-name-descending/index.html","searchKeys":["ByNameDescending","ByNameDescending","io.github.inductiveautomation.kindling.utils.FilterComparator.ByNameDescending"]},{"name":"BySizeAscending","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.BySizeAscending","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/-by-size-ascending/index.html","searchKeys":["BySizeAscending","BySizeAscending","io.github.inductiveautomation.kindling.idb.generic.TableComparator.BySizeAscending"]},{"name":"BySizeDescending","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.BySizeDescending","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/-by-size-descending/index.html","searchKeys":["BySizeDescending","BySizeDescending","io.github.inductiveautomation.kindling.idb.generic.TableComparator.BySizeDescending"]},{"name":"Cpu","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Cpu","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/-cpu/index.html","searchKeys":["Cpu","Cpu","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Cpu"]},{"name":"DEBUG","description":"io.github.inductiveautomation.kindling.log.Level.DEBUG","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","io.github.inductiveautomation.kindling.log.Level.DEBUG"]},{"name":"Default","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Default","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/-default/index.html","searchKeys":["Default","Default","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Default"]},{"name":"ERROR","description":"io.github.inductiveautomation.kindling.log.Level.ERROR","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.github.inductiveautomation.kindling.log.Level.ERROR"]},{"name":"EightOne","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.EightOne","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/-eight-one/index.html","searchKeys":["EightOne","EightOne","io.github.inductiveautomation.kindling.utils.MajorVersion.EightOne"]},{"name":"EightZero","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.EightZero","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/-eight-zero/index.html","searchKeys":["EightZero","EightZero","io.github.inductiveautomation.kindling.utils.MajorVersion.EightZero"]},{"name":"Heap","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Heap","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/-heap/index.html","searchKeys":["Heap","Heap","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Heap"]},{"name":"INFO","description":"io.github.inductiveautomation.kindling.log.Level.INFO","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","io.github.inductiveautomation.kindling.log.Level.INFO"]},{"name":"Logs","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Logs","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-logs/index.html","searchKeys":["Logs","Logs","io.github.inductiveautomation.kindling.idb.IdbTool.Logs"]},{"name":"Metrics","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Metrics","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-metrics/index.html","searchKeys":["Metrics","Metrics","io.github.inductiveautomation.kindling.idb.IdbTool.Metrics"]},{"name":"OpenInBrowser","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInBrowser","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/-open-in-browser/index.html","searchKeys":["OpenInBrowser","OpenInBrowser","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInBrowser"]},{"name":"OpenInIde","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInIde","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/-open-in-ide/index.html","searchKeys":["OpenInIde","OpenInIde","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInIde"]},{"name":"Queue","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Queue","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/-queue/index.html","searchKeys":["Queue","Queue","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Queue"]},{"name":"SevenNine","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.SevenNine","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/-seven-nine/index.html","searchKeys":["SevenNine","SevenNine","io.github.inductiveautomation.kindling.utils.MajorVersion.SevenNine"]},{"name":"TRACE","description":"io.github.inductiveautomation.kindling.log.Level.TRACE","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","io.github.inductiveautomation.kindling.log.Level.TRACE"]},{"name":"Throughput","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Throughput","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/-throughput/index.html","searchKeys":["Throughput","Throughput","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.Throughput"]},{"name":"WARN","description":"io.github.inductiveautomation.kindling.log.Level.WARN","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","io.github.inductiveautomation.kindling.log.Level.WARN"]},{"name":"abstract class AbstractDataset constructor(columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null) : Dataset","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/index.html","searchKeys":["AbstractDataset","abstract class AbstractDataset constructor(columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null) : Dataset","io.github.inductiveautomation.kindling.cache.model.AbstractDataset"]},{"name":"abstract class AbstractTreeNode : TreeNode","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/index.html","searchKeys":["AbstractTreeNode","abstract class AbstractTreeNode : TreeNode","io.github.inductiveautomation.kindling.utils.AbstractTreeNode"]},{"name":"abstract class ColumnList<R> : List<Column<R, *>> ","description":"io.github.inductiveautomation.kindling.utils.ColumnList","location":"kindling/io.github.inductiveautomation.kindling.utils/-column-list/index.html","searchKeys":["ColumnList","abstract class ColumnList<R> : List<Column<R, *>> ","io.github.inductiveautomation.kindling.utils.ColumnList"]},{"name":"abstract class FilterListPanel<T>(val tabName: String, toStringFn: Stringifier = { it?.toString() }) : FilterPanel<T> ","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/index.html","searchKeys":["FilterListPanel","abstract class FilterListPanel<T>(val tabName: String, toStringFn: Stringifier = { it?.toString() }) : FilterPanel<T> ","io.github.inductiveautomation.kindling.utils.FilterListPanel"]},{"name":"abstract class FilterPanel<T> : Filter<T> ","description":"io.github.inductiveautomation.kindling.core.FilterPanel","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/index.html","searchKeys":["FilterPanel","abstract class FilterPanel<T> : Filter<T> ","io.github.inductiveautomation.kindling.core.FilterPanel"]},{"name":"abstract class SinglePathView(constraints: String = \"ins 6, fill\") : PathView","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/index.html","searchKeys":["SinglePathView","abstract class SinglePathView(constraints: String = \"ins 6, fill\") : PathView","io.github.inductiveautomation.kindling.zip.views.SinglePathView"]},{"name":"abstract class ToolPanel(layoutConstraints: String = \"ins 6, fill, hidemode 3\") : JPanel, FloatableComponent, PopupMenuCustomizer","description":"io.github.inductiveautomation.kindling.core.ToolPanel","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/index.html","searchKeys":["ToolPanel","abstract class ToolPanel(layoutConstraints: String = \"ins 6, fill, hidemode 3\") : JPanel, FloatableComponent, PopupMenuCustomizer","io.github.inductiveautomation.kindling.core.ToolPanel"]},{"name":"abstract class TypedTreeNode<T> : AbstractTreeNode","description":"io.github.inductiveautomation.kindling.utils.TypedTreeNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-typed-tree-node/index.html","searchKeys":["TypedTreeNode","abstract class TypedTreeNode<T> : AbstractTreeNode","io.github.inductiveautomation.kindling.utils.TypedTreeNode"]},{"name":"abstract fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.utils.PopupMenuCustomizer.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.utils/-popup-menu-customizer/customize-popup-menu.html","searchKeys":["customizePopupMenu","abstract fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.utils.PopupMenuCustomizer.customizePopupMenu"]},{"name":"abstract fun customizePopupMenu(menu: JPopupMenu, column: Column<out T, *>, event: T)","description":"io.github.inductiveautomation.kindling.core.FilterPanel.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/customize-popup-menu.html","searchKeys":["customizePopupMenu","abstract fun customizePopupMenu(menu: JPopupMenu, column: Column<out T, *>, event: T)","io.github.inductiveautomation.kindling.core.FilterPanel.customizePopupMenu"]},{"name":"abstract fun filter(item: T): Boolean","description":"io.github.inductiveautomation.kindling.core.Filter.filter","location":"kindling/io.github.inductiveautomation.kindling.core/-filter/filter.html","searchKeys":["filter","abstract fun filter(item: T): Boolean","io.github.inductiveautomation.kindling.core.Filter.filter"]},{"name":"abstract fun filterChanged()","description":"io.github.inductiveautomation.kindling.core.FilterChangeListener.filterChanged","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-change-listener/filter-changed.html","searchKeys":["filterChanged","abstract fun filterChanged()","io.github.inductiveautomation.kindling.core.FilterChangeListener.filterChanged"]},{"name":"abstract fun handleEvent(event: HyperlinkEvent)","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.handleEvent","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/handle-event.html","searchKeys":["handleEvent","abstract fun handleEvent(event: HyperlinkEvent)","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.handleEvent"]},{"name":"abstract fun isFilterApplied(): Boolean","description":"io.github.inductiveautomation.kindling.core.FilterPanel.isFilterApplied","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/is-filter-applied.html","searchKeys":["isFilterApplied","abstract fun isFilterApplied(): Boolean","io.github.inductiveautomation.kindling.core.FilterPanel.isFilterApplied"]},{"name":"abstract fun onBlockerSelected(threadId: Int)","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.BlockerSelectedEventListener.onBlockerSelected","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/-blocker-selected-event-listener/on-blocker-selected.html","searchKeys":["onBlockerSelected","abstract fun onBlockerSelected(threadId: Int)","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.BlockerSelectedEventListener.onBlockerSelected"]},{"name":"abstract fun open(connection: Connection): ToolPanel","description":"io.github.inductiveautomation.kindling.idb.IdbTool.open","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/open.html","searchKeys":["open","abstract fun open(connection: Connection): ToolPanel","io.github.inductiveautomation.kindling.idb.IdbTool.open"]},{"name":"abstract fun open(data: String): ToolPanel","description":"io.github.inductiveautomation.kindling.core.ClipboardTool.open","location":"kindling/io.github.inductiveautomation.kindling.core/-clipboard-tool/open.html","searchKeys":["open","abstract fun open(data: String): ToolPanel","io.github.inductiveautomation.kindling.core.ClipboardTool.open"]},{"name":"abstract fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.core.Tool.open","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/open.html","searchKeys":["open","abstract fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.core.Tool.open"]},{"name":"abstract fun open(paths: List<Path>): ToolPanel","description":"io.github.inductiveautomation.kindling.core.MultiTool.open","location":"kindling/io.github.inductiveautomation.kindling.core/-multi-tool/open.html","searchKeys":["open","abstract fun open(paths: List<Path>): ToolPanel","io.github.inductiveautomation.kindling.core.MultiTool.open"]},{"name":"abstract fun reset()","description":"io.github.inductiveautomation.kindling.core.FilterPanel.reset","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/reset.html","searchKeys":["reset","abstract fun reset()","io.github.inductiveautomation.kindling.core.FilterPanel.reset"]},{"name":"abstract fun supports(tables: List<String>): Boolean","description":"io.github.inductiveautomation.kindling.idb.IdbTool.supports","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/supports.html","searchKeys":["supports","abstract fun supports(tables: List<String>): Boolean","io.github.inductiveautomation.kindling.idb.IdbTool.supports"]},{"name":"abstract override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-row-count.html","searchKeys":["getRowCount","abstract override fun getRowCount(): Int","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getRowCount"]},{"name":"abstract override val icon: Icon?","description":"io.github.inductiveautomation.kindling.core.ToolPanel.icon","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/icon.html","searchKeys":["icon","abstract override val icon: Icon?","io.github.inductiveautomation.kindling.core.ToolPanel.icon"]},{"name":"abstract val component: JComponent","description":"io.github.inductiveautomation.kindling.core.FilterPanel.component","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/component.html","searchKeys":["component","abstract val component: JComponent","io.github.inductiveautomation.kindling.core.FilterPanel.component"]},{"name":"abstract val description: String","description":"io.github.inductiveautomation.kindling.core.Tool.description","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/description.html","searchKeys":["description","abstract val description: String","io.github.inductiveautomation.kindling.core.Tool.description"]},{"name":"abstract val displayName: String","description":"io.github.inductiveautomation.kindling.core.PreferenceCategory.displayName","location":"kindling/io.github.inductiveautomation.kindling.core/-preference-category/display-name.html","searchKeys":["displayName","abstract val displayName: String","io.github.inductiveautomation.kindling.core.PreferenceCategory.displayName"]},{"name":"abstract val filter: FileFilter","description":"io.github.inductiveautomation.kindling.core.Tool.filter","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/filter.html","searchKeys":["filter","abstract val filter: FileFilter","io.github.inductiveautomation.kindling.core.Tool.filter"]},{"name":"abstract val filterableColumns: List<Column<ThreadLifespan, out Any?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.filterableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/filterable-columns.html","searchKeys":["filterableColumns","abstract val filterableColumns: List<Column<ThreadLifespan, out Any?>>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.filterableColumns"]},{"name":"abstract val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.core.Tool.icon","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/icon.html","searchKeys":["icon","abstract val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.core.Tool.icon"]},{"name":"abstract val icon: Icon?","description":"io.github.inductiveautomation.kindling.utils.FloatableComponent.icon","location":"kindling/io.github.inductiveautomation.kindling.utils/-floatable-component/icon.html","searchKeys":["icon","abstract val icon: Icon?","io.github.inductiveautomation.kindling.utils.FloatableComponent.icon"]},{"name":"abstract val key: String","description":"io.github.inductiveautomation.kindling.core.PreferenceCategory.key","location":"kindling/io.github.inductiveautomation.kindling.core/-preference-category/key.html","searchKeys":["key","abstract val key: String","io.github.inductiveautomation.kindling.core.PreferenceCategory.key"]},{"name":"abstract val level: Level?","description":"io.github.inductiveautomation.kindling.log.LogEvent.level","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/level.html","searchKeys":["level","abstract val level: Level?","io.github.inductiveautomation.kindling.log.LogEvent.level"]},{"name":"abstract val logger: String","description":"io.github.inductiveautomation.kindling.log.LogEvent.logger","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/logger.html","searchKeys":["logger","abstract val logger: String","io.github.inductiveautomation.kindling.log.LogEvent.logger"]},{"name":"abstract val markableColumns: List<Column<ThreadLifespan, out Any?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.markableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/markable-columns.html","searchKeys":["markableColumns","abstract val markableColumns: List<Column<ThreadLifespan, out Any?>>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.markableColumns"]},{"name":"abstract val message: String","description":"io.github.inductiveautomation.kindling.log.LogEvent.message","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/message.html","searchKeys":["message","abstract val message: String","io.github.inductiveautomation.kindling.log.LogEvent.message"]},{"name":"abstract val paths: List<Path>","description":"io.github.inductiveautomation.kindling.zip.views.PathView.paths","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-path-view/paths.html","searchKeys":["paths","abstract val paths: List<Path>","io.github.inductiveautomation.kindling.zip.views.PathView.paths"]},{"name":"abstract val preferences: List<Preference<*>>","description":"io.github.inductiveautomation.kindling.core.PreferenceCategory.preferences","location":"kindling/io.github.inductiveautomation.kindling.core/-preference-category/preferences.html","searchKeys":["preferences","abstract val preferences: List<Preference<*>>","io.github.inductiveautomation.kindling.core.PreferenceCategory.preferences"]},{"name":"abstract val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.PathView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-path-view/provider.html","searchKeys":["provider","abstract val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.PathView.provider"]},{"name":"abstract val stacktrace: List<String>","description":"io.github.inductiveautomation.kindling.log.LogEvent.stacktrace","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/stacktrace.html","searchKeys":["stacktrace","abstract val stacktrace: List<String>","io.github.inductiveautomation.kindling.log.LogEvent.stacktrace"]},{"name":"abstract val tabName: String","description":"io.github.inductiveautomation.kindling.core.FilterPanel.tabName","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/tab-name.html","searchKeys":["tabName","abstract val tabName: String","io.github.inductiveautomation.kindling.core.FilterPanel.tabName"]},{"name":"abstract val tabName: String","description":"io.github.inductiveautomation.kindling.utils.FloatableComponent.tabName","location":"kindling/io.github.inductiveautomation.kindling.utils/-floatable-component/tab-name.html","searchKeys":["tabName","abstract val tabName: String","io.github.inductiveautomation.kindling.utils.FloatableComponent.tabName"]},{"name":"abstract val tabTooltip: String?","description":"io.github.inductiveautomation.kindling.utils.FloatableComponent.tabTooltip","location":"kindling/io.github.inductiveautomation.kindling.utils/-floatable-component/tab-tooltip.html","searchKeys":["tabTooltip","abstract val tabTooltip: String?","io.github.inductiveautomation.kindling.utils.FloatableComponent.tabTooltip"]},{"name":"abstract val timestamp: Instant","description":"io.github.inductiveautomation.kindling.log.LogEvent.timestamp","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/timestamp.html","searchKeys":["timestamp","abstract val timestamp: Instant","io.github.inductiveautomation.kindling.log.LogEvent.timestamp"]},{"name":"abstract val title: String","description":"io.github.inductiveautomation.kindling.core.Tool.title","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/title.html","searchKeys":["title","abstract val title: String","io.github.inductiveautomation.kindling.core.Tool.title"]},{"name":"abstract val userObject: T","description":"io.github.inductiveautomation.kindling.utils.TypedTreeNode.userObject","location":"kindling/io.github.inductiveautomation.kindling.utils/-typed-tree-node/user-object.html","searchKeys":["userObject","abstract val userObject: T","io.github.inductiveautomation.kindling.utils.TypedTreeNode.userObject"]},{"name":"abstract var marked: Boolean","description":"io.github.inductiveautomation.kindling.log.LogEvent.marked","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/marked.html","searchKeys":["marked","abstract var marked: Boolean","io.github.inductiveautomation.kindling.log.LogEvent.marked"]},{"name":"class AlarmJournalData(profileName: String?, tableName: String?, dataTableName: String?, source: String?, dispPath: String?, uuid: String?, priority: Int, eventType: Int, eventFlags: Int, val data: EventData, storedProps: EnumSet<EventPropertyType>) : Serializable","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/index.html","searchKeys":["AlarmJournalData","class AlarmJournalData(profileName: String?, tableName: String?, dataTableName: String?, source: String?, dispPath: String?, uuid: String?, priority: Int, eventType: Int, eventFlags: Int, val data: EventData, storedProps: EnumSet<EventPropertyType>) : Serializable","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData"]},{"name":"class AlarmJournalSFGroup(groupId: String, entries: List<AlarmJournalData>) : Serializable","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-s-f-group/index.html","searchKeys":["AlarmJournalSFGroup","class AlarmJournalSFGroup(groupId: String, entries: List<AlarmJournalData>) : Serializable","io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup"]},{"name":"class AliasingObjectInputStream : ObjectInputStream","description":"io.github.inductiveautomation.kindling.cache.AliasingObjectInputStream","location":"kindling/io.github.inductiveautomation.kindling.cache/-aliasing-object-input-stream/index.html","searchKeys":["AliasingObjectInputStream","class AliasingObjectInputStream : ObjectInputStream","io.github.inductiveautomation.kindling.cache.AliasingObjectInputStream"]},{"name":"class AuditProfileData(auditRecord: AuditRecord, insertQuery: String, parentLog: String) : Serializable","description":"io.github.inductiveautomation.kindling.cache.model.AuditProfileData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-audit-profile-data/index.html","searchKeys":["AuditProfileData","class AuditProfileData(auditRecord: AuditRecord, insertQuery: String, parentLog: String) : Serializable","io.github.inductiveautomation.kindling.cache.model.AuditProfileData"]},{"name":"class BasicDataset constructor(data: Array<Array<Any>> = emptyArray(), columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null) : AbstractDataset","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/index.html","searchKeys":["BasicDataset","class BasicDataset constructor(data: Array<Array<Any>> = emptyArray(), columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null) : AbstractDataset","io.github.inductiveautomation.kindling.cache.model.BasicDataset"]},{"name":"class CacheModel(entries: List<CacheEntry>) : AbstractTableModel","description":"io.github.inductiveautomation.kindling.cache.CacheModel","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/index.html","searchKeys":["CacheModel","class CacheModel(entries: List<CacheEntry>) : AbstractTableModel","io.github.inductiveautomation.kindling.cache.CacheModel"]},{"name":"class CacheView(path: Path) : ToolPanel","description":"io.github.inductiveautomation.kindling.cache.CacheView","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/index.html","searchKeys":["CacheView","class CacheView(path: Path) : ToolPanel","io.github.inductiveautomation.kindling.cache.CacheView"]},{"name":"class CustomIconView : FileView","description":"io.github.inductiveautomation.kindling.core.CustomIconView","location":"kindling/io.github.inductiveautomation.kindling.core/-custom-icon-view/index.html","searchKeys":["CustomIconView","class CustomIconView : FileView","io.github.inductiveautomation.kindling.core.CustomIconView"]},{"name":"class DBMetaDataTree(treeModel: TreeModel) : FlatTree","description":"io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-d-b-meta-data-tree/index.html","searchKeys":["DBMetaDataTree","class DBMetaDataTree(treeModel: TreeModel) : FlatTree","io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree"]},{"name":"class DateTimeSelector(initialValue: Instant, range: ClosedRange<Instant>) : JPanel","description":"io.github.inductiveautomation.kindling.log.DateTimeSelector","location":"kindling/io.github.inductiveautomation.kindling.log/-date-time-selector/index.html","searchKeys":["DateTimeSelector","class DateTimeSelector(initialValue: Instant, range: ClosedRange<Instant>) : JPanel","io.github.inductiveautomation.kindling.log.DateTimeSelector"]},{"name":"class DetailsEditorKit : HTMLEditorKit","description":"io.github.inductiveautomation.kindling.core.DetailsEditorKit","location":"kindling/io.github.inductiveautomation.kindling.core/-details-editor-kit/index.html","searchKeys":["DetailsEditorKit","class DetailsEditorKit : HTMLEditorKit","io.github.inductiveautomation.kindling.core.DetailsEditorKit"]},{"name":"class DetailsIcon(details: Map<String, String>) : JLabel","description":"io.github.inductiveautomation.kindling.internal.DetailsIcon","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-icon/index.html","searchKeys":["DetailsIcon","class DetailsIcon(details: Map<String, String>) : JLabel","io.github.inductiveautomation.kindling.internal.DetailsIcon"]},{"name":"class DetailsModel(details: List<Map.Entry<String, String>>) : AbstractTableModel","description":"io.github.inductiveautomation.kindling.internal.DetailsModel","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/index.html","searchKeys":["DetailsModel","class DetailsModel(details: List<Map.Entry<String, String>>) : AbstractTableModel","io.github.inductiveautomation.kindling.internal.DetailsModel"]},{"name":"class DetailsPane(initialEvents: List<Detail> = emptyList()) : JPanel","description":"io.github.inductiveautomation.kindling.core.DetailsPane","location":"kindling/io.github.inductiveautomation.kindling.core/-details-pane/index.html","searchKeys":["DetailsPane","class DetailsPane(initialEvents: List<Detail> = emptyList()) : JPanel","io.github.inductiveautomation.kindling.core.DetailsPane"]},{"name":"class DurationUnit(duration: Duration) : TemporalUnit","description":"io.github.inductiveautomation.kindling.log.DurationUnit","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/index.html","searchKeys":["DurationUnit","class DurationUnit(duration: Duration) : TemporalUnit","io.github.inductiveautomation.kindling.log.DurationUnit"]},{"name":"class Error(val details: String) : QueryResult","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-error/index.html","searchKeys":["Error","class Error(val details: String) : QueryResult","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error"]},{"name":"class FileFilter(description: String, predicate: (path: Path) -> Boolean) : FileFilter, FileFilter","description":"io.github.inductiveautomation.kindling.utils.FileFilter","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/index.html","searchKeys":["FileFilter","class FileFilter(description: String, predicate: (path: Path) -> Boolean) : FileFilter, FileFilter","io.github.inductiveautomation.kindling.utils.FileFilter"]},{"name":"class FileTransferHandler(callback: (List<File>) -> Unit) : TransferHandler","description":"io.github.inductiveautomation.kindling.internal.FileTransferHandler","location":"kindling/io.github.inductiveautomation.kindling.internal/-file-transfer-handler/index.html","searchKeys":["FileTransferHandler","class FileTransferHandler(callback: (List<File>) -> Unit) : TransferHandler","io.github.inductiveautomation.kindling.internal.FileTransferHandler"]},{"name":"class FilterList(initialComparator: FilterComparator = ByCountDescending, tooltipToStringFn: Stringifier? = null, toStringFn: Stringifier = { it?.toString() }) : CheckBoxList","description":"io.github.inductiveautomation.kindling.utils.FilterList","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/index.html","searchKeys":["FilterList","class FilterList(initialComparator: FilterComparator = ByCountDescending, tooltipToStringFn: Stringifier? = null, toStringFn: Stringifier = { it?.toString() }) : CheckBoxList","io.github.inductiveautomation.kindling.utils.FilterList"]},{"name":"class FilterModel<T>(val data: Map<T, Int>, val sortKey: (T) -> String?) : AbstractListModel<Any> ","description":"io.github.inductiveautomation.kindling.utils.FilterModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/index.html","searchKeys":["FilterModel","class FilterModel<T>(val data: Map<T, Int>, val sortKey: (T) -> String?) : AbstractListModel<Any> ","io.github.inductiveautomation.kindling.utils.FilterModel"]},{"name":"class FilterSidebar<T>(panels: FilterPanel<T>?) : FlatTabbedPane","description":"io.github.inductiveautomation.kindling.utils.FilterSidebar","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-sidebar/index.html","searchKeys":["FilterSidebar","class FilterSidebar<T>(panels: FilterPanel<T>?) : FlatTabbedPane","io.github.inductiveautomation.kindling.utils.FilterSidebar"]},{"name":"class GatewayNetworkViewer(tabName: String, tooltip: String, json: String) : ToolPanel","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-viewer/index.html","searchKeys":["GatewayNetworkViewer","class GatewayNetworkViewer(tabName: String, tooltip: String, json: String) : ToolPanel","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer"]},{"name":"class GenericFileView(val provider: FileSystemProvider, path: Path) : SinglePathView","description":"io.github.inductiveautomation.kindling.zip.views.GenericFileView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-generic-file-view/index.html","searchKeys":["GenericFileView","class GenericFileView(val provider: FileSystemProvider, path: Path) : SinglePathView","io.github.inductiveautomation.kindling.zip.views.GenericFileView"]},{"name":"class GenericView(connection: Connection) : ToolPanel","description":"io.github.inductiveautomation.kindling.idb.generic.GenericView","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-generic-view/index.html","searchKeys":["GenericView","class GenericView(connection: Connection) : ToolPanel","io.github.inductiveautomation.kindling.idb.generic.GenericView"]},{"name":"class IdbView(val path: Path) : ToolPanel","description":"io.github.inductiveautomation.kindling.idb.IdbView","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-view/index.html","searchKeys":["IdbView","class IdbView(val path: Path) : ToolPanel","io.github.inductiveautomation.kindling.idb.IdbView"]},{"name":"class ImageView(val provider: FileSystemProvider, path: Path) : SinglePathView","description":"io.github.inductiveautomation.kindling.zip.views.ImageView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/index.html","searchKeys":["ImageView","class ImageView(val provider: FileSystemProvider, path: Path) : SinglePathView","io.github.inductiveautomation.kindling.zip.views.ImageView"]},{"name":"class ImagesPanel(connection: Connection) : ToolPanel","description":"io.github.inductiveautomation.kindling.idb.ImagesPanel","location":"kindling/io.github.inductiveautomation.kindling.idb/-images-panel/index.html","searchKeys":["ImagesPanel","class ImagesPanel(connection: Connection) : ToolPanel","io.github.inductiveautomation.kindling.idb.ImagesPanel"]},{"name":"class LogPanel(rawData: List<LogEvent>) : ToolPanel","description":"io.github.inductiveautomation.kindling.log.LogPanel","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/index.html","searchKeys":["LogPanel","class LogPanel(rawData: List<LogEvent>) : ToolPanel","io.github.inductiveautomation.kindling.log.LogPanel"]},{"name":"class LogsModel<T : LogEvent>(val data: List<T>, val columns: LogColumnList<T>) : AbstractTableModel","description":"io.github.inductiveautomation.kindling.log.LogsModel","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/index.html","searchKeys":["LogsModel","class LogsModel<T : LogEvent>(val data: List<T>, val columns: LogColumnList<T>) : AbstractTableModel","io.github.inductiveautomation.kindling.log.LogsModel"]},{"name":"class MDCTableModel : AbstractTableModel, Filter<LogEvent> ","description":"io.github.inductiveautomation.kindling.log.MDCTableModel","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/index.html","searchKeys":["MDCTableModel","class MDCTableModel : AbstractTableModel, Filter<LogEvent> ","io.github.inductiveautomation.kindling.log.MDCTableModel"]},{"name":"class MainPanel : JPanel","description":"io.github.inductiveautomation.kindling.MainPanel","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/index.html","searchKeys":["MainPanel","class MainPanel : JPanel","io.github.inductiveautomation.kindling.MainPanel"]},{"name":"class MetricCard(val metric: Metric, data: List<MetricData>) : JPanel","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/index.html","searchKeys":["MetricCard","class MetricCard(val metric: Metric, data: List<MetricData>) : JPanel","io.github.inductiveautomation.kindling.idb.metrics.MetricCard"]},{"name":"class MetricModel(metrics: List<Metric>) : DefaultTreeModel","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricModel","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-model/index.html","searchKeys":["MetricModel","class MetricModel(metrics: List<Metric>) : DefaultTreeModel","io.github.inductiveautomation.kindling.idb.metrics.MetricModel"]},{"name":"class MetricTree(metrics: List<Metric>) : CheckBoxTree","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricTree","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-tree/index.html","searchKeys":["MetricTree","class MetricTree(metrics: List<Metric>) : CheckBoxTree","io.github.inductiveautomation.kindling.idb.metrics.MetricTree"]},{"name":"class MetricsView(connection: Connection) : ToolPanel","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricsView","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metrics-view/index.html","searchKeys":["MetricsView","class MetricsView(connection: Connection) : ToolPanel","io.github.inductiveautomation.kindling.idb.metrics.MetricsView"]},{"name":"class MultiThreadView(val paths: List<Path>) : ToolPanel","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/index.html","searchKeys":["MultiThreadView","class MultiThreadView(val paths: List<Path>) : ToolPanel","io.github.inductiveautomation.kindling.thread.MultiThreadView"]},{"name":"class MultiToolView(val provider: FileSystemProvider, val paths: List<Path>) : PathView","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/index.html","searchKeys":["MultiToolView","class MultiToolView(val provider: FileSystemProvider, val paths: List<Path>) : PathView","io.github.inductiveautomation.kindling.zip.views.MultiToolView"]},{"name":"class NoSelectionModel : DefaultListSelectionModel","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/index.html","searchKeys":["NoSelectionModel","class NoSelectionModel : DefaultListSelectionModel","io.github.inductiveautomation.kindling.utils.NoSelectionModel"]},{"name":"class PoolPanel : FilterListPanel<Thread?> ","description":"io.github.inductiveautomation.kindling.thread.PoolPanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-pool-panel/index.html","searchKeys":["PoolPanel","class PoolPanel : FilterListPanel<Thread?> ","io.github.inductiveautomation.kindling.thread.PoolPanel"]},{"name":"class Preference<T : Any>(val category: PreferenceCategory, val name: String, val description: String? = null, val requiresRestart: Boolean = false, default: T, val serializer: KSerializer<T>, createEditor: Preference<T>.() -> JComponent?)","description":"io.github.inductiveautomation.kindling.core.Preference","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/index.html","searchKeys":["Preference","class Preference<T : Any>(val category: PreferenceCategory, val name: String, val description: String? = null, val requiresRestart: Boolean = false, default: T, val serializer: KSerializer<T>, createEditor: Preference<T>.() -> JComponent?)","io.github.inductiveautomation.kindling.core.Preference"]},{"name":"class ProjectView(val provider: FileSystemProvider, path: Path) : SinglePathView","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/index.html","searchKeys":["ProjectView","class ProjectView(val provider: FileSystemProvider, path: Path) : SinglePathView","io.github.inductiveautomation.kindling.zip.views.ProjectView"]},{"name":"class ReifiedJXTable<T : TableModel>(model: T, modelClass: Class<T>, columns: ColumnList<*>?) : JXTable","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/index.html","searchKeys":["ReifiedJXTable","class ReifiedJXTable<T : TableModel>(model: T, modelClass: Class<T>, columns: ColumnList<*>?) : JXTable","io.github.inductiveautomation.kindling.utils.ReifiedJXTable"]},{"name":"class ReifiedLabelProvider<T : Any>(valueClass: KClass<T>, getText: StringProvider<T>, getIcon: IconProvider<T>, getTooltip: StringProvider<T>) : ComponentProvider<JLabel> ","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/index.html","searchKeys":["ReifiedLabelProvider","class ReifiedLabelProvider<T : Any>(valueClass: KClass<T>, getText: StringProvider<T>, getIcon: IconProvider<T>, getTooltip: StringProvider<T>) : ComponentProvider<JLabel> ","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider"]},{"name":"class ResultsPanel : JPanel","description":"io.github.inductiveautomation.kindling.idb.generic.ResultsPanel","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-results-panel/index.html","searchKeys":["ResultsPanel","class ResultsPanel : JPanel","io.github.inductiveautomation.kindling.idb.generic.ResultsPanel"]},{"name":"class RootImageNode(connection: Connection) : AbstractTreeNode","description":"io.github.inductiveautomation.kindling.idb.RootImageNode","location":"kindling/io.github.inductiveautomation.kindling.idb/-root-image-node/index.html","searchKeys":["RootImageNode","class RootImageNode(connection: Connection) : AbstractTreeNode","io.github.inductiveautomation.kindling.idb.RootImageNode"]},{"name":"class RootNode(metrics: List<Metric>) : AbstractTreeNode","description":"io.github.inductiveautomation.kindling.idb.metrics.RootNode","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-root-node/index.html","searchKeys":["RootNode","class RootNode(metrics: List<Metric>) : AbstractTreeNode","io.github.inductiveautomation.kindling.idb.metrics.RootNode"]},{"name":"class RootNode(zipFile: FileSystem) : AbstractTreeNode","description":"io.github.inductiveautomation.kindling.utils.RootNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-root-node/index.html","searchKeys":["RootNode","class RootNode(zipFile: FileSystem) : AbstractTreeNode","io.github.inductiveautomation.kindling.utils.RootNode"]},{"name":"class SchemaFilterList(modelData: List<SchemaRecord>) : CheckBoxList","description":"io.github.inductiveautomation.kindling.cache.SchemaFilterList","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-filter-list/index.html","searchKeys":["SchemaFilterList","class SchemaFilterList(modelData: List<SchemaRecord>) : CheckBoxList","io.github.inductiveautomation.kindling.cache.SchemaFilterList"]},{"name":"class SchemaModel(data: List<SchemaRecord>) : AbstractListModel<Any> ","description":"io.github.inductiveautomation.kindling.cache.SchemaModel","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-model/index.html","searchKeys":["SchemaModel","class SchemaModel(data: List<SchemaRecord>) : AbstractListModel<Any> ","io.github.inductiveautomation.kindling.cache.SchemaModel"]},{"name":"class ScriptedSFData(val query: String, val datasource: String, val values: Array<Any?>) : Serializable","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/index.html","searchKeys":["ScriptedSFData","class ScriptedSFData(val query: String, val datasource: String, val values: Array<Any?>) : Serializable","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData"]},{"name":"class ScrollingTextPane : FlatScrollPane","description":"io.github.inductiveautomation.kindling.utils.ScrollingTextPane","location":"kindling/io.github.inductiveautomation.kindling.utils/-scrolling-text-pane/index.html","searchKeys":["ScrollingTextPane","class ScrollingTextPane : FlatScrollPane","io.github.inductiveautomation.kindling.utils.ScrollingTextPane"]},{"name":"class SortableTree(val tables: List<Table>)","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/index.html","searchKeys":["SortableTree","class SortableTree(val tables: List<Table>)","io.github.inductiveautomation.kindling.idb.generic.SortableTree"]},{"name":"class StatePanel : FilterPanel<Thread?> ","description":"io.github.inductiveautomation.kindling.thread.StatePanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/index.html","searchKeys":["StatePanel","class StatePanel : FilterPanel<Thread?> ","io.github.inductiveautomation.kindling.thread.StatePanel"]},{"name":"class Success(val columnNames: List<String>, columnTypes: List<Class<*>>, val data: List<List<*>>) : AbstractTableModel, QueryResult","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/index.html","searchKeys":["Success","class Success(val columnNames: List<String>, columnTypes: List<Class<*>>, val data: List<List<*>>) : AbstractTableModel, QueryResult","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success"]},{"name":"class SystemPanel : FilterListPanel<Thread?> ","description":"io.github.inductiveautomation.kindling.thread.SystemPanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-system-panel/index.html","searchKeys":["SystemPanel","class SystemPanel : FilterListPanel<Thread?> ","io.github.inductiveautomation.kindling.thread.SystemPanel"]},{"name":"class TabStrip : FlatTabbedPane","description":"io.github.inductiveautomation.kindling.utils.TabStrip","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/index.html","searchKeys":["TabStrip","class TabStrip : FlatTabbedPane","io.github.inductiveautomation.kindling.utils.TabStrip"]},{"name":"class TextFileView(val provider: FileSystemProvider, path: Path) : SinglePathView","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/index.html","searchKeys":["TextFileView","class TextFileView(val provider: FileSystemProvider, path: Path) : SinglePathView","io.github.inductiveautomation.kindling.zip.views.TextFileView"]},{"name":"class ThemeSelectionDropdown : JComboBox<Theme> ","description":"io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown","location":"kindling/io.github.inductiveautomation.kindling.core/-theme-selection-dropdown/index.html","searchKeys":["ThemeSelectionDropdown","class ThemeSelectionDropdown : JComboBox<Theme> ","io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown"]},{"name":"class ThreadComparisonPane(totalThreadDumps: Int, version: String) : JPanel","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/index.html","searchKeys":["ThreadComparisonPane","class ThreadComparisonPane(totalThreadDumps: Int, version: String) : JPanel","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane"]},{"name":"class ThreadDumpCheckboxList(data: List<Path>) : CheckBoxList","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-checkbox-list/index.html","searchKeys":["ThreadDumpCheckboxList","class ThreadDumpCheckboxList(data: List<Path>) : CheckBoxList","io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList"]},{"name":"class ThreadDumpListModel(values: List<Path>) : AbstractListModel<Any> ","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpListModel","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-list-model/index.html","searchKeys":["ThreadDumpListModel","class ThreadDumpListModel(values: List<Path>) : AbstractListModel<Any> ","io.github.inductiveautomation.kindling.thread.ThreadDumpListModel"]},{"name":"class ThreadModel(val threadData: List<ThreadLifespan>) : AbstractTableModel","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/index.html","searchKeys":["ThreadModel","class ThreadModel(val threadData: List<ThreadLifespan>) : AbstractTableModel","io.github.inductiveautomation.kindling.thread.model.ThreadModel"]},{"name":"class TimeSelector : JPanel","description":"io.github.inductiveautomation.kindling.log.TimeSelector","location":"kindling/io.github.inductiveautomation.kindling.log/-time-selector/index.html","searchKeys":["TimeSelector","class TimeSelector : JPanel","io.github.inductiveautomation.kindling.log.TimeSelector"]},{"name":"class ToolOpeningException(message: String, cause: Throwable? = null) : Exception","description":"io.github.inductiveautomation.kindling.core.ToolOpeningException","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-opening-exception/index.html","searchKeys":["ToolOpeningException","class ToolOpeningException(message: String, cause: Throwable? = null) : Exception","io.github.inductiveautomation.kindling.core.ToolOpeningException"]},{"name":"class ToolView(val provider: FileSystemProvider, path: Path) : SinglePathView","description":"io.github.inductiveautomation.kindling.zip.views.ToolView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/index.html","searchKeys":["ToolView","class ToolView(val provider: FileSystemProvider, path: Path) : SinglePathView","io.github.inductiveautomation.kindling.zip.views.ToolView"]},{"name":"class WrapperLogView(events: List<WrapperLogEvent>, tabName: String, fromFile: Boolean) : ToolPanel","description":"io.github.inductiveautomation.kindling.log.WrapperLogView","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/index.html","searchKeys":["WrapperLogView","class WrapperLogView(events: List<WrapperLogEvent>, tabName: String, fromFile: Boolean) : ToolPanel","io.github.inductiveautomation.kindling.log.WrapperLogView"]},{"name":"class ZipFileModel(fileSystem: FileSystem) : DefaultTreeModel","description":"io.github.inductiveautomation.kindling.utils.ZipFileModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-model/index.html","searchKeys":["ZipFileModel","class ZipFileModel(fileSystem: FileSystem) : DefaultTreeModel","io.github.inductiveautomation.kindling.utils.ZipFileModel"]},{"name":"class ZipFileTree(fileSystem: FileSystem) : JTree","description":"io.github.inductiveautomation.kindling.utils.ZipFileTree","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-tree/index.html","searchKeys":["ZipFileTree","class ZipFileTree(fileSystem: FileSystem) : JTree","io.github.inductiveautomation.kindling.utils.ZipFileTree"]},{"name":"class ZipView(path: Path) : ToolPanel","description":"io.github.inductiveautomation.kindling.zip.ZipView","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/index.html","searchKeys":["ZipView","class ZipView(path: Path) : ToolPanel","io.github.inductiveautomation.kindling.zip.ZipView"]},{"name":"const val BACKUP_INFO: String","description":"io.github.inductiveautomation.kindling.zip.ZipView.Constants.BACKUP_INFO","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/-constants/-b-a-c-k-u-p_-i-n-f-o.html","searchKeys":["BACKUP_INFO","const val BACKUP_INFO: String","io.github.inductiveautomation.kindling.zip.ZipView.Constants.BACKUP_INFO"]},{"name":"const val MODULE_INFO: String","description":"io.github.inductiveautomation.kindling.zip.ZipView.Constants.MODULE_INFO","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/-constants/-m-o-d-u-l-e_-i-n-f-o.html","searchKeys":["MODULE_INFO","const val MODULE_INFO: String","io.github.inductiveautomation.kindling.zip.ZipView.Constants.MODULE_INFO"]},{"name":"const val SECONDARY_ACTION_ICON_SCALE: Float = 0.75f","description":"io.github.inductiveautomation.kindling.core.Kindling.SECONDARY_ACTION_ICON_SCALE","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-s-e-c-o-n-d-a-r-y_-a-c-t-i-o-n_-i-c-o-n_-s-c-a-l-e.html","searchKeys":["SECONDARY_ACTION_ICON_SCALE","const val SECONDARY_ACTION_ICON_SCALE: Float = 0.75f","io.github.inductiveautomation.kindling.core.Kindling.SECONDARY_ACTION_ICON_SCALE"]},{"name":"const val STDOUT: String","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.Companion.STDOUT","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/-companion/-s-t-d-o-u-t.html","searchKeys":["STDOUT","const val STDOUT: String","io.github.inductiveautomation.kindling.log.WrapperLogEvent.Companion.STDOUT"]},{"name":"constructor()","description":"deser.support.ClassDataDesc.ClassDataDesc","location":"kindling/deser.support/-class-data-desc/-class-data-desc.html","searchKeys":["ClassDataDesc","constructor()","deser.support.ClassDataDesc.ClassDataDesc"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.MainPanel.MainPanel","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/-main-panel.html","searchKeys":["MainPanel","constructor()","io.github.inductiveautomation.kindling.MainPanel.MainPanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.core.CustomIconView.CustomIconView","location":"kindling/io.github.inductiveautomation.kindling.core/-custom-icon-view/-custom-icon-view.html","searchKeys":["CustomIconView","constructor()","io.github.inductiveautomation.kindling.core.CustomIconView.CustomIconView"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.core.DetailsEditorKit.DetailsEditorKit","location":"kindling/io.github.inductiveautomation.kindling.core/-details-editor-kit/-details-editor-kit.html","searchKeys":["DetailsEditorKit","constructor()","io.github.inductiveautomation.kindling.core.DetailsEditorKit.DetailsEditorKit"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.core.FilterPanel.FilterPanel","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/-filter-panel.html","searchKeys":["FilterPanel","constructor()","io.github.inductiveautomation.kindling.core.FilterPanel.FilterPanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown.ThemeSelectionDropdown","location":"kindling/io.github.inductiveautomation.kindling.core/-theme-selection-dropdown/-theme-selection-dropdown.html","searchKeys":["ThemeSelectionDropdown","constructor()","io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown.ThemeSelectionDropdown"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.Success","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/-success.html","searchKeys":["Success","constructor()","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.Success"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.ResultsPanel","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-results-panel/-results-panel.html","searchKeys":["ResultsPanel","constructor()","io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.ResultsPanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.GroupingScrollBar","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-grouping-scroll-bar/-grouping-scroll-bar.html","searchKeys":["GroupingScrollBar","constructor()","io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.GroupingScrollBar"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.MDCTableModel","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/-m-d-c-table-model.html","searchKeys":["MDCTableModel","constructor()","io.github.inductiveautomation.kindling.log.MDCTableModel.MDCTableModel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.log.TimeSelector.TimeSelector","location":"kindling/io.github.inductiveautomation.kindling.log/-time-selector/-time-selector.html","searchKeys":["TimeSelector","constructor()","io.github.inductiveautomation.kindling.log.TimeSelector.TimeSelector"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.thread.PoolPanel.PoolPanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-pool-panel/-pool-panel.html","searchKeys":["PoolPanel","constructor()","io.github.inductiveautomation.kindling.thread.PoolPanel.PoolPanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.thread.StatePanel.StatePanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/-state-panel.html","searchKeys":["StatePanel","constructor()","io.github.inductiveautomation.kindling.thread.StatePanel.StatePanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.thread.SystemPanel.SystemPanel","location":"kindling/io.github.inductiveautomation.kindling.thread/-system-panel/-system-panel.html","searchKeys":["SystemPanel","constructor()","io.github.inductiveautomation.kindling.thread.SystemPanel.SystemPanel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.AbstractTreeNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/-abstract-tree-node.html","searchKeys":["AbstractTreeNode","constructor()","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.AbstractTreeNode"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.ColumnList.ColumnList","location":"kindling/io.github.inductiveautomation.kindling.utils/-column-list/-column-list.html","searchKeys":["ColumnList","constructor()","io.github.inductiveautomation.kindling.utils.ColumnList.ColumnList"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.NoSelectionModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/-no-selection-model.html","searchKeys":["NoSelectionModel","constructor()","io.github.inductiveautomation.kindling.utils.NoSelectionModel.NoSelectionModel"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.ScrollingTextPane.ScrollingTextPane","location":"kindling/io.github.inductiveautomation.kindling.utils/-scrolling-text-pane/-scrolling-text-pane.html","searchKeys":["ScrollingTextPane","constructor()","io.github.inductiveautomation.kindling.utils.ScrollingTextPane.ScrollingTextPane"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.TabStrip.TabStrip","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-tab-strip.html","searchKeys":["TabStrip","constructor()","io.github.inductiveautomation.kindling.utils.TabStrip.TabStrip"]},{"name":"constructor()","description":"io.github.inductiveautomation.kindling.utils.TypedTreeNode.TypedTreeNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-typed-tree-node/-typed-tree-node.html","searchKeys":["TypedTreeNode","constructor()","io.github.inductiveautomation.kindling.utils.TypedTreeNode.TypedTreeNode"]},{"name":"constructor(auditRecord: AuditRecord, insertQuery: String, parentLog: String)","description":"io.github.inductiveautomation.kindling.cache.model.AuditProfileData.AuditProfileData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-audit-profile-data/-audit-profile-data.html","searchKeys":["AuditProfileData","constructor(auditRecord: AuditRecord, insertQuery: String, parentLog: String)","io.github.inductiveautomation.kindling.cache.model.AuditProfileData.AuditProfileData"]},{"name":"constructor(callback: (List<File>) -> Unit)","description":"io.github.inductiveautomation.kindling.internal.FileTransferHandler.FileTransferHandler","location":"kindling/io.github.inductiveautomation.kindling.internal/-file-transfer-handler/-file-transfer-handler.html","searchKeys":["FileTransferHandler","constructor(callback: (List<File>) -> Unit)","io.github.inductiveautomation.kindling.internal.FileTransferHandler.FileTransferHandler"]},{"name":"constructor(category: PreferenceCategory, name: String, description: String? = null, requiresRestart: Boolean = false, default: T, serializer: KSerializer<T>, createEditor: Preference<T>.() -> JComponent?)","description":"io.github.inductiveautomation.kindling.core.Preference.Preference","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/-preference.html","searchKeys":["Preference","constructor(category: PreferenceCategory, name: String, description: String? = null, requiresRestart: Boolean = false, default: T, serializer: KSerializer<T>, createEditor: Preference<T>.() -> JComponent?)","io.github.inductiveautomation.kindling.core.Preference.Preference"]},{"name":"constructor(className: String)","description":"deser.support.ClassDetails.ClassDetails","location":"kindling/deser.support/-class-details/-class-details.html","searchKeys":["ClassDetails","constructor(className: String)","deser.support.ClassDetails.ClassDetails"]},{"name":"constructor(columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null)","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.AbstractDataset","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/-abstract-dataset.html","searchKeys":["AbstractDataset","constructor(columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null)","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.AbstractDataset"]},{"name":"constructor(columnNames: List<String>, columnTypes: List<Class<*>>, data: List<List<*>>)","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.Success","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/-success.html","searchKeys":["Success","constructor(columnNames: List<String>, columnTypes: List<Class<*>>, data: List<List<*>>)","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.Success"]},{"name":"constructor(comparator: FilterComparator)","description":"io.github.inductiveautomation.kindling.utils.FilterList.SortAction.SortAction","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/-sort-action/-sort-action.html","searchKeys":["SortAction","constructor(comparator: FilterComparator)","io.github.inductiveautomation.kindling.utils.FilterList.SortAction.SortAction"]},{"name":"constructor(comparator: TableComparator)","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction.SortAction","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/-sort-action/-sort-action.html","searchKeys":["SortAction","constructor(comparator: TableComparator)","io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction.SortAction"]},{"name":"constructor(connection: Connection)","description":"io.github.inductiveautomation.kindling.idb.ImagesPanel.ImagesPanel","location":"kindling/io.github.inductiveautomation.kindling.idb/-images-panel/-images-panel.html","searchKeys":["ImagesPanel","constructor(connection: Connection)","io.github.inductiveautomation.kindling.idb.ImagesPanel.ImagesPanel"]},{"name":"constructor(connection: Connection)","description":"io.github.inductiveautomation.kindling.idb.RootImageNode.RootImageNode","location":"kindling/io.github.inductiveautomation.kindling.idb/-root-image-node/-root-image-node.html","searchKeys":["RootImageNode","constructor(connection: Connection)","io.github.inductiveautomation.kindling.idb.RootImageNode.RootImageNode"]},{"name":"constructor(connection: Connection)","description":"io.github.inductiveautomation.kindling.idb.generic.GenericView.GenericView","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-generic-view/-generic-view.html","searchKeys":["GenericView","constructor(connection: Connection)","io.github.inductiveautomation.kindling.idb.generic.GenericView.GenericView"]},{"name":"constructor(connection: Connection)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricsView.MetricsView","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metrics-view/-metrics-view.html","searchKeys":["MetricsView","constructor(connection: Connection)","io.github.inductiveautomation.kindling.idb.metrics.MetricsView.MetricsView"]},{"name":"constructor(constraints: String = \"ins 6, fill\")","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView.SinglePathView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/-single-path-view.html","searchKeys":["SinglePathView","constructor(constraints: String = \"ins 6, fill\")","io.github.inductiveautomation.kindling.zip.views.SinglePathView.SinglePathView"]},{"name":"constructor(data: Array<Array<Any>> = emptyArray(), columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null)","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.BasicDataset","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/-basic-dataset.html","searchKeys":["BasicDataset","constructor(data: Array<Array<Any>> = emptyArray(), columnNames: List<String> = emptyList(), columnTypes: List<Class<*>> = emptyList(), qualityCodes: Array<Array<QualityCode>>? = null)","io.github.inductiveautomation.kindling.cache.model.BasicDataset.BasicDataset"]},{"name":"constructor(data: Array<Byte>)","description":"deser.SerializationDumper.SerializationDumper","location":"kindling/deser/-serialization-dumper/-serialization-dumper.html","searchKeys":["SerializationDumper","constructor(data: Array<Byte>)","deser.SerializationDumper.SerializationDumper"]},{"name":"constructor(data: List<Path>)","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.ThreadDumpCheckboxList","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-checkbox-list/-thread-dump-checkbox-list.html","searchKeys":["ThreadDumpCheckboxList","constructor(data: List<Path>)","io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.ThreadDumpCheckboxList"]},{"name":"constructor(data: List<SchemaRecord>)","description":"io.github.inductiveautomation.kindling.cache.SchemaModel.SchemaModel","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-model/-schema-model.html","searchKeys":["SchemaModel","constructor(data: List<SchemaRecord>)","io.github.inductiveautomation.kindling.cache.SchemaModel.SchemaModel"]},{"name":"constructor(data: List<T>, columns: LogColumnList<T>)","description":"io.github.inductiveautomation.kindling.log.LogsModel.LogsModel","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/-logs-model.html","searchKeys":["LogsModel","constructor(data: List<T>, columns: LogColumnList<T>)","io.github.inductiveautomation.kindling.log.LogsModel.LogsModel"]},{"name":"constructor(data: Map<T, Int>, sortKey: (T) -> String?)","description":"io.github.inductiveautomation.kindling.utils.FilterModel.FilterModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/-filter-model.html","searchKeys":["FilterModel","constructor(data: Map<T, Int>, sortKey: (T) -> String?)","io.github.inductiveautomation.kindling.utils.FilterModel.FilterModel"]},{"name":"constructor(description: String, extensions: List<String>)","description":"io.github.inductiveautomation.kindling.utils.FileFilter.FileFilter","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/-file-filter.html","searchKeys":["FileFilter","constructor(description: String, extensions: List<String>)","io.github.inductiveautomation.kindling.utils.FileFilter.FileFilter"]},{"name":"constructor(description: String, predicate: (path: Path) -> Boolean)","description":"io.github.inductiveautomation.kindling.utils.FileFilter.FileFilter","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/-file-filter.html","searchKeys":["FileFilter","constructor(description: String, predicate: (path: Path) -> Boolean)","io.github.inductiveautomation.kindling.utils.FileFilter.FileFilter"]},{"name":"constructor(details: List<Map.Entry<String, String>>)","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsModel","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/-details-model.html","searchKeys":["DetailsModel","constructor(details: List<Map.Entry<String, String>>)","io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsModel"]},{"name":"constructor(details: Map<String, String>)","description":"io.github.inductiveautomation.kindling.internal.DetailsIcon.DetailsIcon","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-icon/-details-icon.html","searchKeys":["DetailsIcon","constructor(details: Map<String, String>)","io.github.inductiveautomation.kindling.internal.DetailsIcon.DetailsIcon"]},{"name":"constructor(details: String)","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error.Error","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-error/-error.html","searchKeys":["Error","constructor(details: String)","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error.Error"]},{"name":"constructor(duration: Duration)","description":"io.github.inductiveautomation.kindling.log.DurationUnit.DurationUnit","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/-duration-unit.html","searchKeys":["DurationUnit","constructor(duration: Duration)","io.github.inductiveautomation.kindling.log.DurationUnit.DurationUnit"]},{"name":"constructor(entries: List<CacheEntry>)","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheModel","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-model.html","searchKeys":["CacheModel","constructor(entries: List<CacheEntry>)","io.github.inductiveautomation.kindling.cache.CacheModel.CacheModel"]},{"name":"constructor(events: List<WrapperLogEvent>, tabName: String, fromFile: Boolean)","description":"io.github.inductiveautomation.kindling.log.WrapperLogView.WrapperLogView","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/-wrapper-log-view.html","searchKeys":["WrapperLogView","constructor(events: List<WrapperLogEvent>, tabName: String, fromFile: Boolean)","io.github.inductiveautomation.kindling.log.WrapperLogView.WrapperLogView"]},{"name":"constructor(fileSystem: FileSystem)","description":"io.github.inductiveautomation.kindling.utils.ZipFileModel.ZipFileModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-model/-zip-file-model.html","searchKeys":["ZipFileModel","constructor(fileSystem: FileSystem)","io.github.inductiveautomation.kindling.utils.ZipFileModel.ZipFileModel"]},{"name":"constructor(fileSystem: FileSystem)","description":"io.github.inductiveautomation.kindling.utils.ZipFileTree.ZipFileTree","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-tree/-zip-file-tree.html","searchKeys":["ZipFileTree","constructor(fileSystem: FileSystem)","io.github.inductiveautomation.kindling.utils.ZipFileTree.ZipFileTree"]},{"name":"constructor(groupId: String, entries: List<AlarmJournalData>)","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.AlarmJournalSFGroup","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-s-f-group/-alarm-journal-s-f-group.html","searchKeys":["AlarmJournalSFGroup","constructor(groupId: String, entries: List<AlarmJournalData>)","io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.AlarmJournalSFGroup"]},{"name":"constructor(header: String, getValue: (row: R) -> C, columnCustomization: TableColumnExt.(model: TableModel) -> Unit?, clazz: Class<C>)","description":"io.github.inductiveautomation.kindling.utils.Column.Column","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/-column.html","searchKeys":["Column","constructor(header: String, getValue: (row: R) -> C, columnCustomization: TableColumnExt.(model: TableModel) -> Unit?, clazz: Class<C>)","io.github.inductiveautomation.kindling.utils.Column.Column"]},{"name":"constructor(id: Int, name: String, errors: List<String>)","description":"io.github.inductiveautomation.kindling.cache.SchemaRecord.SchemaRecord","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-record/-schema-record.html","searchKeys":["SchemaRecord","constructor(id: Int, name: String, errors: List<String>)","io.github.inductiveautomation.kindling.cache.SchemaRecord.SchemaRecord"]},{"name":"constructor(id: Int, name: String, state: Thread.State, isDaemon: Boolean, system: String? = null, scope: String? = null, cpuUsage: Double? = null, lockedMonitors: List<Thread.Monitors> = emptyList(), lockedSynchronizers: List<String> = emptyList(), blocker: Thread.Blocker? = null, stacktrace: StackTrace = emptyList())","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Thread","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-thread.html","searchKeys":["Thread","constructor(id: Int, name: String, state: Thread.State, isDaemon: Boolean, system: String? = null, scope: String? = null, cpuUsage: Double? = null, lockedMonitors: List<Thread.Monitors> = emptyList(), lockedSynchronizers: List<String> = emptyList(), blocker: Thread.Blocker? = null, stacktrace: StackTrace = emptyList())","io.github.inductiveautomation.kindling.thread.model.Thread.Thread"]},{"name":"constructor(id: Int, schemaId: Int, schemaName: String, timestamp: String, attemptCount: Int, dataCount: Int)","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.CacheEntry","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/-cache-entry.html","searchKeys":["CacheEntry","constructor(id: Int, schemaId: Int, schemaName: String, timestamp: String, attemptCount: Int, dataCount: Int)","io.github.inductiveautomation.kindling.cache.CacheEntry.CacheEntry"]},{"name":"constructor(id: Int, signature: String, message: String?)","description":"io.github.inductiveautomation.kindling.cache.SchemaRow.SchemaRow","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-row/-schema-row.html","searchKeys":["SchemaRow","constructor(id: Int, signature: String, message: String?)","io.github.inductiveautomation.kindling.cache.SchemaRow.SchemaRow"]},{"name":"constructor(initialComparator: FilterComparator = ByCountDescending, tooltipToStringFn: Stringifier? = null, toStringFn: Stringifier = { it?.toString() })","description":"io.github.inductiveautomation.kindling.utils.FilterList.FilterList","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/-filter-list.html","searchKeys":["FilterList","constructor(initialComparator: FilterComparator = ByCountDescending, tooltipToStringFn: Stringifier? = null, toStringFn: Stringifier = { it?.toString() })","io.github.inductiveautomation.kindling.utils.FilterList.FilterList"]},{"name":"constructor(initialEvents: List<Detail> = emptyList())","description":"io.github.inductiveautomation.kindling.core.DetailsPane.DetailsPane","location":"kindling/io.github.inductiveautomation.kindling.core/-details-pane/-details-pane.html","searchKeys":["DetailsPane","constructor(initialEvents: List<Detail> = emptyList())","io.github.inductiveautomation.kindling.core.DetailsPane.DetailsPane"]},{"name":"constructor(initialValue: Instant, range: ClosedRange<Instant>)","description":"io.github.inductiveautomation.kindling.log.DateTimeSelector.DateTimeSelector","location":"kindling/io.github.inductiveautomation.kindling.log/-date-time-selector/-date-time-selector.html","searchKeys":["DateTimeSelector","constructor(initialValue: Instant, range: ClosedRange<Instant>)","io.github.inductiveautomation.kindling.log.DateTimeSelector.DateTimeSelector"]},{"name":"constructor(inputStream: InputStream, block: MutableMap<String, Class<*>>.() -> Unit)","description":"io.github.inductiveautomation.kindling.cache.AliasingObjectInputStream.AliasingObjectInputStream","location":"kindling/io.github.inductiveautomation.kindling.cache/-aliasing-object-input-stream/-aliasing-object-input-stream.html","searchKeys":["AliasingObjectInputStream","constructor(inputStream: InputStream, block: MutableMap<String, Class<*>>.() -> Unit)","io.github.inductiveautomation.kindling.cache.AliasingObjectInputStream.AliasingObjectInputStream"]},{"name":"constructor(key: String, value: String?)","description":"io.github.inductiveautomation.kindling.log.MDC.MDC","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c/-m-d-c.html","searchKeys":["MDC","constructor(key: String, value: String?)","io.github.inductiveautomation.kindling.log.MDC.MDC"]},{"name":"constructor(key: String, value: String?, inclusive: Boolean = true)","description":"io.github.inductiveautomation.kindling.log.MDCTableRow.MDCTableRow","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/-m-d-c-table-row.html","searchKeys":["MDCTableRow","constructor(key: String, value: String?, inclusive: Boolean = true)","io.github.inductiveautomation.kindling.log.MDCTableRow.MDCTableRow"]},{"name":"constructor(key: String?, count: Int)","description":"io.github.inductiveautomation.kindling.utils.FilterModelEntry.FilterModelEntry","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model-entry/-filter-model-entry.html","searchKeys":["FilterModelEntry","constructor(key: String?, count: Int)","io.github.inductiveautomation.kindling.utils.FilterModelEntry.FilterModelEntry"]},{"name":"constructor(layoutConstraints: String = \"ins 6, fill, hidemode 3\")","description":"io.github.inductiveautomation.kindling.core.ToolPanel.ToolPanel","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/-tool-panel.html","searchKeys":["ToolPanel","constructor(layoutConstraints: String = \"ins 6, fill, hidemode 3\")","io.github.inductiveautomation.kindling.core.ToolPanel.ToolPanel"]},{"name":"constructor(localGatewayName: String, redundantRole: String, version: String, edition: String, connections: List<DiagramModel.Connection> = emptyList())","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.DiagramModel","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-diagram-model.html","searchKeys":["DiagramModel","constructor(localGatewayName: String, redundantRole: String, version: String, edition: String, connections: List<DiagramModel.Connection> = emptyList())","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.DiagramModel"]},{"name":"constructor(lock: String, frame: String? = null)","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.Monitors","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-monitors/-monitors.html","searchKeys":["Monitors","constructor(lock: String, frame: String? = null)","io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.Monitors"]},{"name":"constructor(lock: String, owner: Int? = null)","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.Blocker","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-blocker/-blocker.html","searchKeys":["Blocker","constructor(lock: String, owner: Int? = null)","io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.Blocker"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"io.github.inductiveautomation.kindling.core.ToolOpeningException.ToolOpeningException","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-opening-exception/-tool-opening-exception.html","searchKeys":["ToolOpeningException","constructor(message: String, cause: Throwable? = null)","io.github.inductiveautomation.kindling.core.ToolOpeningException.ToolOpeningException"]},{"name":"constructor(metric: Metric, data: List<MetricData>)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.MetricCard","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-metric-card.html","searchKeys":["MetricCard","constructor(metric: Metric, data: List<MetricData>)","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.MetricCard"]},{"name":"constructor(metrics: List<Metric>)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricModel.MetricModel","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-model/-metric-model.html","searchKeys":["MetricModel","constructor(metrics: List<Metric>)","io.github.inductiveautomation.kindling.idb.metrics.MetricModel.MetricModel"]},{"name":"constructor(metrics: List<Metric>)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricTree.MetricTree","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-tree/-metric-tree.html","searchKeys":["MetricTree","constructor(metrics: List<Metric>)","io.github.inductiveautomation.kindling.idb.metrics.MetricTree.MetricTree"]},{"name":"constructor(metrics: List<Metric>)","description":"io.github.inductiveautomation.kindling.idb.metrics.RootNode.RootNode","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-root-node/-root-node.html","searchKeys":["RootNode","constructor(metrics: List<Metric>)","io.github.inductiveautomation.kindling.idb.metrics.RootNode.RootNode"]},{"name":"constructor(model: T, modelClass: Class<T>, columns: ColumnList<*>?)","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable.ReifiedJXTable","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/-reified-j-x-table.html","searchKeys":["ReifiedJXTable","constructor(model: T, modelClass: Class<T>, columns: ColumnList<*>?)","io.github.inductiveautomation.kindling.utils.ReifiedJXTable.ReifiedJXTable"]},{"name":"constructor(modelData: List<SchemaRecord>)","description":"io.github.inductiveautomation.kindling.cache.SchemaFilterList.SchemaFilterList","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-filter-list/-schema-filter-list.html","searchKeys":["SchemaFilterList","constructor(modelData: List<SchemaRecord>)","io.github.inductiveautomation.kindling.cache.SchemaFilterList.SchemaFilterList"]},{"name":"constructor(name: String)","description":"io.github.inductiveautomation.kindling.idb.metrics.Metric.Metric","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric/-metric.html","searchKeys":["Metric","constructor(name: String)","io.github.inductiveautomation.kindling.idb.metrics.Metric.Metric"]},{"name":"constructor(name: String, columns: List<Column>, _parent: () -> TreeNode, size: Long)","description":"io.github.inductiveautomation.kindling.idb.generic.Table.Table","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/-table.html","searchKeys":["Table","constructor(name: String, columns: List<Column>, _parent: () -> TreeNode, size: Long)","io.github.inductiveautomation.kindling.idb.generic.Table.Table"]},{"name":"constructor(name: String, isDark: Boolean, lookAndFeelClassname: String, rSyntaxThemeName: String)","description":"io.github.inductiveautomation.kindling.core.Theme.Theme","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/-theme.html","searchKeys":["Theme","constructor(name: String, isDark: Boolean, lookAndFeelClassname: String, rSyntaxThemeName: String)","io.github.inductiveautomation.kindling.core.Theme.Theme"]},{"name":"constructor(name: String, type: String, notNull: Boolean, defaultValue: String?, primaryKey: Boolean, hidden: Boolean, _parent: () -> TreeNode)","description":"io.github.inductiveautomation.kindling.idb.generic.Column.Column","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/-column.html","searchKeys":["Column","constructor(name: String, type: String, notNull: Boolean, defaultValue: String?, primaryKey: Boolean, hidden: Boolean, _parent: () -> TreeNode)","io.github.inductiveautomation.kindling.idb.generic.Column.Column"]},{"name":"constructor(name: String? = null, description: String? = null, icon: Icon? = null, accelerator: KeyStroke? = null, selected: Boolean = false, action: Action.(e: ActionEvent) -> Unit)","description":"io.github.inductiveautomation.kindling.utils.Action.Action","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/-action.html","searchKeys":["Action","constructor(name: String? = null, description: String? = null, icon: Icon? = null, accelerator: KeyStroke? = null, selected: Boolean = false, action: Action.(e: ActionEvent) -> Unit)","io.github.inductiveautomation.kindling.utils.Action.Action"]},{"name":"constructor(path: Path)","description":"io.github.inductiveautomation.kindling.cache.CacheView.CacheView","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/-cache-view.html","searchKeys":["CacheView","constructor(path: Path)","io.github.inductiveautomation.kindling.cache.CacheView.CacheView"]},{"name":"constructor(path: Path)","description":"io.github.inductiveautomation.kindling.idb.IdbView.IdbView","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-view/-idb-view.html","searchKeys":["IdbView","constructor(path: Path)","io.github.inductiveautomation.kindling.idb.IdbView.IdbView"]},{"name":"constructor(path: Path)","description":"io.github.inductiveautomation.kindling.zip.ZipView.ZipView","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/-zip-view.html","searchKeys":["ZipView","constructor(path: Path)","io.github.inductiveautomation.kindling.zip.ZipView.ZipView"]},{"name":"constructor(paths: List<Path>)","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.MultiThreadView","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/-multi-thread-view.html","searchKeys":["MultiThreadView","constructor(paths: List<Path>)","io.github.inductiveautomation.kindling.thread.MultiThreadView.MultiThreadView"]},{"name":"constructor(profileName: String?, tableName: String?, dataTableName: String?, source: String?, dispPath: String?, uuid: String?, priority: Int, eventType: Int, eventFlags: Int, data: EventData, storedProps: EnumSet<EventPropertyType>)","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.AlarmJournalData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/-alarm-journal-data.html","searchKeys":["AlarmJournalData","constructor(profileName: String?, tableName: String?, dataTableName: String?, source: String?, dispPath: String?, uuid: String?, priority: Int, eventType: Int, eventFlags: Int, data: EventData, storedProps: EnumSet<EventPropertyType>)","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.AlarmJournalData"]},{"name":"constructor(provider: FileSystemProvider, path: Path)","description":"io.github.inductiveautomation.kindling.zip.views.GenericFileView.GenericFileView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-generic-file-view/-generic-file-view.html","searchKeys":["GenericFileView","constructor(provider: FileSystemProvider, path: Path)","io.github.inductiveautomation.kindling.zip.views.GenericFileView.GenericFileView"]},{"name":"constructor(provider: FileSystemProvider, path: Path)","description":"io.github.inductiveautomation.kindling.zip.views.ImageView.ImageView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/-image-view.html","searchKeys":["ImageView","constructor(provider: FileSystemProvider, path: Path)","io.github.inductiveautomation.kindling.zip.views.ImageView.ImageView"]},{"name":"constructor(provider: FileSystemProvider, path: Path)","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.ProjectView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/-project-view.html","searchKeys":["ProjectView","constructor(provider: FileSystemProvider, path: Path)","io.github.inductiveautomation.kindling.zip.views.ProjectView.ProjectView"]},{"name":"constructor(provider: FileSystemProvider, path: Path)","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView.TextFileView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/-text-file-view.html","searchKeys":["TextFileView","constructor(provider: FileSystemProvider, path: Path)","io.github.inductiveautomation.kindling.zip.views.TextFileView.TextFileView"]},{"name":"constructor(provider: FileSystemProvider, path: Path)","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.ToolView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/-tool-view.html","searchKeys":["ToolView","constructor(provider: FileSystemProvider, path: Path)","io.github.inductiveautomation.kindling.zip.views.ToolView.ToolView"]},{"name":"constructor(provider: FileSystemProvider, paths: List<Path>)","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.MultiToolView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/-multi-tool-view.html","searchKeys":["MultiToolView","constructor(provider: FileSystemProvider, paths: List<Path>)","io.github.inductiveautomation.kindling.zip.views.MultiToolView.MultiToolView"]},{"name":"constructor(query: String, datasource: String, values: Array<Any?>)","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.ScriptedSFData","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/-scripted-s-f-data.html","searchKeys":["ScriptedSFData","constructor(query: String, datasource: String, values: Array<Any?>)","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.ScriptedSFData"]},{"name":"constructor(rawData: List<LogEvent>)","description":"io.github.inductiveautomation.kindling.log.LogPanel.LogPanel","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-log-panel.html","searchKeys":["LogPanel","constructor(rawData: List<LogEvent>)","io.github.inductiveautomation.kindling.log.LogPanel.LogPanel"]},{"name":"constructor(systemName: String, connectionId: String, connectionStatus: String, redundantRole: String)","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.Connection","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/-connection.html","searchKeys":["Connection","constructor(systemName: String, connectionId: String, connectionStatus: String, redundantRole: String)","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.Connection"]},{"name":"constructor(tabName: String, icon: Icon?, tabTooltip: String?, supplier: () -> Component)","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.LazyTab","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/-lazy-tab.html","searchKeys":["LazyTab","constructor(tabName: String, icon: Icon?, tabTooltip: String?, supplier: () -> Component)","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.LazyTab"]},{"name":"constructor(tabName: String, toStringFn: Stringifier = { it?.toString() })","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.FilterListPanel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/-filter-list-panel.html","searchKeys":["FilterListPanel","constructor(tabName: String, toStringFn: Stringifier = { it?.toString() })","io.github.inductiveautomation.kindling.utils.FilterListPanel.FilterListPanel"]},{"name":"constructor(tabName: String, tooltip: String, json: String)","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.GatewayNetworkViewer","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-viewer/-gateway-network-viewer.html","searchKeys":["GatewayNetworkViewer","constructor(tabName: String, tooltip: String, json: String)","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.GatewayNetworkViewer"]},{"name":"constructor(tables: List<Table>)","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortableTree","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/-sortable-tree.html","searchKeys":["SortableTree","constructor(tables: List<Table>)","io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortableTree"]},{"name":"constructor(text: String, link: String? = null)","description":"io.github.inductiveautomation.kindling.core.Detail.BodyLine.BodyLine","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-body-line/-body-line.html","searchKeys":["BodyLine","constructor(text: String, link: String? = null)","io.github.inductiveautomation.kindling.core.Detail.BodyLine.BodyLine"]},{"name":"constructor(threadData: List<ThreadLifespan>)","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.ThreadModel","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-thread-model.html","searchKeys":["ThreadModel","constructor(threadData: List<ThreadLifespan>)","io.github.inductiveautomation.kindling.thread.model.ThreadModel.ThreadModel"]},{"name":"constructor(timestamp: Instant, message: String, logger: String = STDOUT, level: Level? = null, stacktrace: StackTrace = emptyList(), marked: Boolean = false)","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.WrapperLogEvent","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/-wrapper-log-event.html","searchKeys":["WrapperLogEvent","constructor(timestamp: Instant, message: String, logger: String = STDOUT, level: Level? = null, stacktrace: StackTrace = emptyList(), marked: Boolean = false)","io.github.inductiveautomation.kindling.log.WrapperLogEvent.WrapperLogEvent"]},{"name":"constructor(timestamp: Instant, message: String, logger: String, thread: String, level: Level, mdc: List<MDC>, stacktrace: List<String>, marked: Boolean = false)","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.SystemLogEvent","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/-system-log-event.html","searchKeys":["SystemLogEvent","constructor(timestamp: Instant, message: String, logger: String, thread: String, level: Level, mdc: List<MDC>, stacktrace: List<String>, marked: Boolean = false)","io.github.inductiveautomation.kindling.log.SystemLogEvent.SystemLogEvent"]},{"name":"constructor(title: String, message: String? = null, details: Map<String, String?> = emptyMap(), body: List<Detail.BodyLine> = emptyList())","description":"io.github.inductiveautomation.kindling.core.Detail.Detail","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-detail.html","searchKeys":["Detail","constructor(title: String, message: String? = null, details: Map<String, String?> = emptyMap(), body: List<Detail.BodyLine> = emptyList())","io.github.inductiveautomation.kindling.core.Detail.Detail"]},{"name":"constructor(totalThreadDumps: Int, version: String)","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.ThreadComparisonPane","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/-thread-comparison-pane.html","searchKeys":["ThreadComparisonPane","constructor(totalThreadDumps: Int, version: String)","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.ThreadComparisonPane"]},{"name":"constructor(treeModel: TreeModel)","description":"io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree.DBMetaDataTree","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-d-b-meta-data-tree/-d-b-meta-data-tree.html","searchKeys":["DBMetaDataTree","constructor(treeModel: TreeModel)","io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree.DBMetaDataTree"]},{"name":"constructor(typeCode: Byte)","description":"deser.support.ClassField.ClassField","location":"kindling/deser.support/-class-field/-class-field.html","searchKeys":["ClassField","constructor(typeCode: Byte)","deser.support.ClassField.ClassField"]},{"name":"constructor(userObject: List<String>)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricNode.MetricNode","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-node/-metric-node.html","searchKeys":["MetricNode","constructor(userObject: List<String>)","io.github.inductiveautomation.kindling.idb.metrics.MetricNode.MetricNode"]},{"name":"constructor(userObject: Path)","description":"io.github.inductiveautomation.kindling.utils.PathNode.PathNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-node/-path-node.html","searchKeys":["PathNode","constructor(userObject: Path)","io.github.inductiveautomation.kindling.utils.PathNode.PathNode"]},{"name":"constructor(value: Double, timestamp: Date)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricData.MetricData","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-data/-metric-data.html","searchKeys":["MetricData","constructor(value: Double, timestamp: Date)","io.github.inductiveautomation.kindling.idb.metrics.MetricData.MetricData"]},{"name":"constructor(valueClass: KClass<T>, getText: StringProvider<T>, getIcon: IconProvider<T>, getTooltip: StringProvider<T>)","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.ReifiedLabelProvider","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/-reified-label-provider.html","searchKeys":["ReifiedLabelProvider","constructor(valueClass: KClass<T>, getText: StringProvider<T>, getIcon: IconProvider<T>, getTooltip: StringProvider<T>)","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.ReifiedLabelProvider"]},{"name":"constructor(values: List<Path>)","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.ThreadDumpListModel","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-list-model/-thread-dump-list-model.html","searchKeys":["ThreadDumpListModel","constructor(values: List<Path>)","io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.ThreadDumpListModel"]},{"name":"constructor(vararg panels: FilterPanel<T>?)","description":"io.github.inductiveautomation.kindling.utils.FilterSidebar.FilterSidebar","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-sidebar/-filter-sidebar.html","searchKeys":["FilterSidebar","constructor(vararg panels: FilterPanel<T>?)","io.github.inductiveautomation.kindling.utils.FilterSidebar.FilterSidebar"]},{"name":"constructor(vararg parts: String)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricNode.MetricNode","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-node/-metric-node.html","searchKeys":["MetricNode","constructor(vararg parts: String)","io.github.inductiveautomation.kindling.idb.metrics.MetricNode.MetricNode"]},{"name":"constructor(zipFile: FileSystem)","description":"io.github.inductiveautomation.kindling.utils.RootNode.RootNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-root-node/-root-node.html","searchKeys":["RootNode","constructor(zipFile: FileSystem)","io.github.inductiveautomation.kindling.utils.RootNode.RootNode"]},{"name":"data class Blocker(val lock: String, val owner: Int? = null)","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Blocker","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-blocker/index.html","searchKeys":["Blocker","data class Blocker(val lock: String, val owner: Int? = null)","io.github.inductiveautomation.kindling.thread.model.Thread.Blocker"]},{"name":"data class BodyLine(val text: String, val link: String? = null)","description":"io.github.inductiveautomation.kindling.core.Detail.BodyLine","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-body-line/index.html","searchKeys":["BodyLine","data class BodyLine(val text: String, val link: String? = null)","io.github.inductiveautomation.kindling.core.Detail.BodyLine"]},{"name":"data class CacheEntry(val id: Int, val schemaId: Int, val schemaName: String, val timestamp: String, val attemptCount: Int, val dataCount: Int)","description":"io.github.inductiveautomation.kindling.cache.CacheEntry","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/index.html","searchKeys":["CacheEntry","data class CacheEntry(val id: Int, val schemaId: Int, val schemaName: String, val timestamp: String, val attemptCount: Int, val dataCount: Int)","io.github.inductiveautomation.kindling.cache.CacheEntry"]},{"name":"data class Column(val name: String, val type: String, val notNull: Boolean, val defaultValue: String?, val primaryKey: Boolean, val hidden: Boolean, val _parent: () -> TreeNode) : TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Column","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/index.html","searchKeys":["Column","data class Column(val name: String, val type: String, val notNull: Boolean, val defaultValue: String?, val primaryKey: Boolean, val hidden: Boolean, val _parent: () -> TreeNode) : TreeNode","io.github.inductiveautomation.kindling.idb.generic.Column"]},{"name":"data class Column<R, C>(val header: String, val getValue: (row: R) -> C, val columnCustomization: TableColumnExt.(model: TableModel) -> Unit?, val clazz: Class<C>)","description":"io.github.inductiveautomation.kindling.utils.Column","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/index.html","searchKeys":["Column","data class Column<R, C>(val header: String, val getValue: (row: R) -> C, val columnCustomization: TableColumnExt.(model: TableModel) -> Unit?, val clazz: Class<C>)","io.github.inductiveautomation.kindling.utils.Column"]},{"name":"data class Connection(val systemName: String, val connectionId: String, val connectionStatus: String, val redundantRole: String)","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/index.html","searchKeys":["Connection","data class Connection(val systemName: String, val connectionId: String, val connectionStatus: String, val redundantRole: String)","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection"]},{"name":"data class Detail(val title: String, val message: String? = null, val details: Map<String, String?> = emptyMap(), val body: List<Detail.BodyLine> = emptyList())","description":"io.github.inductiveautomation.kindling.core.Detail","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/index.html","searchKeys":["Detail","data class Detail(val title: String, val message: String? = null, val details: Map<String, String?> = emptyMap(), val body: List<Detail.BodyLine> = emptyList())","io.github.inductiveautomation.kindling.core.Detail"]},{"name":"data class DiagramModel(val localGatewayName: String, val redundantRole: String, val version: String, val edition: String, val connections: List<DiagramModel.Connection> = emptyList())","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/index.html","searchKeys":["DiagramModel","data class DiagramModel(val localGatewayName: String, val redundantRole: String, val version: String, val edition: String, val connections: List<DiagramModel.Connection> = emptyList())","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel"]},{"name":"data class FilterModelEntry(val key: String?, val count: Int)","description":"io.github.inductiveautomation.kindling.utils.FilterModelEntry","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model-entry/index.html","searchKeys":["FilterModelEntry","data class FilterModelEntry(val key: String?, val count: Int)","io.github.inductiveautomation.kindling.utils.FilterModelEntry"]},{"name":"data class MDC(val key: String, val value: String?)","description":"io.github.inductiveautomation.kindling.log.MDC","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c/index.html","searchKeys":["MDC","data class MDC(val key: String, val value: String?)","io.github.inductiveautomation.kindling.log.MDC"]},{"name":"data class MDCTableRow(val key: String, val value: String?, var inclusive: Boolean = true) : Filter<LogEvent> ","description":"io.github.inductiveautomation.kindling.log.MDCTableRow","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/index.html","searchKeys":["MDCTableRow","data class MDCTableRow(val key: String, val value: String?, var inclusive: Boolean = true) : Filter<LogEvent> ","io.github.inductiveautomation.kindling.log.MDCTableRow"]},{"name":"data class MetricData(val value: Double, val timestamp: Date)","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricData","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-data/index.html","searchKeys":["MetricData","data class MetricData(val value: Double, val timestamp: Date)","io.github.inductiveautomation.kindling.idb.metrics.MetricData"]},{"name":"data class MetricNode(val userObject: List<String>) : TypedTreeNode<List<String>> ","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricNode","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-node/index.html","searchKeys":["MetricNode","data class MetricNode(val userObject: List<String>) : TypedTreeNode<List<String>> ","io.github.inductiveautomation.kindling.idb.metrics.MetricNode"]},{"name":"data class Monitors(val lock: String, val frame: String? = null)","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Monitors","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-monitors/index.html","searchKeys":["Monitors","data class Monitors(val lock: String, val frame: String? = null)","io.github.inductiveautomation.kindling.thread.model.Thread.Monitors"]},{"name":"data class PathNode(val userObject: Path) : TypedTreeNode<Path> ","description":"io.github.inductiveautomation.kindling.utils.PathNode","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-node/index.html","searchKeys":["PathNode","data class PathNode(val userObject: Path) : TypedTreeNode<Path> ","io.github.inductiveautomation.kindling.utils.PathNode"]},{"name":"data class SchemaRecord(val id: Int, val name: String, val errors: List<String>)","description":"io.github.inductiveautomation.kindling.cache.SchemaRecord","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-record/index.html","searchKeys":["SchemaRecord","data class SchemaRecord(val id: Int, val name: String, val errors: List<String>)","io.github.inductiveautomation.kindling.cache.SchemaRecord"]},{"name":"data class SchemaRow(val id: Int, val signature: String, val message: String?)","description":"io.github.inductiveautomation.kindling.cache.SchemaRow","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-row/index.html","searchKeys":["SchemaRow","data class SchemaRow(val id: Int, val signature: String, val message: String?)","io.github.inductiveautomation.kindling.cache.SchemaRow"]},{"name":"data class SystemLogEvent(val timestamp: Instant, val message: String, val logger: String, val thread: String, val level: Level, val mdc: List<MDC>, val stacktrace: List<String>, var marked: Boolean = false) : LogEvent","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/index.html","searchKeys":["SystemLogEvent","data class SystemLogEvent(val timestamp: Instant, val message: String, val logger: String, val thread: String, val level: Level, val mdc: List<MDC>, val stacktrace: List<String>, var marked: Boolean = false) : LogEvent","io.github.inductiveautomation.kindling.log.SystemLogEvent"]},{"name":"data class Table(val name: String, val columns: List<Column>, val _parent: () -> TreeNode, val size: Long) : TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Table","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/index.html","searchKeys":["Table","data class Table(val name: String, val columns: List<Column>, val _parent: () -> TreeNode, val size: Long) : TreeNode","io.github.inductiveautomation.kindling.idb.generic.Table"]},{"name":"data class Theme(val name: String, val isDark: Boolean, val lookAndFeelClassname: String, val rSyntaxThemeName: String)","description":"io.github.inductiveautomation.kindling.core.Theme","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/index.html","searchKeys":["Theme","data class Theme(val name: String, val isDark: Boolean, val lookAndFeelClassname: String, val rSyntaxThemeName: String)","io.github.inductiveautomation.kindling.core.Theme"]},{"name":"data class Thread(val id: Int, val name: String, val state: Thread.State, val isDaemon: Boolean, val system: String? = null, val scope: String? = null, val cpuUsage: Double? = null, val lockedMonitors: List<Thread.Monitors> = emptyList(), val lockedSynchronizers: List<String> = emptyList(), val blocker: Thread.Blocker? = null, val stacktrace: StackTrace = emptyList())","description":"io.github.inductiveautomation.kindling.thread.model.Thread","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/index.html","searchKeys":["Thread","data class Thread(val id: Int, val name: String, val state: Thread.State, val isDaemon: Boolean, val system: String? = null, val scope: String? = null, val cpuUsage: Double? = null, val lockedMonitors: List<Thread.Monitors> = emptyList(), val lockedSynchronizers: List<String> = emptyList(), val blocker: Thread.Blocker? = null, val stacktrace: StackTrace = emptyList())","io.github.inductiveautomation.kindling.thread.model.Thread"]},{"name":"data class ThreadDump","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/index.html","searchKeys":["ThreadDump","data class ThreadDump","io.github.inductiveautomation.kindling.thread.model.ThreadDump"]},{"name":"data class WrapperLogEvent(val timestamp: Instant, val message: String, val logger: String = STDOUT, val level: Level? = null, val stacktrace: StackTrace = emptyList(), var marked: Boolean = false) : LogEvent","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/index.html","searchKeys":["WrapperLogEvent","data class WrapperLogEvent(val timestamp: Instant, val message: String, val logger: String = STDOUT, val level: Level? = null, val stacktrace: StackTrace = emptyList(), var marked: Boolean = false) : LogEvent","io.github.inductiveautomation.kindling.log.WrapperLogEvent"]},{"name":"data object Advanced : PreferenceCategory","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/index.html","searchKeys":["Advanced","data object Advanced : PreferenceCategory","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced"]},{"name":"data object General : PreferenceCategory","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/index.html","searchKeys":["General","data object General : PreferenceCategory","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General"]},{"name":"data object Kindling","description":"io.github.inductiveautomation.kindling.core.Kindling","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/index.html","searchKeys":["Kindling","data object Kindling","io.github.inductiveautomation.kindling.core.Kindling"]},{"name":"data object LogViewer : MultiTool, ClipboardTool, PreferenceCategory","description":"io.github.inductiveautomation.kindling.log.LogViewer","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/index.html","searchKeys":["LogViewer","data object LogViewer : MultiTool, ClipboardTool, PreferenceCategory","io.github.inductiveautomation.kindling.log.LogViewer"]},{"name":"data object MultiThreadColumns : ThreadColumnList","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-multi-thread-columns/index.html","searchKeys":["MultiThreadColumns","data object MultiThreadColumns : ThreadColumnList","io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns"]},{"name":"data object MultiThreadViewer : MultiTool, ClipboardTool, PreferenceCategory","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/index.html","searchKeys":["MultiThreadViewer","data object MultiThreadViewer : MultiTool, ClipboardTool, PreferenceCategory","io.github.inductiveautomation.kindling.thread.MultiThreadViewer"]},{"name":"data object Preferences","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/index.html","searchKeys":["Preferences","data object Preferences","io.github.inductiveautomation.kindling.core.Kindling.Preferences"]},{"name":"data object SingleThreadColumns : ThreadColumnList","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/index.html","searchKeys":["SingleThreadColumns","data object SingleThreadColumns : ThreadColumnList","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns"]},{"name":"data object SystemLogColumns : LogColumnList<SystemLogEvent> ","description":"io.github.inductiveautomation.kindling.log.SystemLogColumns","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-columns/index.html","searchKeys":["SystemLogColumns","data object SystemLogColumns : LogColumnList<SystemLogEvent> ","io.github.inductiveautomation.kindling.log.SystemLogColumns"]},{"name":"data object UI : PreferenceCategory","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/index.html","searchKeys":["UI","data object UI : PreferenceCategory","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI"]},{"name":"data object WrapperLogColumns : LogColumnList<WrapperLogEvent> ","description":"io.github.inductiveautomation.kindling.log.WrapperLogColumns","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-columns/index.html","searchKeys":["WrapperLogColumns","data object WrapperLogColumns : LogColumnList<WrapperLogEvent> ","io.github.inductiveautomation.kindling.log.WrapperLogColumns"]},{"name":"enum FilterComparator : Enum<FilterComparator> , Comparator<FilterModelEntry> ","description":"io.github.inductiveautomation.kindling.utils.FilterComparator","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/index.html","searchKeys":["FilterComparator","enum FilterComparator : Enum<FilterComparator> , Comparator<FilterModelEntry> ","io.github.inductiveautomation.kindling.utils.FilterComparator"]},{"name":"enum IdbTool : Enum<IdbTool> ","description":"io.github.inductiveautomation.kindling.idb.IdbTool","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/index.html","searchKeys":["IdbTool","enum IdbTool : Enum<IdbTool> ","io.github.inductiveautomation.kindling.idb.IdbTool"]},{"name":"enum Level : Enum<Level> ","description":"io.github.inductiveautomation.kindling.log.Level","location":"kindling/io.github.inductiveautomation.kindling.log/-level/index.html","searchKeys":["Level","enum Level : Enum<Level> ","io.github.inductiveautomation.kindling.log.Level"]},{"name":"enum LinkHandlingStrategy : Enum<LinkHandlingStrategy> ","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/index.html","searchKeys":["LinkHandlingStrategy","enum LinkHandlingStrategy : Enum<LinkHandlingStrategy> ","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy"]},{"name":"enum MajorVersion : Enum<MajorVersion> ","description":"io.github.inductiveautomation.kindling.utils.MajorVersion","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/index.html","searchKeys":["MajorVersion","enum MajorVersion : Enum<MajorVersion> ","io.github.inductiveautomation.kindling.utils.MajorVersion"]},{"name":"enum MetricPresentation : Enum<MetricCard.Companion.MetricPresentation> ","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/index.html","searchKeys":["MetricPresentation","enum MetricPresentation : Enum<MetricCard.Companion.MetricPresentation> ","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation"]},{"name":"enum TableComparator : Enum<TableComparator> , Comparator<Table> ","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/index.html","searchKeys":["TableComparator","enum TableComparator : Enum<TableComparator> , Comparator<Table> ","io.github.inductiveautomation.kindling.idb.generic.TableComparator"]},{"name":"fun <T : Container, FloatableComponent> addLazyTab(tabName: String, tabTooltip: String? = null, icon: Icon? = null, component: () -> T)","description":"io.github.inductiveautomation.kindling.utils.TabStrip.addLazyTab","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/add-lazy-tab.html","searchKeys":["addLazyTab","fun <T : Container, FloatableComponent> addLazyTab(tabName: String, tabTooltip: String? = null, icon: Icon? = null, component: () -> T)","io.github.inductiveautomation.kindling.utils.TabStrip.addLazyTab"]},{"name":"fun <T : Container, FloatableComponent> addTab(component: T, tabName: String = component.tabName, tabTooltip: String? = component.tabTooltip, icon: Icon? = component.icon, select: Boolean = true)","description":"io.github.inductiveautomation.kindling.utils.TabStrip.addTab","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/add-tab.html","searchKeys":["addTab","fun <T : Container, FloatableComponent> addTab(component: T, tabName: String = component.tabName, tabTooltip: String? = component.tabTooltip, icon: Icon? = component.icon, select: Boolean = true)","io.github.inductiveautomation.kindling.utils.TabStrip.addTab"]},{"name":"fun <T, U : Comparable<U>> List<T>.isSortedBy(keyFn: (T) -> U): Boolean","description":"io.github.inductiveautomation.kindling.utils.isSortedBy","location":"kindling/io.github.inductiveautomation.kindling.utils/is-sorted-by.html","searchKeys":["isSortedBy","fun <T, U : Comparable<U>> List<T>.isSortedBy(keyFn: (T) -> U): Boolean","io.github.inductiveautomation.kindling.utils.isSortedBy"]},{"name":"fun <T> Grouping<T, Int>.mode(): Int?","description":"io.github.inductiveautomation.kindling.utils.mode","location":"kindling/io.github.inductiveautomation.kindling.utils/mode.html","searchKeys":["mode","fun <T> Grouping<T, Int>.mode(): Int?","io.github.inductiveautomation.kindling.utils.mode"]},{"name":"fun <T> ResultSet.toList(transform: (ResultSet) -> T): List<T>","description":"io.github.inductiveautomation.kindling.utils.toList","location":"kindling/io.github.inductiveautomation.kindling.utils/to-list.html","searchKeys":["toList","fun <T> ResultSet.toList(transform: (ResultSet) -> T): List<T>","io.github.inductiveautomation.kindling.utils.toList"]},{"name":"fun <T> defaultIconFunction(): IconProvider<T>","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.defaultIconFunction","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/-companion/default-icon-function.html","searchKeys":["defaultIconFunction","fun <T> defaultIconFunction(): IconProvider<T>","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.defaultIconFunction"]},{"name":"fun Component.traverseChildren(): Sequence<Component>","description":"io.github.inductiveautomation.kindling.utils.traverseChildren","location":"kindling/io.github.inductiveautomation.kindling.utils/traverse-children.html","searchKeys":["traverseChildren","fun Component.traverseChildren(): Sequence<Component>","io.github.inductiveautomation.kindling.utils.traverseChildren"]},{"name":"fun EmptyBorder(): EmptyBorder","description":"io.github.inductiveautomation.kindling.utils.EmptyBorder","location":"kindling/io.github.inductiveautomation.kindling.utils/-empty-border.html","searchKeys":["EmptyBorder","fun EmptyBorder(): EmptyBorder","io.github.inductiveautomation.kindling.utils.EmptyBorder"]},{"name":"fun FilterModel(data: Map<String?, Int>): FilterModel<String?>","description":"io.github.inductiveautomation.kindling.utils.FilterModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model.html","searchKeys":["FilterModel","fun FilterModel(data: Map<String?, Int>): FilterModel<String?>","io.github.inductiveautomation.kindling.utils.FilterModel"]},{"name":"fun FlatSVGIcon.derive(colorer: (Color) -> Color): FlatSVGIcon","description":"io.github.inductiveautomation.kindling.utils.derive","location":"kindling/io.github.inductiveautomation.kindling.utils/derive.html","searchKeys":["derive","fun FlatSVGIcon.derive(colorer: (Color) -> Color): FlatSVGIcon","io.github.inductiveautomation.kindling.utils.derive"]},{"name":"fun HorizontalSplitPane(left: Component, right: Component, resizeWeight: Double = 0.5, block: JSplitPane.() -> Unit = {}): JSplitPane","description":"io.github.inductiveautomation.kindling.utils.HorizontalSplitPane","location":"kindling/io.github.inductiveautomation.kindling.utils/-horizontal-split-pane.html","searchKeys":["HorizontalSplitPane","fun HorizontalSplitPane(left: Component, right: Component, resizeWeight: Double = 0.5, block: JSplitPane.() -> Unit = {}): JSplitPane","io.github.inductiveautomation.kindling.utils.HorizontalSplitPane"]},{"name":"fun JFileChooser.chooseFiles(parent: JComponent): List<File>?","description":"io.github.inductiveautomation.kindling.utils.chooseFiles","location":"kindling/io.github.inductiveautomation.kindling.utils/choose-files.html","searchKeys":["chooseFiles","fun JFileChooser.chooseFiles(parent: JComponent): List<File>?","io.github.inductiveautomation.kindling.utils.chooseFiles"]},{"name":"fun JTable.selectedOrAllRowIndices(): IntArray","description":"io.github.inductiveautomation.kindling.utils.selectedOrAllRowIndices","location":"kindling/io.github.inductiveautomation.kindling.utils/selected-or-all-row-indices.html","searchKeys":["selectedOrAllRowIndices","fun JTable.selectedOrAllRowIndices(): IntArray","io.github.inductiveautomation.kindling.utils.selectedOrAllRowIndices"]},{"name":"fun JTable.selectedRowIndices(): IntArray","description":"io.github.inductiveautomation.kindling.utils.selectedRowIndices","location":"kindling/io.github.inductiveautomation.kindling.utils/selected-row-indices.html","searchKeys":["selectedRowIndices","fun JTable.selectedRowIndices(): IntArray","io.github.inductiveautomation.kindling.utils.selectedRowIndices"]},{"name":"fun Long.toFileSizeLabel(): String","description":"io.github.inductiveautomation.kindling.utils.toFileSizeLabel","location":"kindling/io.github.inductiveautomation.kindling.utils/to-file-size-label.html","searchKeys":["toFileSizeLabel","fun Long.toFileSizeLabel(): String","io.github.inductiveautomation.kindling.utils.toFileSizeLabel"]},{"name":"fun MutableList<Detail.BodyLine>.add(line: String, link: String? = null)","description":"io.github.inductiveautomation.kindling.core.add","location":"kindling/io.github.inductiveautomation.kindling.core/add.html","searchKeys":["add","fun MutableList<Detail.BodyLine>.add(line: String, link: String? = null)","io.github.inductiveautomation.kindling.core.add"]},{"name":"fun Preference<Boolean>.PreferenceCheckbox(description: String): JCheckBox","description":"io.github.inductiveautomation.kindling.core.Preference.Companion.PreferenceCheckbox","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/-companion/-preference-checkbox.html","searchKeys":["PreferenceCheckbox","fun Preference<Boolean>.PreferenceCheckbox(description: String): JCheckBox","io.github.inductiveautomation.kindling.core.Preference.Companion.PreferenceCheckbox"]},{"name":"fun Properties(inputStream: InputStream): Properties","description":"io.github.inductiveautomation.kindling.utils.Properties","location":"kindling/io.github.inductiveautomation.kindling.utils/-properties.html","searchKeys":["Properties","fun Properties(inputStream: InputStream): Properties","io.github.inductiveautomation.kindling.utils.Properties"]},{"name":"fun SQLiteConnection(path: Path, readOnly: Boolean = true): Connection","description":"io.github.inductiveautomation.kindling.utils.SQLiteConnection","location":"kindling/io.github.inductiveautomation.kindling.utils/-s-q-lite-connection.html","searchKeys":["SQLiteConnection","fun SQLiteConnection(path: Path, readOnly: Boolean = true): Connection","io.github.inductiveautomation.kindling.utils.SQLiteConnection"]},{"name":"fun SVGDocument.render(width: Int, height: Int, x: Int = 0, y: Int = 0): BufferedImage","description":"io.github.inductiveautomation.kindling.utils.render","location":"kindling/io.github.inductiveautomation.kindling.utils/render.html","searchKeys":["render","fun SVGDocument.render(width: Int, height: Int, x: Int = 0, y: Int = 0): BufferedImage","io.github.inductiveautomation.kindling.utils.render"]},{"name":"fun StackElement.toBodyLine(version: String): Detail.BodyLine","description":"io.github.inductiveautomation.kindling.utils.toBodyLine","location":"kindling/io.github.inductiveautomation.kindling.utils/to-body-line.html","searchKeys":["toBodyLine","fun StackElement.toBodyLine(version: String): Detail.BodyLine","io.github.inductiveautomation.kindling.utils.toBodyLine"]},{"name":"fun String.escapeHtml(): String","description":"io.github.inductiveautomation.kindling.utils.escapeHtml","location":"kindling/io.github.inductiveautomation.kindling.utils/escape-html.html","searchKeys":["escapeHtml","fun String.escapeHtml(): String","io.github.inductiveautomation.kindling.utils.escapeHtml"]},{"name":"fun String.truncate(length: Int = 20): String","description":"io.github.inductiveautomation.kindling.utils.truncate","location":"kindling/io.github.inductiveautomation.kindling.utils/truncate.html","searchKeys":["truncate","fun String.truncate(length: Int = 20): String","io.github.inductiveautomation.kindling.utils.truncate"]},{"name":"fun StringBuilder.tag(tag: String, content: String)","description":"io.github.inductiveautomation.kindling.utils.tag","location":"kindling/io.github.inductiveautomation.kindling.utils/tag.html","searchKeys":["tag","fun StringBuilder.tag(tag: String, content: String)","io.github.inductiveautomation.kindling.utils.tag"]},{"name":"fun TableModel.exportToCSV(file: File)","description":"io.github.inductiveautomation.kindling.utils.exportToCSV","location":"kindling/io.github.inductiveautomation.kindling.utils/export-to-c-s-v.html","searchKeys":["exportToCSV","fun TableModel.exportToCSV(file: File)","io.github.inductiveautomation.kindling.utils.exportToCSV"]},{"name":"fun TableModel.exportToXLSX(file: File)","description":"io.github.inductiveautomation.kindling.utils.exportToXLSX","location":"kindling/io.github.inductiveautomation.kindling.utils/export-to-x-l-s-x.html","searchKeys":["exportToXLSX","fun TableModel.exportToXLSX(file: File)","io.github.inductiveautomation.kindling.utils.exportToXLSX"]},{"name":"fun Thread.toDetail(version: String): Detail","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.Companion.toDetail","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/-companion/to-detail.html","searchKeys":["toDetail","fun Thread.toDetail(version: String): Detail","io.github.inductiveautomation.kindling.thread.MultiThreadView.Companion.toDetail"]},{"name":"fun VerticalSplitPane(top: Component, bottom: Component, resizeWeight: Double = 0.5, block: JSplitPane.() -> Unit = {}): JSplitPane","description":"io.github.inductiveautomation.kindling.utils.VerticalSplitPane","location":"kindling/io.github.inductiveautomation.kindling.utils/-vertical-split-pane.html","searchKeys":["VerticalSplitPane","fun VerticalSplitPane(top: Component, bottom: Component, resizeWeight: Double = 0.5, block: JSplitPane.() -> Unit = {}): JSplitPane","io.github.inductiveautomation.kindling.utils.VerticalSplitPane"]},{"name":"fun accept(path: Path): Boolean","description":"io.github.inductiveautomation.kindling.utils.FileFilter.accept","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/accept.html","searchKeys":["accept","fun accept(path: Path): Boolean","io.github.inductiveautomation.kindling.utils.FileFilter.accept"]},{"name":"fun add(column: Column<R, *>)","description":"io.github.inductiveautomation.kindling.utils.ColumnList.add","location":"kindling/io.github.inductiveautomation.kindling.utils/-column-list/add.html","searchKeys":["add","fun add(column: Column<R, *>)","io.github.inductiveautomation.kindling.utils.ColumnList.add"]},{"name":"fun add(key: String, value: String?, inclusive: Boolean = true)","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.add","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/add.html","searchKeys":["add","fun add(key: String, value: String?, inclusive: Boolean = true)","io.github.inductiveautomation.kindling.log.MDCTableModel.add"]},{"name":"fun addBlockerSelectedListener(listener: ThreadComparisonPane.BlockerSelectedEventListener)","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.addBlockerSelectedListener","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/add-blocker-selected-listener.html","searchKeys":["addBlockerSelectedListener","fun addBlockerSelectedListener(listener: ThreadComparisonPane.BlockerSelectedEventListener)","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.addBlockerSelectedListener"]},{"name":"fun addChangeListener(listener: (newValue: T) -> Unit)","description":"io.github.inductiveautomation.kindling.core.Preference.addChangeListener","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/add-change-listener.html","searchKeys":["addChangeListener","fun addChangeListener(listener: (newValue: T) -> Unit)","io.github.inductiveautomation.kindling.core.Preference.addChangeListener"]},{"name":"fun addFilterChangeListener(listener: FilterChangeListener)","description":"io.github.inductiveautomation.kindling.core.FilterPanel.addFilterChangeListener","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-panel/add-filter-change-listener.html","searchKeys":["addFilterChangeListener","fun addFilterChangeListener(listener: FilterChangeListener)","io.github.inductiveautomation.kindling.core.FilterPanel.addFilterChangeListener"]},{"name":"fun addHyperlinkListener(listener: HyperlinkListener)","description":"io.github.inductiveautomation.kindling.utils.ScrollingTextPane.addHyperlinkListener","location":"kindling/io.github.inductiveautomation.kindling.utils/-scrolling-text-pane/add-hyperlink-listener.html","searchKeys":["addHyperlinkListener","fun addHyperlinkListener(listener: HyperlinkListener)","io.github.inductiveautomation.kindling.utils.ScrollingTextPane.addHyperlinkListener"]},{"name":"fun clear()","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.clear","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/clear.html","searchKeys":["clear","fun clear()","io.github.inductiveautomation.kindling.log.MDCTableModel.clear"]},{"name":"fun copy(comparator: FilterComparator): FilterModel<T>","description":"io.github.inductiveautomation.kindling.utils.FilterModel.copy","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/copy.html","searchKeys":["copy","fun copy(comparator: FilterComparator): FilterModel<T>","io.github.inductiveautomation.kindling.utils.FilterModel.copy"]},{"name":"fun createSortButtons(): ButtonGroup","description":"io.github.inductiveautomation.kindling.utils.FilterList.createSortButtons","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/create-sort-buttons.html","searchKeys":["createSortButtons","fun createSortButtons(): ButtonGroup","io.github.inductiveautomation.kindling.utils.FilterList.createSortButtons"]},{"name":"fun createView(filesystem: FileSystemProvider, vararg paths: Path): PathView?","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.createView","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/create-view.html","searchKeys":["createView","fun createView(filesystem: FileSystemProvider, vararg paths: Path): PathView?","io.github.inductiveautomation.kindling.zip.ZipViewer.createView"]},{"name":"fun debounce(waitTime: Duration = 300.milliseconds, coroutineScope: CoroutineScope, destinationFunction: () -> Unit): () -> Unit","description":"io.github.inductiveautomation.kindling.utils.debounce","location":"kindling/io.github.inductiveautomation.kindling.utils/debounce.html","searchKeys":["debounce","fun debounce(waitTime: Duration = 300.milliseconds, coroutineScope: CoroutineScope, destinationFunction: () -> Unit): () -> Unit","io.github.inductiveautomation.kindling.utils.debounce"]},{"name":"fun find(file: File): Tool?","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.find","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/find.html","searchKeys":["find","fun find(file: File): Tool?","io.github.inductiveautomation.kindling.core.Tool.Companion.find"]},{"name":"fun find(path: Path): Tool?","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.find","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/find.html","searchKeys":["find","fun find(path: Path): Tool?","io.github.inductiveautomation.kindling.core.Tool.Companion.find"]},{"name":"fun fromStream(stream: InputStream): ThreadDump?","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump.Companion.fromStream","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/-companion/from-stream.html","searchKeys":["fromStream","fun fromStream(stream: InputStream): ThreadDump?","io.github.inductiveautomation.kindling.thread.model.ThreadDump.Companion.fromStream"]},{"name":"fun fromString(string: String): Path","description":"io.github.inductiveautomation.kindling.utils.PathSerializer.fromString","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/from-string.html","searchKeys":["fromString","fun fromString(string: String): Path","io.github.inductiveautomation.kindling.utils.PathSerializer.fromString"]},{"name":"fun indexOf(value: Any?): Int","description":"io.github.inductiveautomation.kindling.utils.FilterModel.indexOf","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/index-of.html","searchKeys":["indexOf","fun indexOf(value: Any?): Int","io.github.inductiveautomation.kindling.utils.FilterModel.indexOf"]},{"name":"fun interface BlockerSelectedEventListener : EventListener","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.BlockerSelectedEventListener","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/-blocker-selected-event-listener/index.html","searchKeys":["BlockerSelectedEventListener","fun interface BlockerSelectedEventListener : EventListener","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.BlockerSelectedEventListener"]},{"name":"fun interface Filter<T>","description":"io.github.inductiveautomation.kindling.core.Filter","location":"kindling/io.github.inductiveautomation.kindling.core/-filter/index.html","searchKeys":["Filter","fun interface Filter<T>","io.github.inductiveautomation.kindling.core.Filter"]},{"name":"fun interface FilterChangeListener : EventListener","description":"io.github.inductiveautomation.kindling.core.FilterChangeListener","location":"kindling/io.github.inductiveautomation.kindling.core/-filter-change-listener/index.html","searchKeys":["FilterChangeListener","fun interface FilterChangeListener : EventListener","io.github.inductiveautomation.kindling.core.FilterChangeListener"]},{"name":"fun isImageFile(path: Path): Boolean","description":"io.github.inductiveautomation.kindling.zip.views.ImageView.Companion.isImageFile","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/-companion/is-image-file.html","searchKeys":["isImageFile","fun isImageFile(path: Path): Boolean","io.github.inductiveautomation.kindling.zip.views.ImageView.Companion.isImageFile"]},{"name":"fun isProjectDirectory(path: Path): Boolean","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion.isProjectDirectory","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/-companion/is-project-directory.html","searchKeys":["isProjectDirectory","fun isProjectDirectory(path: Path): Boolean","io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion.isProjectDirectory"]},{"name":"fun isTextFile(path: Path): Boolean","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView.Companion.isTextFile","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/-companion/is-text-file.html","searchKeys":["isTextFile","fun isTextFile(path: Path): Boolean","io.github.inductiveautomation.kindling.zip.views.TextFileView.Companion.isTextFile"]},{"name":"fun lookup(version: String): MajorVersion?","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.Companion.lookup","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/-companion/lookup.html","searchKeys":["lookup","fun lookup(version: String): MajorVersion?","io.github.inductiveautomation.kindling.utils.MajorVersion.Companion.lookup"]},{"name":"fun main(args: Array<String>)","description":"io.github.inductiveautomation.kindling.MainPanel.Companion.main","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/-companion/main.html","searchKeys":["main","fun main(args: Array<String>)","io.github.inductiveautomation.kindling.MainPanel.Companion.main"]},{"name":"fun markRows(predicate: (T) -> Boolean?)","description":"io.github.inductiveautomation.kindling.log.LogsModel.markRows","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/mark-rows.html","searchKeys":["markRows","fun markRows(predicate: (T) -> Boolean?)","io.github.inductiveautomation.kindling.log.LogsModel.markRows"]},{"name":"fun maybeToolPath(path: Path): Boolean","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.Companion.maybeToolPath","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/-companion/maybe-tool-path.html","searchKeys":["maybeToolPath","fun maybeToolPath(path: Path): Boolean","io.github.inductiveautomation.kindling.zip.views.ToolView.Companion.maybeToolPath"]},{"name":"fun openFiles(files: List<File>, tool: Tool? = null)","description":"io.github.inductiveautomation.kindling.MainPanel.openFiles","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/open-files.html","searchKeys":["openFiles","fun openFiles(files: List<File>, tool: Tool? = null)","io.github.inductiveautomation.kindling.MainPanel.openFiles"]},{"name":"fun parseLogs(lines: Sequence<String>): List<WrapperLogEvent>","description":"io.github.inductiveautomation.kindling.log.WrapperLogView.Companion.parseLogs","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/-companion/parse-logs.html","searchKeys":["parseLogs","fun parseLogs(lines: Sequence<String>): List<WrapperLogEvent>","io.github.inductiveautomation.kindling.log.WrapperLogView.Companion.parseLogs"]},{"name":"fun regressionFunction(dataset: XYDataset, series: Int): (Double) -> Double","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.regressionFunction","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/regression-function.html","searchKeys":["regressionFunction","fun regressionFunction(dataset: XYDataset, series: Int): (Double) -> Double","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.regressionFunction"]},{"name":"fun removeAt(index: Int)","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.removeAt","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/remove-at.html","searchKeys":["removeAt","fun removeAt(index: Int)","io.github.inductiveautomation.kindling.log.MDCTableModel.removeAt"]},{"name":"fun safelyCreate(provider: FileSystemProvider, path: Path): ToolView?","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.Companion.safelyCreate","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/-companion/safely-create.html","searchKeys":["safelyCreate","fun safelyCreate(provider: FileSystemProvider, path: Path): ToolView?","io.github.inductiveautomation.kindling.zip.views.ToolView.Companion.safelyCreate"]},{"name":"fun select(value: Any?)","description":"io.github.inductiveautomation.kindling.utils.FilterList.select","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/select.html","searchKeys":["select","fun select(value: Any?)","io.github.inductiveautomation.kindling.utils.FilterList.select"]},{"name":"fun sparkline(data: List<MetricData>, formatter: NumberFormat): JFreeChart","description":"io.github.inductiveautomation.kindling.idb.metrics.sparkline","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/sparkline.html","searchKeys":["sparkline","fun sparkline(data: List<MetricData>, formatter: NumberFormat): JFreeChart","io.github.inductiveautomation.kindling.idb.metrics.sparkline"]},{"name":"fun toColumnFactory(): ColumnFactory","description":"io.github.inductiveautomation.kindling.utils.ColumnList.toColumnFactory","location":"kindling/io.github.inductiveautomation.kindling.utils/-column-list/to-column-factory.html","searchKeys":["toColumnFactory","fun toColumnFactory(): ColumnFactory","io.github.inductiveautomation.kindling.utils.ColumnList.toColumnFactory"]},{"name":"fun toDetail(): Detail","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.toDetail","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/to-detail.html","searchKeys":["toDetail","fun toDetail(): Detail","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.toDetail"]},{"name":"fun toDetail(): Detail","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.toDetail","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-s-f-group/to-detail.html","searchKeys":["toDetail","fun toDetail(): Detail","io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.toDetail"]},{"name":"fun toDetail(): Detail","description":"io.github.inductiveautomation.kindling.cache.model.AuditProfileData.toDetail","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-audit-profile-data/to-detail.html","searchKeys":["toDetail","fun toDetail(): Detail","io.github.inductiveautomation.kindling.cache.model.AuditProfileData.toDetail"]},{"name":"fun toDetail(): Detail","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.toDetail","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/to-detail.html","searchKeys":["toDetail","fun toDetail(): Detail","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.toDetail"]},{"name":"fun toPair(): Pair<String, String?>","description":"io.github.inductiveautomation.kindling.log.MDC.toPair","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c/to-pair.html","searchKeys":["toPair","fun toPair(): Pair<String, String?>","io.github.inductiveautomation.kindling.log.MDC.toPair"]},{"name":"fun treeCellRenderer(customize: JLabel.(tree: JTree, value: Any?, selected: Boolean, expanded: Boolean, leaf: Boolean, row: Int, hasFocus: Boolean) -> Component): TreeCellRenderer","description":"io.github.inductiveautomation.kindling.utils.treeCellRenderer","location":"kindling/io.github.inductiveautomation.kindling.utils/tree-cell-renderer.html","searchKeys":["treeCellRenderer","fun treeCellRenderer(customize: JLabel.(tree: JTree, value: Any?, selected: Boolean, expanded: Boolean, leaf: Boolean, row: Int, hasFocus: Boolean) -> Component): TreeCellRenderer","io.github.inductiveautomation.kindling.utils.treeCellRenderer"]},{"name":"fun valueOf(char: Char): Level","description":"io.github.inductiveautomation.kindling.log.Level.Companion.valueOf","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-companion/value-of.html","searchKeys":["valueOf","fun valueOf(char: Char): Level","io.github.inductiveautomation.kindling.log.Level.Companion.valueOf"]},{"name":"fun valueOf(value: String): FilterComparator","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.valueOf","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FilterComparator","io.github.inductiveautomation.kindling.utils.FilterComparator.valueOf"]},{"name":"fun valueOf(value: String): IdbTool","description":"io.github.inductiveautomation.kindling.idb.IdbTool.valueOf","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdbTool","io.github.inductiveautomation.kindling.idb.IdbTool.valueOf"]},{"name":"fun valueOf(value: String): Level","description":"io.github.inductiveautomation.kindling.log.Level.valueOf","location":"kindling/io.github.inductiveautomation.kindling.log/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Level","io.github.inductiveautomation.kindling.log.Level.valueOf"]},{"name":"fun valueOf(value: String): LinkHandlingStrategy","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.valueOf","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LinkHandlingStrategy","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.valueOf"]},{"name":"fun valueOf(value: String): MajorVersion","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.valueOf","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MajorVersion","io.github.inductiveautomation.kindling.utils.MajorVersion.valueOf"]},{"name":"fun valueOf(value: String): MetricCard.Companion.MetricPresentation","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.valueOf","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MetricCard.Companion.MetricPresentation","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.valueOf"]},{"name":"fun valueOf(value: String): TableComparator","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.valueOf","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TableComparator","io.github.inductiveautomation.kindling.idb.generic.TableComparator.valueOf"]},{"name":"fun values(): Array<FilterComparator>","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.values","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/values.html","searchKeys":["values","fun values(): Array<FilterComparator>","io.github.inductiveautomation.kindling.utils.FilterComparator.values"]},{"name":"fun values(): Array<IdbTool>","description":"io.github.inductiveautomation.kindling.idb.IdbTool.values","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/values.html","searchKeys":["values","fun values(): Array<IdbTool>","io.github.inductiveautomation.kindling.idb.IdbTool.values"]},{"name":"fun values(): Array<Level>","description":"io.github.inductiveautomation.kindling.log.Level.values","location":"kindling/io.github.inductiveautomation.kindling.log/-level/values.html","searchKeys":["values","fun values(): Array<Level>","io.github.inductiveautomation.kindling.log.Level.values"]},{"name":"fun values(): Array<LinkHandlingStrategy>","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.values","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/values.html","searchKeys":["values","fun values(): Array<LinkHandlingStrategy>","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.values"]},{"name":"fun values(): Array<MajorVersion>","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.values","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/values.html","searchKeys":["values","fun values(): Array<MajorVersion>","io.github.inductiveautomation.kindling.utils.MajorVersion.values"]},{"name":"fun values(): Array<MetricCard.Companion.MetricPresentation>","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.values","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/values.html","searchKeys":["values","fun values(): Array<MetricCard.Companion.MetricPresentation>","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.values"]},{"name":"fun values(): Array<TableComparator>","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.values","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/values.html","searchKeys":["values","fun values(): Array<TableComparator>","io.github.inductiveautomation.kindling.idb.generic.TableComparator.values"]},{"name":"infix fun InputStream.transferTo(output: OutputStream)","description":"io.github.inductiveautomation.kindling.utils.transferTo","location":"kindling/io.github.inductiveautomation.kindling.utils/transfer-to.html","searchKeys":["transferTo","infix fun InputStream.transferTo(output: OutputStream)","io.github.inductiveautomation.kindling.utils.transferTo"]},{"name":"inline fun <S> loadService(): ServiceLoader<S>","description":"io.github.inductiveautomation.kindling.utils.loadService","location":"kindling/io.github.inductiveautomation.kindling.utils/load-service.html","searchKeys":["loadService","inline fun <S> loadService(): ServiceLoader<S>","io.github.inductiveautomation.kindling.utils.loadService"]},{"name":"inline fun <T : Any> JXTable.setDefaultRenderer(noinline getText: StringProvider<T>, noinline getIcon: IconProvider<T> = defaultIconFunction(), noinline getTooltip: StringProvider<T> = { null })","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.setDefaultRenderer","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/-companion/set-default-renderer.html","searchKeys":["setDefaultRenderer","inline fun <T : Any> JXTable.setDefaultRenderer(noinline getText: StringProvider<T>, noinline getIcon: IconProvider<T> = defaultIconFunction(), noinline getTooltip: StringProvider<T> = { null })","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.setDefaultRenderer"]},{"name":"inline fun <T : Any> PreferenceCategory.preference(name: String, description: String? = null, requiresRestart: Boolean = false, default: T, serializer: KSerializer<T> = serializer(), noinline editor: Preference<T>.() -> JComponent?): Preference<T>","description":"io.github.inductiveautomation.kindling.core.Preference.Companion.preference","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/-companion/preference.html","searchKeys":["preference","inline fun <T : Any> PreferenceCategory.preference(name: String, description: String? = null, requiresRestart: Boolean = false, default: T, serializer: KSerializer<T> = serializer(), noinline editor: Preference<T>.() -> JComponent?): Preference<T>","io.github.inductiveautomation.kindling.core.Preference.Companion.preference"]},{"name":"inline fun <T : Component> T.attachPopupMenu(crossinline menuFn: T.(event: MouseEvent) -> JPopupMenu?)","description":"io.github.inductiveautomation.kindling.utils.attachPopupMenu","location":"kindling/io.github.inductiveautomation.kindling.utils/attach-popup-menu.html","searchKeys":["attachPopupMenu","inline fun <T : Component> T.attachPopupMenu(crossinline menuFn: T.(event: MouseEvent) -> JPopupMenu?)","io.github.inductiveautomation.kindling.utils.attachPopupMenu"]},{"name":"inline fun <T : EventListener> EventListenerList.add(listener: T)","description":"io.github.inductiveautomation.kindling.utils.add","location":"kindling/io.github.inductiveautomation.kindling.utils/add.html","searchKeys":["add","inline fun <T : EventListener> EventListenerList.add(listener: T)","io.github.inductiveautomation.kindling.utils.add"]},{"name":"inline fun <T : EventListener> EventListenerList.getAll(): Array<T>","description":"io.github.inductiveautomation.kindling.utils.getAll","location":"kindling/io.github.inductiveautomation.kindling.utils/get-all.html","searchKeys":["getAll","inline fun <T : EventListener> EventListenerList.getAll(): Array<T>","io.github.inductiveautomation.kindling.utils.getAll"]},{"name":"inline fun <T> JComboBox<T>.configureCellRenderer(noinline block: BasicComboBoxRenderer.(list: JList<*>, value: T?, index: Int, isSelected: Boolean, cellHasFocus: Boolean) -> Unit)","description":"io.github.inductiveautomation.kindling.utils.configureCellRenderer","location":"kindling/io.github.inductiveautomation.kindling.utils/configure-cell-renderer.html","searchKeys":["configureCellRenderer","inline fun <T> JComboBox<T>.configureCellRenderer(noinline block: BasicComboBoxRenderer.(list: JList<*>, value: T?, index: Int, isSelected: Boolean, cellHasFocus: Boolean) -> Unit)","io.github.inductiveautomation.kindling.utils.configureCellRenderer"]},{"name":"inline fun <T> getLogger(): Logger","description":"io.github.inductiveautomation.kindling.utils.getLogger","location":"kindling/io.github.inductiveautomation.kindling.utils/get-logger.html","searchKeys":["getLogger","inline fun <T> getLogger(): Logger","io.github.inductiveautomation.kindling.utils.getLogger"]},{"name":"inline fun <T> listCellRenderer(crossinline customize: JLabel.(list: JList<*>, value: T, index: Int, selected: Boolean, focused: Boolean) -> Unit): ListCellRenderer<Any>","description":"io.github.inductiveautomation.kindling.utils.listCellRenderer","location":"kindling/io.github.inductiveautomation.kindling.utils/list-cell-renderer.html","searchKeys":["listCellRenderer","inline fun <T> listCellRenderer(crossinline customize: JLabel.(list: JList<*>, value: T, index: Int, selected: Boolean, focused: Boolean) -> Unit): ListCellRenderer<Any>","io.github.inductiveautomation.kindling.utils.listCellRenderer"]},{"name":"inline fun FlatScrollPane(component: Component, block: FlatScrollPane.() -> Unit = {}): FlatScrollPane","description":"io.github.inductiveautomation.kindling.utils.FlatScrollPane","location":"kindling/io.github.inductiveautomation.kindling.utils/-flat-scroll-pane.html","searchKeys":["FlatScrollPane","inline fun FlatScrollPane(component: Component, block: FlatScrollPane.() -> Unit = {}): FlatScrollPane","io.github.inductiveautomation.kindling.utils.FlatScrollPane"]},{"name":"inline fun StringBuilder.tag(tag: String, content: StringBuilder.() -> Unit)","description":"io.github.inductiveautomation.kindling.utils.tag","location":"kindling/io.github.inductiveautomation.kindling.utils/tag.html","searchKeys":["tag","inline fun StringBuilder.tag(tag: String, content: StringBuilder.() -> Unit)","io.github.inductiveautomation.kindling.utils.tag"]},{"name":"inline fun StyledLabel(block: StyledLabelBuilder.() -> Unit): StyledLabel","description":"io.github.inductiveautomation.kindling.utils.StyledLabel","location":"kindling/io.github.inductiveautomation.kindling.utils/-styled-label.html","searchKeys":["StyledLabel","inline fun StyledLabel(block: StyledLabelBuilder.() -> Unit): StyledLabel","io.github.inductiveautomation.kindling.utils.StyledLabel"]},{"name":"inline fun StyledLabel.style(block: StyledLabelBuilder.() -> Unit)","description":"io.github.inductiveautomation.kindling.utils.style","location":"kindling/io.github.inductiveautomation.kindling.utils/style.html","searchKeys":["style","inline fun StyledLabel.style(block: StyledLabelBuilder.() -> Unit)","io.github.inductiveautomation.kindling.utils.style"]},{"name":"inline fun jFrame(title: String, width: Int, height: Int, initiallyVisible: Boolean = true, embedContentIntoTitleBar: Boolean = false, block: JFrame.() -> Unit): JFrame","description":"io.github.inductiveautomation.kindling.utils.jFrame","location":"kindling/io.github.inductiveautomation.kindling.utils/j-frame.html","searchKeys":["jFrame","inline fun jFrame(title: String, width: Int, height: Int, initiallyVisible: Boolean = true, embedContentIntoTitleBar: Boolean = false, block: JFrame.() -> Unit): JFrame","io.github.inductiveautomation.kindling.utils.jFrame"]},{"name":"inline operator fun <R, C> invoke(header: String, noinline columnCustomization: TableColumnExt.(model: TableModel) -> Unit? = null, noinline getValue: (row: R) -> C): Column<row: R, C>","description":"io.github.inductiveautomation.kindling.utils.Column.Companion.invoke","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/-companion/invoke.html","searchKeys":["invoke","inline operator fun <R, C> invoke(header: String, noinline columnCustomization: TableColumnExt.(model: TableModel) -> Unit? = null, noinline getValue: (row: R) -> C): Column<row: R, C>","io.github.inductiveautomation.kindling.utils.Column.Companion.invoke"]},{"name":"inline operator fun <T : Any> invoke(noinline getText: StringProvider<T>, noinline getIcon: IconProvider<T> = defaultIconFunction(), noinline getTooltip: StringProvider<T> = { null }): ReifiedLabelProvider<T>","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.invoke","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/-companion/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> invoke(noinline getText: StringProvider<T>, noinline getIcon: IconProvider<T> = defaultIconFunction(), noinline getTooltip: StringProvider<T> = { null }): ReifiedLabelProvider<T>","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion.invoke"]},{"name":"inline operator fun <T : TableModel> invoke(model: T, columns: ColumnList<*>? = null): ReifiedJXTable<T>","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable.Companion.invoke","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/-companion/invoke.html","searchKeys":["invoke","inline operator fun <T : TableModel> invoke(model: T, columns: ColumnList<*>? = null): ReifiedJXTable<T>","io.github.inductiveautomation.kindling.utils.ReifiedJXTable.Companion.invoke"]},{"name":"inner class GroupingScrollBar : JScrollBar","description":"io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-grouping-scroll-bar/index.html","searchKeys":["GroupingScrollBar","inner class GroupingScrollBar : JScrollBar","io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar"]},{"name":"inner class SortAction(comparator: FilterComparator) : Action","description":"io.github.inductiveautomation.kindling.utils.FilterList.SortAction","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/-sort-action/index.html","searchKeys":["SortAction","inner class SortAction(comparator: FilterComparator) : Action","io.github.inductiveautomation.kindling.utils.FilterList.SortAction"]},{"name":"inner class SortAction(comparator: TableComparator) : Action","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/-sort-action/index.html","searchKeys":["SortAction","inner class SortAction(comparator: TableComparator) : Action","io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction"]},{"name":"interface ClipboardTool : Tool","description":"io.github.inductiveautomation.kindling.core.ClipboardTool","location":"kindling/io.github.inductiveautomation.kindling.core/-clipboard-tool/index.html","searchKeys":["ClipboardTool","interface ClipboardTool : Tool","io.github.inductiveautomation.kindling.core.ClipboardTool"]},{"name":"interface FloatableComponent","description":"io.github.inductiveautomation.kindling.utils.FloatableComponent","location":"kindling/io.github.inductiveautomation.kindling.utils/-floatable-component/index.html","searchKeys":["FloatableComponent","interface FloatableComponent","io.github.inductiveautomation.kindling.utils.FloatableComponent"]},{"name":"interface LogEvent","description":"io.github.inductiveautomation.kindling.log.LogEvent","location":"kindling/io.github.inductiveautomation.kindling.log/-log-event/index.html","searchKeys":["LogEvent","interface LogEvent","io.github.inductiveautomation.kindling.log.LogEvent"]},{"name":"interface MultiTool : Tool","description":"io.github.inductiveautomation.kindling.core.MultiTool","location":"kindling/io.github.inductiveautomation.kindling.core/-multi-tool/index.html","searchKeys":["MultiTool","interface MultiTool : Tool","io.github.inductiveautomation.kindling.core.MultiTool"]},{"name":"interface PopupMenuCustomizer","description":"io.github.inductiveautomation.kindling.utils.PopupMenuCustomizer","location":"kindling/io.github.inductiveautomation.kindling.utils/-popup-menu-customizer/index.html","searchKeys":["PopupMenuCustomizer","interface PopupMenuCustomizer","io.github.inductiveautomation.kindling.utils.PopupMenuCustomizer"]},{"name":"interface PreferenceCategory","description":"io.github.inductiveautomation.kindling.core.PreferenceCategory","location":"kindling/io.github.inductiveautomation.kindling.core/-preference-category/index.html","searchKeys":["PreferenceCategory","interface PreferenceCategory","io.github.inductiveautomation.kindling.core.PreferenceCategory"]},{"name":"interface QueryResult","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/index.html","searchKeys":["QueryResult","interface QueryResult","io.github.inductiveautomation.kindling.idb.generic.QueryResult"]},{"name":"interface Tool","description":"io.github.inductiveautomation.kindling.core.Tool","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/index.html","searchKeys":["Tool","interface Tool","io.github.inductiveautomation.kindling.core.Tool"]},{"name":"object CacheColumns : ColumnList<CacheEntry> ","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/index.html","searchKeys":["CacheColumns","object CacheColumns : ColumnList<CacheEntry> ","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns"]},{"name":"object CacheViewer : Tool","description":"io.github.inductiveautomation.kindling.cache.CacheViewer","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/index.html","searchKeys":["CacheViewer","object CacheViewer : Tool","io.github.inductiveautomation.kindling.cache.CacheViewer"]},{"name":"object CharsetSerializer : KSerializer<Charset> ","description":"io.github.inductiveautomation.kindling.utils.CharsetSerializer","location":"kindling/io.github.inductiveautomation.kindling.utils/-charset-serializer/index.html","searchKeys":["CharsetSerializer","object CharsetSerializer : KSerializer<Charset> ","io.github.inductiveautomation.kindling.utils.CharsetSerializer"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.MainPanel.Companion","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.MainPanel.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.CacheView.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.CacheView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-s-f-group/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.AlarmJournalSFGroup.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.AuditProfileData.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-audit-profile-data/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.AuditProfileData.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.BasicDataset.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.Companion","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.core.Detail.Companion","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.core.Detail.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.core.Preference.Companion","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.core.Preference.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.core.Theme.Companion","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.core.Theme.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.core.Tool.Companion","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.core.Tool.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.core.ToolPanel.Companion","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.core.ToolPanel.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.Companion","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-viewer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree.Companion","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-d-b-meta-data-tree/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.idb.generic.DBMetaDataTree.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.idb.generic.GenericView.Companion","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-generic-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.idb.generic.GenericView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.Companion","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-results-panel/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricsView.Companion","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metrics-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.idb.metrics.MetricsView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.internal.DetailsIcon.Companion","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-icon/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.internal.DetailsIcon.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.log.DurationUnit.Companion","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.log.DurationUnit.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.log.Level.Companion","location":"kindling/io.github.inductiveautomation.kindling.log/-level/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.log.Level.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.log.LogPanel.Companion","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.log.LogPanel.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.Companion","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.log.WrapperLogEvent.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.log.WrapperLogView.Companion","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.log.WrapperLogView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.Companion","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.thread.MultiThreadView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.Companion","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Companion","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.thread.model.Thread.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump.Companion","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.thread.model.ThreadDump.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.Column.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.Column.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.FilterModel.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.FilterModel.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.MajorVersion.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.ReifiedJXTable.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-label-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.ReifiedLabelProvider.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.utils.ScrollingTextPane.Companion","location":"kindling/io.github.inductiveautomation.kindling.utils/-scrolling-text-pane/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.utils.ScrollingTextPane.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.zip.views.GenericFileView.Companion","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-generic-file-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.zip.views.GenericFileView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.zip.views.ImageView.Companion","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.zip.views.ImageView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView.Companion","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.zip.views.TextFileView.Companion"]},{"name":"object Companion","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.Companion","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.inductiveautomation.kindling.zip.views.ToolView.Companion"]},{"name":"object Constants","description":"io.github.inductiveautomation.kindling.zip.ZipView.Constants","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/-constants/index.html","searchKeys":["Constants","object Constants","io.github.inductiveautomation.kindling.zip.ZipView.Constants"]},{"name":"object DetailsColumns : ColumnList<Map.Entry<String, String>> ","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/-details-columns/index.html","searchKeys":["DetailsColumns","object DetailsColumns : ColumnList<Map.Entry<String, String>> ","io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns"]},{"name":"object GatewayNetworkTool : ClipboardTool","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/index.html","searchKeys":["GatewayNetworkTool","object GatewayNetworkTool : ClipboardTool","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool"]},{"name":"object IdbViewer : Tool","description":"io.github.inductiveautomation.kindling.idb.IdbViewer","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/index.html","searchKeys":["IdbViewer","object IdbViewer : Tool","io.github.inductiveautomation.kindling.idb.IdbViewer"]},{"name":"object MDCColumns : ColumnList<MDCTableRow> ","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/-m-d-c-columns/index.html","searchKeys":["MDCColumns","object MDCColumns : ColumnList<MDCTableRow> ","io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns"]},{"name":"object NoneAsNullStringSerializer : KSerializer<String?> ","description":"io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-none-as-null-string-serializer/index.html","searchKeys":["NoneAsNullStringSerializer","object NoneAsNullStringSerializer : KSerializer<String?> ","io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer"]},{"name":"object PathSerializer : KSerializer<Path> ","description":"io.github.inductiveautomation.kindling.utils.PathSerializer","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/index.html","searchKeys":["PathSerializer","object PathSerializer : KSerializer<Path> ","io.github.inductiveautomation.kindling.utils.PathSerializer"]},{"name":"object ThemeSerializer : KSerializer<Theme> ","description":"io.github.inductiveautomation.kindling.utils.ThemeSerializer","location":"kindling/io.github.inductiveautomation.kindling.utils/-theme-serializer/index.html","searchKeys":["ThemeSerializer","object ThemeSerializer : KSerializer<Theme> ","io.github.inductiveautomation.kindling.utils.ThemeSerializer"]},{"name":"object ToolSerializer : KSerializer<Tool> ","description":"io.github.inductiveautomation.kindling.utils.ToolSerializer","location":"kindling/io.github.inductiveautomation.kindling.utils/-tool-serializer/index.html","searchKeys":["ToolSerializer","object ToolSerializer : KSerializer<Tool> ","io.github.inductiveautomation.kindling.utils.ToolSerializer"]},{"name":"object ZipViewer : Tool","description":"io.github.inductiveautomation.kindling.zip.ZipViewer","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/index.html","searchKeys":["ZipViewer","object ZipViewer : Tool","io.github.inductiveautomation.kindling.zip.ZipViewer"]},{"name":"object ZoneIdSerializer : KSerializer<ZoneId> ","description":"io.github.inductiveautomation.kindling.utils.ZoneIdSerializer","location":"kindling/io.github.inductiveautomation.kindling.utils/-zone-id-serializer/index.html","searchKeys":["ZoneIdSerializer","object ZoneIdSerializer : KSerializer<ZoneId> ","io.github.inductiveautomation.kindling.utils.ZoneIdSerializer"]},{"name":"open class Action(name: String? = null, description: String? = null, icon: Icon? = null, accelerator: KeyStroke? = null, selected: Boolean = false, action: Action.(e: ActionEvent) -> Unit) : AbstractAction","description":"io.github.inductiveautomation.kindling.utils.Action","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/index.html","searchKeys":["Action","open class Action(name: String? = null, description: String? = null, icon: Icon? = null, accelerator: KeyStroke? = null, selected: Boolean = false, action: Action.(e: ActionEvent) -> Unit) : AbstractAction","io.github.inductiveautomation.kindling.utils.Action"]},{"name":"open class ClassDataDesc","description":"deser.support.ClassDataDesc","location":"kindling/deser.support/-class-data-desc/index.html","searchKeys":["ClassDataDesc","open class ClassDataDesc","deser.support.ClassDataDesc"]},{"name":"open class ClassDetails","description":"deser.support.ClassDetails","location":"kindling/deser.support/-class-details/index.html","searchKeys":["ClassDetails","open class ClassDetails","deser.support.ClassDetails"]},{"name":"open class ClassField","description":"deser.support.ClassField","location":"kindling/deser.support/-class-field/index.html","searchKeys":["ClassField","open class ClassField","deser.support.ClassField"]},{"name":"open class LazyTab(val tabName: String, val icon: Icon?, val tabTooltip: String?, supplier: () -> Component) : JPanel, PopupMenuCustomizer, FloatableComponent","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/index.html","searchKeys":["LazyTab","open class LazyTab(val tabName: String, val icon: Icon?, val tabTooltip: String?, supplier: () -> Component) : JPanel, PopupMenuCustomizer, FloatableComponent","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab"]},{"name":"open class SerializationDumper","description":"deser.SerializationDumper","location":"kindling/deser/-serialization-dumper/index.html","searchKeys":["SerializationDumper","open class SerializationDumper","deser.SerializationDumper"]},{"name":"open fun addClass(className: String)","description":"deser.support.ClassDataDesc.addClass","location":"kindling/deser.support/-class-data-desc/add-class.html","searchKeys":["addClass","open fun addClass(className: String)","deser.support.ClassDataDesc.addClass"]},{"name":"open fun addField(cf: ClassField)","description":"deser.support.ClassDetails.addField","location":"kindling/deser.support/-class-details/add-field.html","searchKeys":["addField","open fun addField(cf: ClassField)","deser.support.ClassDetails.addField"]},{"name":"open fun addFieldToLastClass(typeCode: Byte)","description":"deser.support.ClassDataDesc.addFieldToLastClass","location":"kindling/deser.support/-class-data-desc/add-field-to-last-class.html","searchKeys":["addFieldToLastClass","open fun addFieldToLastClass(typeCode: Byte)","deser.support.ClassDataDesc.addFieldToLastClass"]},{"name":"open fun addSuperClassDesc(scdd: ClassDataDesc)","description":"deser.support.ClassDataDesc.addSuperClassDesc","location":"kindling/deser.support/-class-data-desc/add-super-class-desc.html","searchKeys":["addSuperClassDesc","open fun addSuperClassDesc(scdd: ClassDataDesc)","deser.support.ClassDataDesc.addSuperClassDesc"]},{"name":"open fun buildClassDataDescFromIndex(index: Int): ClassDataDesc","description":"deser.support.ClassDataDesc.buildClassDataDescFromIndex","location":"kindling/deser.support/-class-data-desc/build-class-data-desc-from-index.html","searchKeys":["buildClassDataDescFromIndex","open fun buildClassDataDescFromIndex(index: Int): ClassDataDesc","deser.support.ClassDataDesc.buildClassDataDescFromIndex"]},{"name":"open fun getClassCount(): Int","description":"deser.support.ClassDataDesc.getClassCount","location":"kindling/deser.support/-class-data-desc/get-class-count.html","searchKeys":["getClassCount","open fun getClassCount(): Int","deser.support.ClassDataDesc.getClassCount"]},{"name":"open fun getClassDetails(index: Int): ClassDetails","description":"deser.support.ClassDataDesc.getClassDetails","location":"kindling/deser.support/-class-data-desc/get-class-details.html","searchKeys":["getClassDetails","open fun getClassDetails(index: Int): ClassDetails","deser.support.ClassDataDesc.getClassDetails"]},{"name":"open fun getFields(): List<ClassField>","description":"deser.support.ClassDetails.getFields","location":"kindling/deser.support/-class-details/get-fields.html","searchKeys":["getFields","open fun getFields(): List<ClassField>","deser.support.ClassDetails.getFields"]},{"name":"open fun getHandle(): Int","description":"deser.support.ClassDetails.getHandle","location":"kindling/deser.support/-class-details/get-handle.html","searchKeys":["getHandle","open fun getHandle(): Int","deser.support.ClassDetails.getHandle"]},{"name":"open fun isSC_BLOCKDATA(): Boolean","description":"deser.support.ClassDetails.isSC_BLOCKDATA","location":"kindling/deser.support/-class-details/is-s-c_-b-l-o-c-k-d-a-t-a.html","searchKeys":["isSC_BLOCKDATA","open fun isSC_BLOCKDATA(): Boolean","deser.support.ClassDetails.isSC_BLOCKDATA"]},{"name":"open fun isSC_EXTERNALIZABLE(): Boolean","description":"deser.support.ClassDetails.isSC_EXTERNALIZABLE","location":"kindling/deser.support/-class-details/is-s-c_-e-x-t-e-r-n-a-l-i-z-a-b-l-e.html","searchKeys":["isSC_EXTERNALIZABLE","open fun isSC_EXTERNALIZABLE(): Boolean","deser.support.ClassDetails.isSC_EXTERNALIZABLE"]},{"name":"open fun isSC_SERIALIZABLE(): Boolean","description":"deser.support.ClassDetails.isSC_SERIALIZABLE","location":"kindling/deser.support/-class-details/is-s-c_-s-e-r-i-a-l-i-z-a-b-l-e.html","searchKeys":["isSC_SERIALIZABLE","open fun isSC_SERIALIZABLE(): Boolean","deser.support.ClassDetails.isSC_SERIALIZABLE"]},{"name":"open fun isSC_WRITE_METHOD(): Boolean","description":"deser.support.ClassDetails.isSC_WRITE_METHOD","location":"kindling/deser.support/-class-details/is-s-c_-w-r-i-t-e_-m-e-t-h-o-d.html","searchKeys":["isSC_WRITE_METHOD","open fun isSC_WRITE_METHOD(): Boolean","deser.support.ClassDetails.isSC_WRITE_METHOD"]},{"name":"open fun parseStream(): String","description":"deser.SerializationDumper.parseStream","location":"kindling/deser/-serialization-dumper/parse-stream.html","searchKeys":["parseStream","open fun parseStream(): String","deser.SerializationDumper.parseStream"]},{"name":"open fun setClassDescFlags(classDescFlags: Byte)","description":"deser.support.ClassDetails.setClassDescFlags","location":"kindling/deser.support/-class-details/set-class-desc-flags.html","searchKeys":["setClassDescFlags","open fun setClassDescFlags(classDescFlags: Byte)","deser.support.ClassDetails.setClassDescFlags"]},{"name":"open fun setHandle(handle: Int)","description":"deser.support.ClassDetails.setHandle","location":"kindling/deser.support/-class-details/set-handle.html","searchKeys":["setHandle","open fun setHandle(handle: Int)","deser.support.ClassDetails.setHandle"]},{"name":"open fun setLastClassDescFlags(classDescFlags: Byte)","description":"deser.support.ClassDataDesc.setLastClassDescFlags","location":"kindling/deser.support/-class-data-desc/set-last-class-desc-flags.html","searchKeys":["setLastClassDescFlags","open fun setLastClassDescFlags(classDescFlags: Byte)","deser.support.ClassDataDesc.setLastClassDescFlags"]},{"name":"open fun setLastClassHandle(handle: Int)","description":"deser.support.ClassDataDesc.setLastClassHandle","location":"kindling/deser.support/-class-data-desc/set-last-class-handle.html","searchKeys":["setLastClassHandle","open fun setLastClassHandle(handle: Int)","deser.support.ClassDataDesc.setLastClassHandle"]},{"name":"open fun setLastFieldName(name: String)","description":"deser.support.ClassDataDesc.setLastFieldName","location":"kindling/deser.support/-class-data-desc/set-last-field-name.html","searchKeys":["setLastFieldName","open fun setLastFieldName(name: String)","deser.support.ClassDataDesc.setLastFieldName"]},{"name":"open fun setLastFieldName(name: String)","description":"deser.support.ClassDetails.setLastFieldName","location":"kindling/deser.support/-class-details/set-last-field-name.html","searchKeys":["setLastFieldName","open fun setLastFieldName(name: String)","deser.support.ClassDetails.setLastFieldName"]},{"name":"open override fun <R : Temporal?> addTo(temporal: R, amount: Long): R","description":"io.github.inductiveautomation.kindling.log.DurationUnit.addTo","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/add-to.html","searchKeys":["addTo","open override fun <R : Temporal?> addTo(temporal: R, amount: Long): R","io.github.inductiveautomation.kindling.log.DurationUnit.addTo"]},{"name":"open override fun accept(file: File): Boolean","description":"io.github.inductiveautomation.kindling.utils.FileFilter.accept","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/accept.html","searchKeys":["accept","open override fun accept(file: File): Boolean","io.github.inductiveautomation.kindling.utils.FileFilter.accept"]},{"name":"open override fun actionPerformed(e: ActionEvent)","description":"io.github.inductiveautomation.kindling.utils.Action.actionPerformed","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/action-performed.html","searchKeys":["actionPerformed","open override fun actionPerformed(e: ActionEvent)","io.github.inductiveautomation.kindling.utils.Action.actionPerformed"]},{"name":"open override fun addSelectionInterval(index0: Int, index1: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.addSelectionInterval","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/add-selection-interval.html","searchKeys":["addSelectionInterval","open override fun addSelectionInterval(index0: Int, index1: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.addSelectionInterval"]},{"name":"open override fun between(temporal1Inclusive: Temporal, temporal2Exclusive: Temporal): Long","description":"io.github.inductiveautomation.kindling.log.DurationUnit.between","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/between.html","searchKeys":["between","open override fun between(temporal1Inclusive: Temporal, temporal2Exclusive: Temporal): Long","io.github.inductiveautomation.kindling.log.DurationUnit.between"]},{"name":"open override fun canImport(support: TransferHandler.TransferSupport): Boolean","description":"io.github.inductiveautomation.kindling.internal.FileTransferHandler.canImport","location":"kindling/io.github.inductiveautomation.kindling.internal/-file-transfer-handler/can-import.html","searchKeys":["canImport","open override fun canImport(support: TransferHandler.TransferSupport): Boolean","io.github.inductiveautomation.kindling.internal.FileTransferHandler.canImport"]},{"name":"open override fun children(): Enumeration<out TreeNode>","description":"io.github.inductiveautomation.kindling.idb.generic.Column.children","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/children.html","searchKeys":["children","open override fun children(): Enumeration<out TreeNode>","io.github.inductiveautomation.kindling.idb.generic.Column.children"]},{"name":"open override fun children(): Enumeration<out TreeNode>","description":"io.github.inductiveautomation.kindling.idb.generic.Table.children","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/children.html","searchKeys":["children","open override fun children(): Enumeration<out TreeNode>","io.github.inductiveautomation.kindling.idb.generic.Table.children"]},{"name":"open override fun children(): Enumeration<out TreeNode>","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.children","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/children.html","searchKeys":["children","open override fun children(): Enumeration<out TreeNode>","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.children"]},{"name":"open override fun clearSelection()","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.clearSelection","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/clear-selection.html","searchKeys":["clearSelection","open override fun clearSelection()","io.github.inductiveautomation.kindling.utils.NoSelectionModel.clearSelection"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.core.ToolPanel.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.core.ToolPanel.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.log.WrapperLogView.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.log.WrapperLogView.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.thread.MultiThreadView.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.zip.views.MultiToolView.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.zip.views.PathView.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-path-view/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.zip.views.PathView.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu)","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu)","io.github.inductiveautomation.kindling.zip.views.ToolView.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu, column: Column<out T, *>, event: T)","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu, column: Column<out T, *>, event: T)","io.github.inductiveautomation.kindling.utils.FilterListPanel.customizePopupMenu"]},{"name":"open override fun customizePopupMenu(menu: JPopupMenu, column: Column<out Thread?, *>, event: Thread?)","description":"io.github.inductiveautomation.kindling.thread.StatePanel.customizePopupMenu","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/customize-popup-menu.html","searchKeys":["customizePopupMenu","open override fun customizePopupMenu(menu: JPopupMenu, column: Column<out Thread?, *>, event: Thread?)","io.github.inductiveautomation.kindling.thread.StatePanel.customizePopupMenu"]},{"name":"open override fun deserialize(decoder: Decoder): Charset","description":"io.github.inductiveautomation.kindling.utils.CharsetSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-charset-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Charset","io.github.inductiveautomation.kindling.utils.CharsetSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Path","description":"io.github.inductiveautomation.kindling.utils.PathSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Path","io.github.inductiveautomation.kindling.utils.PathSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): String?","description":"io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-none-as-null-string-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): String?","io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Theme","description":"io.github.inductiveautomation.kindling.utils.ThemeSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-theme-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Theme","io.github.inductiveautomation.kindling.utils.ThemeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Tool","description":"io.github.inductiveautomation.kindling.utils.ToolSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-tool-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Tool","io.github.inductiveautomation.kindling.utils.ToolSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): ZoneId","description":"io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.deserialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-zone-id-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ZoneId","io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.deserialize"]},{"name":"open override fun filter(item: LogEvent): Boolean","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.filter","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/filter.html","searchKeys":["filter","open override fun filter(item: LogEvent): Boolean","io.github.inductiveautomation.kindling.log.MDCTableModel.filter"]},{"name":"open override fun filter(item: LogEvent): Boolean","description":"io.github.inductiveautomation.kindling.log.MDCTableRow.filter","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/filter.html","searchKeys":["filter","open override fun filter(item: LogEvent): Boolean","io.github.inductiveautomation.kindling.log.MDCTableRow.filter"]},{"name":"open override fun filter(item: Thread?): Boolean","description":"io.github.inductiveautomation.kindling.thread.PoolPanel.filter","location":"kindling/io.github.inductiveautomation.kindling.thread/-pool-panel/filter.html","searchKeys":["filter","open override fun filter(item: Thread?): Boolean","io.github.inductiveautomation.kindling.thread.PoolPanel.filter"]},{"name":"open override fun filter(item: Thread?): Boolean","description":"io.github.inductiveautomation.kindling.thread.StatePanel.filter","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/filter.html","searchKeys":["filter","open override fun filter(item: Thread?): Boolean","io.github.inductiveautomation.kindling.thread.StatePanel.filter"]},{"name":"open override fun filter(item: Thread?): Boolean","description":"io.github.inductiveautomation.kindling.thread.SystemPanel.filter","location":"kindling/io.github.inductiveautomation.kindling.thread/-system-panel/filter.html","searchKeys":["filter","open override fun filter(item: Thread?): Boolean","io.github.inductiveautomation.kindling.thread.SystemPanel.filter"]},{"name":"open override fun getAllowsChildren(): Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Column.getAllowsChildren","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/get-allows-children.html","searchKeys":["getAllowsChildren","open override fun getAllowsChildren(): Boolean","io.github.inductiveautomation.kindling.idb.generic.Column.getAllowsChildren"]},{"name":"open override fun getAllowsChildren(): Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Table.getAllowsChildren","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/get-allows-children.html","searchKeys":["getAllowsChildren","open override fun getAllowsChildren(): Boolean","io.github.inductiveautomation.kindling.idb.generic.Table.getAllowsChildren"]},{"name":"open override fun getAllowsChildren(): Boolean","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getAllowsChildren","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/get-allows-children.html","searchKeys":["getAllowsChildren","open override fun getAllowsChildren(): Boolean","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getAllowsChildren"]},{"name":"open override fun getAnchorSelectionIndex(): Int","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.getAnchorSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/get-anchor-selection-index.html","searchKeys":["getAnchorSelectionIndex","open override fun getAnchorSelectionIndex(): Int","io.github.inductiveautomation.kindling.utils.NoSelectionModel.getAnchorSelectionIndex"]},{"name":"open override fun getBlockIncrement(direction: Int): Int","description":"io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.getBlockIncrement","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-grouping-scroll-bar/get-block-increment.html","searchKeys":["getBlockIncrement","open override fun getBlockIncrement(direction: Int): Int","io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.getBlockIncrement"]},{"name":"open override fun getChildAt(childIndex: Int): TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Table.getChildAt","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/get-child-at.html","searchKeys":["getChildAt","open override fun getChildAt(childIndex: Int): TreeNode","io.github.inductiveautomation.kindling.idb.generic.Table.getChildAt"]},{"name":"open override fun getChildAt(childIndex: Int): TreeNode","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getChildAt","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/get-child-at.html","searchKeys":["getChildAt","open override fun getChildAt(childIndex: Int): TreeNode","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getChildAt"]},{"name":"open override fun getChildAt(childIndex: Int): TreeNode?","description":"io.github.inductiveautomation.kindling.idb.generic.Column.getChildAt","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/get-child-at.html","searchKeys":["getChildAt","open override fun getChildAt(childIndex: Int): TreeNode?","io.github.inductiveautomation.kindling.idb.generic.Column.getChildAt"]},{"name":"open override fun getChildCount(): Int","description":"io.github.inductiveautomation.kindling.idb.generic.Column.getChildCount","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/get-child-count.html","searchKeys":["getChildCount","open override fun getChildCount(): Int","io.github.inductiveautomation.kindling.idb.generic.Column.getChildCount"]},{"name":"open override fun getChildCount(): Int","description":"io.github.inductiveautomation.kindling.idb.generic.Table.getChildCount","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/get-child-count.html","searchKeys":["getChildCount","open override fun getChildCount(): Int","io.github.inductiveautomation.kindling.idb.generic.Table.getChildCount"]},{"name":"open override fun getChildCount(): Int","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getChildCount","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/get-child-count.html","searchKeys":["getChildCount","open override fun getChildCount(): Int","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getChildCount"]},{"name":"open override fun getColumnClass(column: Int): Class<*>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(column: Int): Class<*>","io.github.inductiveautomation.kindling.cache.CacheModel.getColumnClass"]},{"name":"open override fun getColumnClass(column: Int): Class<*>","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(column: Int): Class<*>","io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnClass"]},{"name":"open override fun getColumnClass(column: Int): Class<*>","description":"io.github.inductiveautomation.kindling.log.LogsModel.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(column: Int): Class<*>","io.github.inductiveautomation.kindling.log.LogsModel.getColumnClass"]},{"name":"open override fun getColumnClass(column: Int): Class<*>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(column: Int): Class<*>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnClass"]},{"name":"open override fun getColumnClass(columnIndex: Int): Class<*>","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(columnIndex: Int): Class<*>","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnClass"]},{"name":"open override fun getColumnClass(columnIndex: Int): Class<*>","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnClass","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get-column-class.html","searchKeys":["getColumnClass","open override fun getColumnClass(columnIndex: Int): Class<*>","io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnClass"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.cache.CacheModel.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.cache.CacheModel.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.log.LogsModel.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.log.LogsModel.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnCount"]},{"name":"open override fun getColumnCount(): Int","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnCount","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get-column-count.html","searchKeys":["getColumnCount","open override fun getColumnCount(): Int","io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnCount"]},{"name":"open override fun getColumnIndex(columnName: String): Int","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnIndex","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-index.html","searchKeys":["getColumnIndex","open override fun getColumnIndex(columnName: String): Int","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnIndex"]},{"name":"open override fun getColumnIndex(columnName: String): Int","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnIndex","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-index.html","searchKeys":["getColumnIndex","open override fun getColumnIndex(columnName: String): Int","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnIndex"]},{"name":"open override fun getColumnName(column: Int): String","description":"io.github.inductiveautomation.kindling.cache.CacheModel.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(column: Int): String","io.github.inductiveautomation.kindling.cache.CacheModel.getColumnName"]},{"name":"open override fun getColumnName(column: Int): String","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(column: Int): String","io.github.inductiveautomation.kindling.internal.DetailsModel.getColumnName"]},{"name":"open override fun getColumnName(column: Int): String","description":"io.github.inductiveautomation.kindling.log.LogsModel.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(column: Int): String","io.github.inductiveautomation.kindling.log.LogsModel.getColumnName"]},{"name":"open override fun getColumnName(column: Int): String","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(column: Int): String","io.github.inductiveautomation.kindling.log.MDCTableModel.getColumnName"]},{"name":"open override fun getColumnName(column: Int): String","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(column: Int): String","io.github.inductiveautomation.kindling.thread.model.ThreadModel.getColumnName"]},{"name":"open override fun getColumnName(columnIndex: Int): String","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(columnIndex: Int): String","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnName"]},{"name":"open override fun getColumnName(columnIndex: Int): String","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(columnIndex: Int): String","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnName"]},{"name":"open override fun getColumnName(columnIndex: Int): String","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnName","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/get-column-name.html","searchKeys":["getColumnName","open override fun getColumnName(columnIndex: Int): String","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getColumnName"]},{"name":"open override fun getColumnNames(): List<String>","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnNames","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-names.html","searchKeys":["getColumnNames","open override fun getColumnNames(): List<String>","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnNames"]},{"name":"open override fun getColumnNames(): List<String>","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnNames","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-names.html","searchKeys":["getColumnNames","open override fun getColumnNames(): List<String>","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnNames"]},{"name":"open override fun getColumnType(columnIndex: Int): Class<*>","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnType","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-type.html","searchKeys":["getColumnType","open override fun getColumnType(columnIndex: Int): Class<*>","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnType"]},{"name":"open override fun getColumnType(columnIndex: Int): Class<*>","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnType","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-type.html","searchKeys":["getColumnType","open override fun getColumnType(columnIndex: Int): Class<*>","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnType"]},{"name":"open override fun getColumnTypes(): List<Class<*>>","description":"io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnTypes","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-abstract-dataset/get-column-types.html","searchKeys":["getColumnTypes","open override fun getColumnTypes(): List<Class<*>>","io.github.inductiveautomation.kindling.cache.model.AbstractDataset.getColumnTypes"]},{"name":"open override fun getColumnTypes(): List<Class<*>>","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnTypes","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-column-types.html","searchKeys":["getColumnTypes","open override fun getColumnTypes(): List<Class<*>>","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getColumnTypes"]},{"name":"open override fun getDescription(): String","description":"io.github.inductiveautomation.kindling.utils.FileFilter.getDescription","location":"kindling/io.github.inductiveautomation.kindling.utils/-file-filter/get-description.html","searchKeys":["getDescription","open override fun getDescription(): String","io.github.inductiveautomation.kindling.utils.FileFilter.getDescription"]},{"name":"open override fun getDuration(): Duration","description":"io.github.inductiveautomation.kindling.log.DurationUnit.getDuration","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/get-duration.html","searchKeys":["getDuration","open override fun getDuration(): Duration","io.github.inductiveautomation.kindling.log.DurationUnit.getDuration"]},{"name":"open override fun getElementAt(index: Int): Any","description":"io.github.inductiveautomation.kindling.cache.SchemaModel.getElementAt","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-model/get-element-at.html","searchKeys":["getElementAt","open override fun getElementAt(index: Int): Any","io.github.inductiveautomation.kindling.cache.SchemaModel.getElementAt"]},{"name":"open override fun getElementAt(index: Int): Any?","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.getElementAt","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-list-model/get-element-at.html","searchKeys":["getElementAt","open override fun getElementAt(index: Int): Any?","io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.getElementAt"]},{"name":"open override fun getElementAt(index: Int): Any?","description":"io.github.inductiveautomation.kindling.utils.FilterModel.getElementAt","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/get-element-at.html","searchKeys":["getElementAt","open override fun getElementAt(index: Int): Any?","io.github.inductiveautomation.kindling.utils.FilterModel.getElementAt"]},{"name":"open override fun getIcon(file: File): Icon?","description":"io.github.inductiveautomation.kindling.core.CustomIconView.getIcon","location":"kindling/io.github.inductiveautomation.kindling.core/-custom-icon-view/get-icon.html","searchKeys":["getIcon","open override fun getIcon(file: File): Icon?","io.github.inductiveautomation.kindling.core.CustomIconView.getIcon"]},{"name":"open override fun getIndex(node: TreeNode): Int","description":"io.github.inductiveautomation.kindling.idb.generic.Table.getIndex","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/get-index.html","searchKeys":["getIndex","open override fun getIndex(node: TreeNode): Int","io.github.inductiveautomation.kindling.idb.generic.Table.getIndex"]},{"name":"open override fun getIndex(node: TreeNode?): Int","description":"io.github.inductiveautomation.kindling.idb.generic.Column.getIndex","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/get-index.html","searchKeys":["getIndex","open override fun getIndex(node: TreeNode?): Int","io.github.inductiveautomation.kindling.idb.generic.Column.getIndex"]},{"name":"open override fun getIndex(node: TreeNode?): Int","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/get-index.html","searchKeys":["getIndex","open override fun getIndex(node: TreeNode?): Int","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getIndex"]},{"name":"open override fun getLeadSelectionIndex(): Int","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.getLeadSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/get-lead-selection-index.html","searchKeys":["getLeadSelectionIndex","open override fun getLeadSelectionIndex(): Int","io.github.inductiveautomation.kindling.utils.NoSelectionModel.getLeadSelectionIndex"]},{"name":"open override fun getMaxSelectionIndex(): Int","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.getMaxSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/get-max-selection-index.html","searchKeys":["getMaxSelectionIndex","open override fun getMaxSelectionIndex(): Int","io.github.inductiveautomation.kindling.utils.NoSelectionModel.getMaxSelectionIndex"]},{"name":"open override fun getMinSelectionIndex(): Int","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.getMinSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/get-min-selection-index.html","searchKeys":["getMinSelectionIndex","open override fun getMinSelectionIndex(): Int","io.github.inductiveautomation.kindling.utils.NoSelectionModel.getMinSelectionIndex"]},{"name":"open override fun getModel(): FilterModel<in Any?>","description":"io.github.inductiveautomation.kindling.utils.FilterList.getModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/get-model.html","searchKeys":["getModel","open override fun getModel(): FilterModel<in Any?>","io.github.inductiveautomation.kindling.utils.FilterList.getModel"]},{"name":"open override fun getModel(): SchemaModel","description":"io.github.inductiveautomation.kindling.cache.SchemaFilterList.getModel","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-filter-list/get-model.html","searchKeys":["getModel","open override fun getModel(): SchemaModel","io.github.inductiveautomation.kindling.cache.SchemaFilterList.getModel"]},{"name":"open override fun getModel(): T","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable.getModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/get-model.html","searchKeys":["getModel","open override fun getModel(): T","io.github.inductiveautomation.kindling.utils.ReifiedJXTable.getModel"]},{"name":"open override fun getModel(): ThreadDumpListModel","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.getModel","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-checkbox-list/get-model.html","searchKeys":["getModel","open override fun getModel(): ThreadDumpListModel","io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.getModel"]},{"name":"open override fun getModel(): ZipFileModel?","description":"io.github.inductiveautomation.kindling.utils.ZipFileTree.getModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-tree/get-model.html","searchKeys":["getModel","open override fun getModel(): ZipFileModel?","io.github.inductiveautomation.kindling.utils.ZipFileTree.getModel"]},{"name":"open override fun getParent(): TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Column.getParent","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/get-parent.html","searchKeys":["getParent","open override fun getParent(): TreeNode","io.github.inductiveautomation.kindling.idb.generic.Column.getParent"]},{"name":"open override fun getParent(): TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Table.getParent","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/get-parent.html","searchKeys":["getParent","open override fun getParent(): TreeNode","io.github.inductiveautomation.kindling.idb.generic.Table.getParent"]},{"name":"open override fun getParent(): TreeNode?","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getParent","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/get-parent.html","searchKeys":["getParent","open override fun getParent(): TreeNode?","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.getParent"]},{"name":"open override fun getPrimitiveValueAt(rowIndex: Int, columnIndex: Int): Double","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getPrimitiveValueAt","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-primitive-value-at.html","searchKeys":["getPrimitiveValueAt","open override fun getPrimitiveValueAt(rowIndex: Int, columnIndex: Int): Double","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getPrimitiveValueAt"]},{"name":"open override fun getQualityAt(rowIndex: Int, columnIndex: Int): QualityCode","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getQualityAt","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-quality-at.html","searchKeys":["getQualityAt","open override fun getQualityAt(rowIndex: Int, columnIndex: Int): QualityCode","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getQualityAt"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.cache.CacheModel.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.cache.CacheModel.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.internal.DetailsModel.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.log.LogsModel.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.log.LogsModel.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.log.MDCTableModel.getRowCount"]},{"name":"open override fun getRowCount(): Int","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.getRowCount","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get-row-count.html","searchKeys":["getRowCount","open override fun getRowCount(): Int","io.github.inductiveautomation.kindling.thread.model.ThreadModel.getRowCount"]},{"name":"open override fun getSelectedItem(): Theme","description":"io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown.getSelectedItem","location":"kindling/io.github.inductiveautomation.kindling.core/-theme-selection-dropdown/get-selected-item.html","searchKeys":["getSelectedItem","open override fun getSelectedItem(): Theme","io.github.inductiveautomation.kindling.core.ThemeSelectionDropdown.getSelectedItem"]},{"name":"open override fun getSize(): Int","description":"io.github.inductiveautomation.kindling.cache.SchemaModel.getSize","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-model/get-size.html","searchKeys":["getSize","open override fun getSize(): Int","io.github.inductiveautomation.kindling.cache.SchemaModel.getSize"]},{"name":"open override fun getSize(): Int","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.getSize","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-list-model/get-size.html","searchKeys":["getSize","open override fun getSize(): Int","io.github.inductiveautomation.kindling.thread.ThreadDumpListModel.getSize"]},{"name":"open override fun getSize(): Int","description":"io.github.inductiveautomation.kindling.utils.FilterModel.getSize","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/get-size.html","searchKeys":["getSize","open override fun getSize(): Int","io.github.inductiveautomation.kindling.utils.FilterModel.getSize"]},{"name":"open override fun getTypeDescription(file: File): String?","description":"io.github.inductiveautomation.kindling.core.CustomIconView.getTypeDescription","location":"kindling/io.github.inductiveautomation.kindling.core/-custom-icon-view/get-type-description.html","searchKeys":["getTypeDescription","open override fun getTypeDescription(file: File): String?","io.github.inductiveautomation.kindling.core.CustomIconView.getTypeDescription"]},{"name":"open override fun getUnitIncrement(direction: Int): Int","description":"io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.getUnitIncrement","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-grouping-scroll-bar/get-unit-increment.html","searchKeys":["getUnitIncrement","open override fun getUnitIncrement(direction: Int): Int","io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.getUnitIncrement"]},{"name":"open override fun getValueAt(row: Int, column: Int): Any?","description":"io.github.inductiveautomation.kindling.cache.CacheModel.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(row: Int, column: Int): Any?","io.github.inductiveautomation.kindling.cache.CacheModel.getValueAt"]},{"name":"open override fun getValueAt(row: Int, column: Int): Any?","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(row: Int, column: Int): Any?","io.github.inductiveautomation.kindling.internal.DetailsModel.getValueAt"]},{"name":"open override fun getValueAt(row: Int, column: Int): Any?","description":"io.github.inductiveautomation.kindling.log.LogsModel.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(row: Int, column: Int): Any?","io.github.inductiveautomation.kindling.log.LogsModel.getValueAt"]},{"name":"open override fun getValueAt(row: Int, column: Int): Any?","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(row: Int, column: Int): Any?","io.github.inductiveautomation.kindling.thread.model.ThreadModel.getValueAt"]},{"name":"open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getValueAt"]},{"name":"open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any?","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any?","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.getValueAt"]},{"name":"open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any?","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(rowIndex: Int, columnIndex: Int): Any?","io.github.inductiveautomation.kindling.log.MDCTableModel.getValueAt"]},{"name":"open override fun getValueAt(rowIndex: Int, columnName: String): Any","description":"io.github.inductiveautomation.kindling.cache.model.BasicDataset.getValueAt","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-basic-dataset/get-value-at.html","searchKeys":["getValueAt","open override fun getValueAt(rowIndex: Int, columnName: String): Any","io.github.inductiveautomation.kindling.cache.model.BasicDataset.getValueAt"]},{"name":"open override fun getViewFactory(): ViewFactory","description":"io.github.inductiveautomation.kindling.core.DetailsEditorKit.getViewFactory","location":"kindling/io.github.inductiveautomation.kindling.core/-details-editor-kit/get-view-factory.html","searchKeys":["getViewFactory","open override fun getViewFactory(): ViewFactory","io.github.inductiveautomation.kindling.core.DetailsEditorKit.getViewFactory"]},{"name":"open override fun handleEvent(event: HyperlinkEvent)","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInBrowser.handleEvent","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/-open-in-browser/handle-event.html","searchKeys":["handleEvent","open override fun handleEvent(event: HyperlinkEvent)","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInBrowser.handleEvent"]},{"name":"open override fun handleEvent(event: HyperlinkEvent)","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInIde.handleEvent","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/-open-in-ide/handle-event.html","searchKeys":["handleEvent","open override fun handleEvent(event: HyperlinkEvent)","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.OpenInIde.handleEvent"]},{"name":"open override fun importData(support: TransferHandler.TransferSupport): Boolean","description":"io.github.inductiveautomation.kindling.internal.FileTransferHandler.importData","location":"kindling/io.github.inductiveautomation.kindling.internal/-file-transfer-handler/import-data.html","searchKeys":["importData","open override fun importData(support: TransferHandler.TransferSupport): Boolean","io.github.inductiveautomation.kindling.internal.FileTransferHandler.importData"]},{"name":"open override fun insertIndexInterval(index: Int, length: Int, before: Boolean)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.insertIndexInterval","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/insert-index-interval.html","searchKeys":["insertIndexInterval","open override fun insertIndexInterval(index: Int, length: Int, before: Boolean)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.insertIndexInterval"]},{"name":"open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","description":"io.github.inductiveautomation.kindling.log.LogsModel.isCellEditable","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/is-cell-editable.html","searchKeys":["isCellEditable","open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","io.github.inductiveautomation.kindling.log.LogsModel.isCellEditable"]},{"name":"open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.isCellEditable","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/is-cell-editable.html","searchKeys":["isCellEditable","open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","io.github.inductiveautomation.kindling.log.MDCTableModel.isCellEditable"]},{"name":"open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.isCellEditable","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/is-cell-editable.html","searchKeys":["isCellEditable","open override fun isCellEditable(rowIndex: Int, columnIndex: Int): Boolean","io.github.inductiveautomation.kindling.thread.model.ThreadModel.isCellEditable"]},{"name":"open override fun isDateBased(): Boolean","description":"io.github.inductiveautomation.kindling.log.DurationUnit.isDateBased","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/is-date-based.html","searchKeys":["isDateBased","open override fun isDateBased(): Boolean","io.github.inductiveautomation.kindling.log.DurationUnit.isDateBased"]},{"name":"open override fun isDurationEstimated(): Boolean","description":"io.github.inductiveautomation.kindling.log.DurationUnit.isDurationEstimated","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/is-duration-estimated.html","searchKeys":["isDurationEstimated","open override fun isDurationEstimated(): Boolean","io.github.inductiveautomation.kindling.log.DurationUnit.isDurationEstimated"]},{"name":"open override fun isFilterApplied(): Boolean","description":"io.github.inductiveautomation.kindling.thread.StatePanel.isFilterApplied","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/is-filter-applied.html","searchKeys":["isFilterApplied","open override fun isFilterApplied(): Boolean","io.github.inductiveautomation.kindling.thread.StatePanel.isFilterApplied"]},{"name":"open override fun isFilterApplied(): Boolean","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.isFilterApplied","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/is-filter-applied.html","searchKeys":["isFilterApplied","open override fun isFilterApplied(): Boolean","io.github.inductiveautomation.kindling.utils.FilterListPanel.isFilterApplied"]},{"name":"open override fun isLeaf(): Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Column.isLeaf","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/is-leaf.html","searchKeys":["isLeaf","open override fun isLeaf(): Boolean","io.github.inductiveautomation.kindling.idb.generic.Column.isLeaf"]},{"name":"open override fun isLeaf(): Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Table.isLeaf","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/is-leaf.html","searchKeys":["isLeaf","open override fun isLeaf(): Boolean","io.github.inductiveautomation.kindling.idb.generic.Table.isLeaf"]},{"name":"open override fun isLeaf(): Boolean","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.isLeaf","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/is-leaf.html","searchKeys":["isLeaf","open override fun isLeaf(): Boolean","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.isLeaf"]},{"name":"open override fun isSelectedIndex(index: Int): Boolean","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.isSelectedIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/is-selected-index.html","searchKeys":["isSelectedIndex","open override fun isSelectedIndex(index: Int): Boolean","io.github.inductiveautomation.kindling.utils.NoSelectionModel.isSelectedIndex"]},{"name":"open override fun isSelectionEmpty(): Boolean","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.isSelectionEmpty","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/is-selection-empty.html","searchKeys":["isSelectionEmpty","open override fun isSelectionEmpty(): Boolean","io.github.inductiveautomation.kindling.utils.NoSelectionModel.isSelectionEmpty"]},{"name":"open override fun isTimeBased(): Boolean","description":"io.github.inductiveautomation.kindling.log.DurationUnit.isTimeBased","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/is-time-based.html","searchKeys":["isTimeBased","open override fun isTimeBased(): Boolean","io.github.inductiveautomation.kindling.log.DurationUnit.isTimeBased"]},{"name":"open override fun open(connection: Connection): ToolPanel","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Logs.open","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-logs/open.html","searchKeys":["open","open override fun open(connection: Connection): ToolPanel","io.github.inductiveautomation.kindling.idb.IdbTool.Logs.open"]},{"name":"open override fun open(connection: Connection): ToolPanel","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Metrics.open","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-metrics/open.html","searchKeys":["open","open override fun open(connection: Connection): ToolPanel","io.github.inductiveautomation.kindling.idb.IdbTool.Metrics.open"]},{"name":"open override fun open(data: String): ToolPanel","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.open","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/open.html","searchKeys":["open","open override fun open(data: String): ToolPanel","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.open"]},{"name":"open override fun open(data: String): ToolPanel","description":"io.github.inductiveautomation.kindling.log.LogViewer.open","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/open.html","searchKeys":["open","open override fun open(data: String): ToolPanel","io.github.inductiveautomation.kindling.log.LogViewer.open"]},{"name":"open override fun open(data: String): ToolPanel","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/open.html","searchKeys":["open","open override fun open(data: String): ToolPanel","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.open","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.cache.CacheViewer.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.core.MultiTool.open","location":"kindling/io.github.inductiveautomation.kindling.core/-multi-tool/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.core.MultiTool.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.open","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.idb.IdbViewer.open","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.idb.IdbViewer.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open"]},{"name":"open override fun open(path: Path): ToolPanel","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.open","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/open.html","searchKeys":["open","open override fun open(path: Path): ToolPanel","io.github.inductiveautomation.kindling.zip.ZipViewer.open"]},{"name":"open override fun open(paths: List<Path>): ToolPanel","description":"io.github.inductiveautomation.kindling.log.LogViewer.open","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/open.html","searchKeys":["open","open override fun open(paths: List<Path>): ToolPanel","io.github.inductiveautomation.kindling.log.LogViewer.open"]},{"name":"open override fun open(paths: List<Path>): ToolPanel","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/open.html","searchKeys":["open","open override fun open(paths: List<Path>): ToolPanel","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.open"]},{"name":"open override fun removeIndexInterval(index0: Int, index1: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.removeIndexInterval","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/remove-index-interval.html","searchKeys":["removeIndexInterval","open override fun removeIndexInterval(index0: Int, index1: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.removeIndexInterval"]},{"name":"open override fun removeNotify()","description":"io.github.inductiveautomation.kindling.cache.CacheView.removeNotify","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/remove-notify.html","searchKeys":["removeNotify","open override fun removeNotify()","io.github.inductiveautomation.kindling.cache.CacheView.removeNotify"]},{"name":"open override fun removeNotify()","description":"io.github.inductiveautomation.kindling.idb.IdbView.removeNotify","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-view/remove-notify.html","searchKeys":["removeNotify","open override fun removeNotify()","io.github.inductiveautomation.kindling.idb.IdbView.removeNotify"]},{"name":"open override fun removeSelectionInterval(index0: Int, index1: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.removeSelectionInterval","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/remove-selection-interval.html","searchKeys":["removeSelectionInterval","open override fun removeSelectionInterval(index0: Int, index1: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.removeSelectionInterval"]},{"name":"open override fun reset()","description":"io.github.inductiveautomation.kindling.thread.StatePanel.reset","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/reset.html","searchKeys":["reset","open override fun reset()","io.github.inductiveautomation.kindling.thread.StatePanel.reset"]},{"name":"open override fun reset()","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.reset","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/reset.html","searchKeys":["reset","open override fun reset()","io.github.inductiveautomation.kindling.utils.FilterListPanel.reset"]},{"name":"open override fun serialize(encoder: Encoder, value: Charset)","description":"io.github.inductiveautomation.kindling.utils.CharsetSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-charset-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Charset)","io.github.inductiveautomation.kindling.utils.CharsetSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Path)","description":"io.github.inductiveautomation.kindling.utils.PathSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Path)","io.github.inductiveautomation.kindling.utils.PathSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: String?)","description":"io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-none-as-null-string-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: String?)","io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Theme)","description":"io.github.inductiveautomation.kindling.utils.ThemeSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-theme-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Theme)","io.github.inductiveautomation.kindling.utils.ThemeSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Tool)","description":"io.github.inductiveautomation.kindling.utils.ToolSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-tool-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Tool)","io.github.inductiveautomation.kindling.utils.ToolSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ZoneId)","description":"io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.serialize","location":"kindling/io.github.inductiveautomation.kindling.utils/-zone-id-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ZoneId)","io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.serialize"]},{"name":"open override fun setAnchorSelectionIndex(index: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.setAnchorSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/set-anchor-selection-index.html","searchKeys":["setAnchorSelectionIndex","open override fun setAnchorSelectionIndex(index: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.setAnchorSelectionIndex"]},{"name":"open override fun setLeadSelectionIndex(index: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.setLeadSelectionIndex","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/set-lead-selection-index.html","searchKeys":["setLeadSelectionIndex","open override fun setLeadSelectionIndex(index: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.setLeadSelectionIndex"]},{"name":"open override fun setModel(model: ListModel<*>)","description":"io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.setModel","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-dump-checkbox-list/set-model.html","searchKeys":["setModel","open override fun setModel(model: ListModel<*>)","io.github.inductiveautomation.kindling.thread.ThreadDumpCheckboxList.setModel"]},{"name":"open override fun setModel(model: ListModel<*>)","description":"io.github.inductiveautomation.kindling.utils.FilterList.setModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/set-model.html","searchKeys":["setModel","open override fun setModel(model: ListModel<*>)","io.github.inductiveautomation.kindling.utils.FilterList.setModel"]},{"name":"open override fun setModel(model: TableModel)","description":"io.github.inductiveautomation.kindling.utils.ReifiedJXTable.setModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-reified-j-x-table/set-model.html","searchKeys":["setModel","open override fun setModel(model: TableModel)","io.github.inductiveautomation.kindling.utils.ReifiedJXTable.setModel"]},{"name":"open override fun setModel(newModel: TreeModel?)","description":"io.github.inductiveautomation.kindling.utils.ZipFileTree.setModel","location":"kindling/io.github.inductiveautomation.kindling.utils/-zip-file-tree/set-model.html","searchKeys":["setModel","open override fun setModel(newModel: TreeModel?)","io.github.inductiveautomation.kindling.utils.ZipFileTree.setModel"]},{"name":"open override fun setSelectionInterval(index0: Int, index1: Int)","description":"io.github.inductiveautomation.kindling.utils.NoSelectionModel.setSelectionInterval","location":"kindling/io.github.inductiveautomation.kindling.utils/-no-selection-model/set-selection-interval.html","searchKeys":["setSelectionInterval","open override fun setSelectionInterval(index0: Int, index1: Int)","io.github.inductiveautomation.kindling.utils.NoSelectionModel.setSelectionInterval"]},{"name":"open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","description":"io.github.inductiveautomation.kindling.log.LogsModel.setValueAt","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/set-value-at.html","searchKeys":["setValueAt","open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","io.github.inductiveautomation.kindling.log.LogsModel.setValueAt"]},{"name":"open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.setValueAt","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/set-value-at.html","searchKeys":["setValueAt","open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","io.github.inductiveautomation.kindling.log.MDCTableModel.setValueAt"]},{"name":"open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.setValueAt","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/set-value-at.html","searchKeys":["setValueAt","open override fun setValueAt(aValue: Any?, rowIndex: Int, columnIndex: Int)","io.github.inductiveautomation.kindling.thread.model.ThreadModel.setValueAt"]},{"name":"open override fun supports(tables: List<String>): Boolean","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Logs.supports","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-logs/supports.html","searchKeys":["supports","open override fun supports(tables: List<String>): Boolean","io.github.inductiveautomation.kindling.idb.IdbTool.Logs.supports"]},{"name":"open override fun supports(tables: List<String>): Boolean","description":"io.github.inductiveautomation.kindling.idb.IdbTool.Metrics.supports","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/-metrics/supports.html","searchKeys":["supports","open override fun supports(tables: List<String>): Boolean","io.github.inductiveautomation.kindling.idb.IdbTool.Metrics.supports"]},{"name":"open override fun toString(): String","description":"io.github.inductiveautomation.kindling.log.DurationUnit.toString","location":"kindling/io.github.inductiveautomation.kindling.log/-duration-unit/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.inductiveautomation.kindling.log.DurationUnit.toString"]},{"name":"open override fun toString(): String","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.toString","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-blocker/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.toString"]},{"name":"open override fun toString(): String","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.toString","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.inductiveautomation.kindling.zip.views.MultiToolView.toString"]},{"name":"open override fun toString(): String","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView.toString","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.inductiveautomation.kindling.zip.views.SinglePathView.toString"]},{"name":"open override fun updateUI()","description":"io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.updateUI","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/-grouping-scroll-bar/update-u-i.html","searchKeys":["updateUI","open override fun updateUI()","io.github.inductiveautomation.kindling.log.LogPanel.GroupingScrollBar.updateUI"]},{"name":"open override fun updateUI()","description":"io.github.inductiveautomation.kindling.utils.FilterSidebar.updateUI","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-sidebar/update-u-i.html","searchKeys":["updateUI","open override fun updateUI()","io.github.inductiveautomation.kindling.utils.FilterSidebar.updateUI"]},{"name":"open override val component: FlatScrollPane","description":"io.github.inductiveautomation.kindling.thread.StatePanel.component","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/component.html","searchKeys":["component","open override val component: FlatScrollPane","io.github.inductiveautomation.kindling.thread.StatePanel.component"]},{"name":"open override val component: JPanel","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.component","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/component.html","searchKeys":["component","open override val component: JPanel","io.github.inductiveautomation.kindling.utils.FilterListPanel.component"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.description","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.cache.CacheViewer.description"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.description","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.description"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.idb.IdbViewer.description","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.idb.IdbViewer.description"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.log.LogViewer.description","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.log.LogViewer.description"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.description","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.description"]},{"name":"open override val description: String","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.description","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/description.html","searchKeys":["description","open override val description: String","io.github.inductiveautomation.kindling.zip.ZipViewer.description"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-none-as-null-string-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.thread.model.NoneAsNullStringSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.utils.CharsetSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.utils/-charset-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.utils.CharsetSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.utils.PathSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.utils.PathSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.utils.ThemeSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.utils/-theme-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.utils.ThemeSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.utils.ToolSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.utils/-tool-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.utils.ToolSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.descriptor","location":"kindling/io.github.inductiveautomation.kindling.utils/-zone-id-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","io.github.inductiveautomation.kindling.utils.ZoneIdSerializer.descriptor"]},{"name":"open override val displayName: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.displayName","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/display-name.html","searchKeys":["displayName","open override val displayName: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.displayName"]},{"name":"open override val displayName: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.displayName","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/display-name.html","searchKeys":["displayName","open override val displayName: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.displayName"]},{"name":"open override val displayName: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.displayName","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/display-name.html","searchKeys":["displayName","open override val displayName: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.displayName"]},{"name":"open override val displayName: String","description":"io.github.inductiveautomation.kindling.log.LogViewer.displayName","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/display-name.html","searchKeys":["displayName","open override val displayName: String","io.github.inductiveautomation.kindling.log.LogViewer.displayName"]},{"name":"open override val displayName: String","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.displayName","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/display-name.html","searchKeys":["displayName","open override val displayName: String","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.displayName"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.filter","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.cache.CacheViewer.filter"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.filter","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.filter"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.idb.IdbViewer.filter","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.idb.IdbViewer.filter"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.log.LogViewer.filter","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.log.LogViewer.filter"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.filter","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.filter"]},{"name":"open override val filter: FileFilter","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.filter","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/filter.html","searchKeys":["filter","open override val filter: FileFilter","io.github.inductiveautomation.kindling.zip.ZipViewer.filter"]},{"name":"open override val filterableColumns: List<Column<ThreadLifespan, String?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.filterableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-multi-thread-columns/filterable-columns.html","searchKeys":["filterableColumns","open override val filterableColumns: List<Column<ThreadLifespan, String?>>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.filterableColumns"]},{"name":"open override val filterableColumns: List<Column<ThreadLifespan, out Any?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.filterableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/filterable-columns.html","searchKeys":["filterableColumns","open override val filterableColumns: List<Column<ThreadLifespan, out Any?>>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.filterableColumns"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.cache.CacheViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.icon","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.idb.IdbView.icon","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.idb.IdbView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.idb.IdbViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.idb.IdbViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.log.LogViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.log.LogViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.icon","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.thread.MultiThreadView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.icon","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.ZipViewer.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.views.ImageView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.views.ImageView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.views.MultiToolView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.views.ProjectView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.views.TextFileView.icon"]},{"name":"open override val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/icon.html","searchKeys":["icon","open override val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.zip.views.ToolView.icon"]},{"name":"open override val icon: Icon","description":"io.github.inductiveautomation.kindling.cache.CacheView.icon","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/icon.html","searchKeys":["icon","open override val icon: Icon","io.github.inductiveautomation.kindling.cache.CacheView.icon"]},{"name":"open override val icon: Icon","description":"io.github.inductiveautomation.kindling.log.WrapperLogView.icon","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-view/icon.html","searchKeys":["icon","open override val icon: Icon","io.github.inductiveautomation.kindling.log.WrapperLogView.icon"]},{"name":"open override val icon: Icon","description":"io.github.inductiveautomation.kindling.zip.ZipView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-view/icon.html","searchKeys":["icon","open override val icon: Icon","io.github.inductiveautomation.kindling.zip.ZipView.icon"]},{"name":"open override val icon: Icon?","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.icon","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/icon.html","searchKeys":["icon","open override val icon: Icon?","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.icon"]},{"name":"open override val icon: Icon? = null","description":"io.github.inductiveautomation.kindling.idb.ImagesPanel.icon","location":"kindling/io.github.inductiveautomation.kindling.idb/-images-panel/icon.html","searchKeys":["icon","open override val icon: Icon? = null","io.github.inductiveautomation.kindling.idb.ImagesPanel.icon"]},{"name":"open override val icon: Icon? = null","description":"io.github.inductiveautomation.kindling.idb.generic.GenericView.icon","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-generic-view/icon.html","searchKeys":["icon","open override val icon: Icon? = null","io.github.inductiveautomation.kindling.idb.generic.GenericView.icon"]},{"name":"open override val icon: Icon? = null","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricsView.icon","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metrics-view/icon.html","searchKeys":["icon","open override val icon: Icon? = null","io.github.inductiveautomation.kindling.idb.metrics.MetricsView.icon"]},{"name":"open override val icon: Icon? = null","description":"io.github.inductiveautomation.kindling.log.LogPanel.icon","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/icon.html","searchKeys":["icon","open override val icon: Icon? = null","io.github.inductiveautomation.kindling.log.LogPanel.icon"]},{"name":"open override val icon: Icon? = null","description":"io.github.inductiveautomation.kindling.zip.views.GenericFileView.icon","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-generic-file-view/icon.html","searchKeys":["icon","open override val icon: Icon? = null","io.github.inductiveautomation.kindling.zip.views.GenericFileView.icon"]},{"name":"open override val key: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.key","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/key.html","searchKeys":["key","open override val key: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.key"]},{"name":"open override val key: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.key","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/key.html","searchKeys":["key","open override val key: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.key"]},{"name":"open override val key: String","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.key","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/key.html","searchKeys":["key","open override val key: String","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.key"]},{"name":"open override val key: String","description":"io.github.inductiveautomation.kindling.log.LogViewer.key","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/key.html","searchKeys":["key","open override val key: String","io.github.inductiveautomation.kindling.log.LogViewer.key"]},{"name":"open override val key: String","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.key","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/key.html","searchKeys":["key","open override val key: String","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.key"]},{"name":"open override val level: Level","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.level","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/level.html","searchKeys":["level","open override val level: Level","io.github.inductiveautomation.kindling.log.SystemLogEvent.level"]},{"name":"open override val level: Level? = null","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.level","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/level.html","searchKeys":["level","open override val level: Level? = null","io.github.inductiveautomation.kindling.log.WrapperLogEvent.level"]},{"name":"open override val logger: String","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.logger","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/logger.html","searchKeys":["logger","open override val logger: String","io.github.inductiveautomation.kindling.log.SystemLogEvent.logger"]},{"name":"open override val logger: String","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.logger","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/logger.html","searchKeys":["logger","open override val logger: String","io.github.inductiveautomation.kindling.log.WrapperLogEvent.logger"]},{"name":"open override val markableColumns: List<Column<ThreadLifespan, out Any?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.markableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-multi-thread-columns/markable-columns.html","searchKeys":["markableColumns","open override val markableColumns: List<Column<ThreadLifespan, out Any?>>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.markableColumns"]},{"name":"open override val markableColumns: List<Column<ThreadLifespan, out Any?>>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.markableColumns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/markable-columns.html","searchKeys":["markableColumns","open override val markableColumns: List<Column<ThreadLifespan, out Any?>>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.markableColumns"]},{"name":"open override val message: String","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.message","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/message.html","searchKeys":["message","open override val message: String","io.github.inductiveautomation.kindling.log.SystemLogEvent.message"]},{"name":"open override val message: String","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.message","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/message.html","searchKeys":["message","open override val message: String","io.github.inductiveautomation.kindling.log.WrapperLogEvent.message"]},{"name":"open override val paths: List<Path>","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.paths","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/paths.html","searchKeys":["paths","open override val paths: List<Path>","io.github.inductiveautomation.kindling.zip.views.MultiToolView.paths"]},{"name":"open override val paths: List<Path>","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView.paths","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/paths.html","searchKeys":["paths","open override val paths: List<Path>","io.github.inductiveautomation.kindling.zip.views.SinglePathView.paths"]},{"name":"open override val preferences: List<Preference<*>>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.preferences","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/preferences.html","searchKeys":["preferences","open override val preferences: List<Preference<*>>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.preferences"]},{"name":"open override val preferences: List<Preference<*>>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.preferences","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/preferences.html","searchKeys":["preferences","open override val preferences: List<Preference<*>>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.preferences"]},{"name":"open override val preferences: List<Preference<*>>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.preferences","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/preferences.html","searchKeys":["preferences","open override val preferences: List<Preference<*>>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.preferences"]},{"name":"open override val preferences: List<Preference<*>>","description":"io.github.inductiveautomation.kindling.log.LogViewer.preferences","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/preferences.html","searchKeys":["preferences","open override val preferences: List<Preference<*>>","io.github.inductiveautomation.kindling.log.LogViewer.preferences"]},{"name":"open override val preferences: List<Preference<Boolean>>","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.preferences","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/preferences.html","searchKeys":["preferences","open override val preferences: List<Preference<Boolean>>","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.preferences"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.GenericFileView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-generic-file-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.GenericFileView.provider"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.ImageView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-image-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.ImageView.provider"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.MultiToolView.provider"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.ProjectView.provider"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.TextFileView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-text-file-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.TextFileView.provider"]},{"name":"open override val provider: FileSystemProvider","description":"io.github.inductiveautomation.kindling.zip.views.ToolView.provider","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-tool-view/provider.html","searchKeys":["provider","open override val provider: FileSystemProvider","io.github.inductiveautomation.kindling.zip.views.ToolView.provider"]},{"name":"open override val respectsEncoding: Boolean = true","description":"io.github.inductiveautomation.kindling.log.LogViewer.respectsEncoding","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/respects-encoding.html","searchKeys":["respectsEncoding","open override val respectsEncoding: Boolean = true","io.github.inductiveautomation.kindling.log.LogViewer.respectsEncoding"]},{"name":"open override val respectsEncoding: Boolean = true","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.respectsEncoding","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/respects-encoding.html","searchKeys":["respectsEncoding","open override val respectsEncoding: Boolean = true","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.respectsEncoding"]},{"name":"open override val stacktrace: List<String>","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.stacktrace","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/stacktrace.html","searchKeys":["stacktrace","open override val stacktrace: List<String>","io.github.inductiveautomation.kindling.log.SystemLogEvent.stacktrace"]},{"name":"open override val stacktrace: StackTrace","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.stacktrace","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/stacktrace.html","searchKeys":["stacktrace","open override val stacktrace: StackTrace","io.github.inductiveautomation.kindling.log.WrapperLogEvent.stacktrace"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.core.ToolPanel.tabName","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.core.ToolPanel.tabName"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.thread.StatePanel.tabName","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.thread.StatePanel.tabName"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.tabName","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.utils.FilterListPanel.tabName"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.tabName","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.tabName"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.tabName","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.zip.views.MultiToolView.tabName"]},{"name":"open override val tabName: String","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView.tabName","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/tab-name.html","searchKeys":["tabName","open override val tabName: String","io.github.inductiveautomation.kindling.zip.views.SinglePathView.tabName"]},{"name":"open override val tabTooltip: String","description":"io.github.inductiveautomation.kindling.core.ToolPanel.tabTooltip","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/tab-tooltip.html","searchKeys":["tabTooltip","open override val tabTooltip: String","io.github.inductiveautomation.kindling.core.ToolPanel.tabTooltip"]},{"name":"open override val tabTooltip: String","description":"io.github.inductiveautomation.kindling.zip.views.MultiToolView.tabTooltip","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-multi-tool-view/tab-tooltip.html","searchKeys":["tabTooltip","open override val tabTooltip: String","io.github.inductiveautomation.kindling.zip.views.MultiToolView.tabTooltip"]},{"name":"open override val tabTooltip: String","description":"io.github.inductiveautomation.kindling.zip.views.SinglePathView.tabTooltip","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-single-path-view/tab-tooltip.html","searchKeys":["tabTooltip","open override val tabTooltip: String","io.github.inductiveautomation.kindling.zip.views.SinglePathView.tabTooltip"]},{"name":"open override val tabTooltip: String?","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.tabTooltip","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/tab-tooltip.html","searchKeys":["tabTooltip","open override val tabTooltip: String?","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.tabTooltip"]},{"name":"open override val timestamp: Instant","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.timestamp","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.inductiveautomation.kindling.log.SystemLogEvent.timestamp"]},{"name":"open override val timestamp: Instant","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.timestamp","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.inductiveautomation.kindling.log.WrapperLogEvent.timestamp"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.title","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.cache.CacheViewer.title"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.title","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-gateway-network-tool/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.gatewaynetwork.GatewayNetworkTool.title"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.idb.IdbViewer.title","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-viewer/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.idb.IdbViewer.title"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.log.LogViewer.title","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.log.LogViewer.title"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.title","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.title"]},{"name":"open override val title: String","description":"io.github.inductiveautomation.kindling.zip.ZipViewer.title","location":"kindling/io.github.inductiveautomation.kindling.zip/-zip-viewer/title.html","searchKeys":["title","open override val title: String","io.github.inductiveautomation.kindling.zip.ZipViewer.title"]},{"name":"open override val userObject: List<String>","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricNode.userObject","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-node/user-object.html","searchKeys":["userObject","open override val userObject: List<String>","io.github.inductiveautomation.kindling.idb.metrics.MetricNode.userObject"]},{"name":"open override val userObject: Path","description":"io.github.inductiveautomation.kindling.utils.PathNode.userObject","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-node/user-object.html","searchKeys":["userObject","open override val userObject: Path","io.github.inductiveautomation.kindling.utils.PathNode.userObject"]},{"name":"open override var marked: Boolean","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.marked","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/marked.html","searchKeys":["marked","open override var marked: Boolean","io.github.inductiveautomation.kindling.log.SystemLogEvent.marked"]},{"name":"open override var marked: Boolean","description":"io.github.inductiveautomation.kindling.log.WrapperLogEvent.marked","location":"kindling/io.github.inductiveautomation.kindling.log/-wrapper-log-event/marked.html","searchKeys":["marked","open override var marked: Boolean","io.github.inductiveautomation.kindling.log.WrapperLogEvent.marked"]},{"name":"open val respectsEncoding: Boolean","description":"io.github.inductiveautomation.kindling.core.Tool.respectsEncoding","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/respects-encoding.html","searchKeys":["respectsEncoding","open val respectsEncoding: Boolean","io.github.inductiveautomation.kindling.core.Tool.respectsEncoding"]},{"name":"open var name: String","description":"deser.support.ClassField.name","location":"kindling/deser.support/-class-field/name.html","searchKeys":["name","open var name: String","deser.support.ClassField.name"]},{"name":"operator fun <R> get(row: Int, column: Column<T, R>): R?","description":"io.github.inductiveautomation.kindling.log.LogsModel.get","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get.html","searchKeys":["get","operator fun <R> get(row: Int, column: Column<T, R>): R?","io.github.inductiveautomation.kindling.log.LogsModel.get"]},{"name":"operator fun <T : Any> get(category: PreferenceCategory, preference: Preference<T>): T?","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.get","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/get.html","searchKeys":["get","operator fun <T : Any> get(category: PreferenceCategory, preference: Preference<T>): T?","io.github.inductiveautomation.kindling.core.Kindling.Preferences.get"]},{"name":"operator fun <T : Any> set(category: PreferenceCategory, preference: Preference<T>, value: T)","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.set","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/set.html","searchKeys":["set","operator fun <T : Any> set(category: PreferenceCategory, preference: Preference<T>, value: T)","io.github.inductiveautomation.kindling.core.Kindling.Preferences.set"]},{"name":"operator fun <T> get(row: Int, column: Column<CacheEntry, T>): T","description":"io.github.inductiveautomation.kindling.cache.CacheModel.get","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/get.html","searchKeys":["get","operator fun <T> get(row: Int, column: Column<CacheEntry, T>): T","io.github.inductiveautomation.kindling.cache.CacheModel.get"]},{"name":"operator fun <T> get(row: Int, column: Column<MDCTableRow, T>): T","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.get","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/get.html","searchKeys":["get","operator fun <T> get(row: Int, column: Column<MDCTableRow, T>): T","io.github.inductiveautomation.kindling.log.MDCTableModel.get"]},{"name":"operator fun <T> get(row: Int, column: Column<ThreadLifespan, T>): T","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.get","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get.html","searchKeys":["get","operator fun <T> get(row: Int, column: Column<ThreadLifespan, T>): T","io.github.inductiveautomation.kindling.thread.model.ThreadModel.get"]},{"name":"operator fun MatchGroupCollection.getValue(thisRef: Any?, property: KProperty<*>): MatchGroup","description":"io.github.inductiveautomation.kindling.utils.getValue","location":"kindling/io.github.inductiveautomation.kindling.utils/get-value.html","searchKeys":["getValue","operator fun MatchGroupCollection.getValue(thisRef: Any?, property: KProperty<*>): MatchGroup","io.github.inductiveautomation.kindling.utils.getValue"]},{"name":"operator fun get(column: Column<*, *>): Int","description":"io.github.inductiveautomation.kindling.utils.ColumnList.get","location":"kindling/io.github.inductiveautomation.kindling.utils/-column-list/get.html","searchKeys":["get","operator fun get(column: Column<*, *>): Int","io.github.inductiveautomation.kindling.utils.ColumnList.get"]},{"name":"operator fun get(file: File): Tool","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.get","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/get.html","searchKeys":["get","operator fun get(file: File): Tool","io.github.inductiveautomation.kindling.core.Tool.Companion.get"]},{"name":"operator fun get(path: Path): Tool","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.get","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/get.html","searchKeys":["get","operator fun get(path: Path): Tool","io.github.inductiveautomation.kindling.core.Tool.Companion.get"]},{"name":"operator fun get(row: Int): T","description":"io.github.inductiveautomation.kindling.log.LogsModel.get","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/get.html","searchKeys":["get","operator fun get(row: Int): T","io.github.inductiveautomation.kindling.log.LogsModel.get"]},{"name":"operator fun get(row: Int): ThreadLifespan","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.get","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/get.html","searchKeys":["get","operator fun get(row: Int): ThreadLifespan","io.github.inductiveautomation.kindling.thread.model.ThreadModel.get"]},{"name":"operator fun invoke(title: String, message: String? = null, details: Map<String, String?> = emptyMap(), body: List<String> = emptyList()): Detail","description":"io.github.inductiveautomation.kindling.core.Detail.Companion.invoke","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(title: String, message: String? = null, details: Map<String, String?> = emptyMap(), body: List<String> = emptyList()): Detail","io.github.inductiveautomation.kindling.core.Detail.Companion.invoke"]},{"name":"override fun addComponentListener(l: ComponentListener)","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.addComponentListener","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/add-component-listener.html","searchKeys":["addComponentListener","override fun addComponentListener(l: ComponentListener)","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.addComponentListener"]},{"name":"sealed class LogColumnList<T : LogEvent> : ColumnList<T> ","description":"io.github.inductiveautomation.kindling.log.LogColumnList","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/index.html","searchKeys":["LogColumnList","sealed class LogColumnList<T : LogEvent> : ColumnList<T> ","io.github.inductiveautomation.kindling.log.LogColumnList"]},{"name":"sealed class PathView : JPanel, FloatableComponent, PopupMenuCustomizer","description":"io.github.inductiveautomation.kindling.zip.views.PathView","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-path-view/index.html","searchKeys":["PathView","sealed class PathView : JPanel, FloatableComponent, PopupMenuCustomizer","io.github.inductiveautomation.kindling.zip.views.PathView"]},{"name":"sealed class ThreadColumnList : ColumnList<ThreadLifespan> ","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/index.html","searchKeys":["ThreadColumnList","sealed class ThreadColumnList : ColumnList<ThreadLifespan> ","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList"]},{"name":"typealias IconProvider<T> = (T?) -> Icon?","description":"io.github.inductiveautomation.kindling.utils.IconProvider","location":"kindling/io.github.inductiveautomation.kindling.utils/-icon-provider/index.html","searchKeys":["IconProvider","typealias IconProvider<T> = (T?) -> Icon?","io.github.inductiveautomation.kindling.utils.IconProvider"]},{"name":"typealias LogFilter = Filter<LogEvent>","description":"io.github.inductiveautomation.kindling.log.LogFilter","location":"kindling/io.github.inductiveautomation.kindling.log/-log-filter/index.html","searchKeys":["LogFilter","typealias LogFilter = Filter<LogEvent>","io.github.inductiveautomation.kindling.log.LogFilter"]},{"name":"typealias StackElement = String","description":"io.github.inductiveautomation.kindling.utils.StackElement","location":"kindling/io.github.inductiveautomation.kindling.utils/-stack-element/index.html","searchKeys":["StackElement","typealias StackElement = String","io.github.inductiveautomation.kindling.utils.StackElement"]},{"name":"typealias StackTrace = List<StackElement>","description":"io.github.inductiveautomation.kindling.utils.StackTrace","location":"kindling/io.github.inductiveautomation.kindling.utils/-stack-trace/index.html","searchKeys":["StackTrace","typealias StackTrace = List<StackElement>","io.github.inductiveautomation.kindling.utils.StackTrace"]},{"name":"typealias StringProvider<T> = (T?) -> String?","description":"io.github.inductiveautomation.kindling.utils.StringProvider","location":"kindling/io.github.inductiveautomation.kindling.utils/-string-provider/index.html","searchKeys":["StringProvider","typealias StringProvider<T> = (T?) -> String?","io.github.inductiveautomation.kindling.utils.StringProvider"]},{"name":"typealias Stringifier = (Any?) -> String?","description":"io.github.inductiveautomation.kindling.utils.Stringifier","location":"kindling/io.github.inductiveautomation.kindling.utils/-stringifier/index.html","searchKeys":["Stringifier","typealias Stringifier = (Any?) -> String?","io.github.inductiveautomation.kindling.utils.Stringifier"]},{"name":"typealias ThreadLifespan = List<Thread?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadLifespan","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-lifespan/index.html","searchKeys":["ThreadLifespan","typealias ThreadLifespan = List<Thread?>","io.github.inductiveautomation.kindling.thread.model.ThreadLifespan"]},{"name":"val AttemptCount: Column<CacheEntry, Int>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.AttemptCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-attempt-count.html","searchKeys":["AttemptCount","val AttemptCount: Column<CacheEntry, Int>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.AttemptCount"]},{"name":"val ChoosableEncodings: Array<Charset>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.ChoosableEncodings","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-choosable-encodings.html","searchKeys":["ChoosableEncodings","val ChoosableEncodings: Array<Charset>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.ChoosableEncodings"]},{"name":"val DATE_FORMAT: SimpleDateFormat","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.DATE_FORMAT","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-d-a-t-e_-f-o-r-m-a-t.html","searchKeys":["DATE_FORMAT","val DATE_FORMAT: SimpleDateFormat","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.DATE_FORMAT"]},{"name":"val DataCount: Column<CacheEntry, Int>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.DataCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-data-count.html","searchKeys":["DataCount","val DataCount: Column<CacheEntry, Int>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.DataCount"]},{"name":"val Debug: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.Debug","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/-debug.html","searchKeys":["Debug","val Debug: Preference<Boolean>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.Debug"]},{"name":"val DefaultEncoding: Preference<Charset>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.DefaultEncoding","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-default-encoding.html","searchKeys":["DefaultEncoding","val DefaultEncoding: Preference<Charset>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.DefaultEncoding"]},{"name":"val DefaultTool: Preference<Tool>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.DefaultTool","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-default-tool.html","searchKeys":["DefaultTool","val DefaultTool: Preference<Tool>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.DefaultTool"]},{"name":"val Document.text: String","description":"io.github.inductiveautomation.kindling.utils.text","location":"kindling/io.github.inductiveautomation.kindling.utils/text.html","searchKeys":["text","val Document.text: String","io.github.inductiveautomation.kindling.utils.text"]},{"name":"val EDT_SCOPE: CoroutineScope","description":"io.github.inductiveautomation.kindling.utils.EDT_SCOPE","location":"kindling/io.github.inductiveautomation.kindling.utils/-e-d-t_-s-c-o-p-e.html","searchKeys":["EDT_SCOPE","val EDT_SCOPE: CoroutineScope","io.github.inductiveautomation.kindling.utils.EDT_SCOPE"]},{"name":"val HomeLocation: Preference<Path>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.HomeLocation","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-home-location.html","searchKeys":["HomeLocation","val HomeLocation: Preference<Path>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.HomeLocation"]},{"name":"val HyperlinkStrategy: Preference<LinkHandlingStrategy>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.HyperlinkStrategy","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-advanced/-hyperlink-strategy.html","searchKeys":["HyperlinkStrategy","val HyperlinkStrategy: Preference<LinkHandlingStrategy>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.Advanced.HyperlinkStrategy"]},{"name":"val Id: Column<CacheEntry, Int>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.Id","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-id.html","searchKeys":["Id","val Id: Column<CacheEntry, Int>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.Id"]},{"name":"val Inclusive: Column<MDCTableRow, Boolean>","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Inclusive","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/-m-d-c-columns/-inclusive.html","searchKeys":["Inclusive","val Inclusive: Column<MDCTableRow, Boolean>","io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Inclusive"]},{"name":"val JDBCType.javaType: Class<*>","description":"io.github.inductiveautomation.kindling.utils.javaType","location":"kindling/io.github.inductiveautomation.kindling.utils/java-type.html","searchKeys":["javaType","val JDBCType.javaType: Class<*>","io.github.inductiveautomation.kindling.utils.javaType"]},{"name":"val Key: Column<MDCTableRow, String>","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Key","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/-m-d-c-columns/-key.html","searchKeys":["Key","val Key: Column<MDCTableRow, String>","io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Key"]},{"name":"val Key: Column<Map.Entry<String, String>, String>","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns.Key","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/-details-columns/-key.html","searchKeys":["Key","val Key: Column<Map.Entry<String, String>, String>","io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns.Key"]},{"name":"val LOGGER: Logger","description":"io.github.inductiveautomation.kindling.MainPanel.Companion.LOGGER","location":"kindling/io.github.inductiveautomation.kindling/-main-panel/-companion/-l-o-g-g-e-r.html","searchKeys":["LOGGER","val LOGGER: Logger","io.github.inductiveautomation.kindling.MainPanel.Companion.LOGGER"]},{"name":"val LOGGER: Logger","description":"io.github.inductiveautomation.kindling.cache.CacheView.Companion.LOGGER","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/-companion/-l-o-g-g-e-r.html","searchKeys":["LOGGER","val LOGGER: Logger","io.github.inductiveautomation.kindling.cache.CacheView.Companion.LOGGER"]},{"name":"val Level: Column<row: T, Level?>","description":"io.github.inductiveautomation.kindling.log.LogColumnList.Level","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/-level.html","searchKeys":["Level","val Level: Column<row: T, Level?>","io.github.inductiveautomation.kindling.log.LogColumnList.Level"]},{"name":"val Logger: Column<row: T, String>","description":"io.github.inductiveautomation.kindling.log.LogColumnList.Logger","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/-logger.html","searchKeys":["Logger","val Logger: Column<row: T, String>","io.github.inductiveautomation.kindling.log.LogColumnList.Logger"]},{"name":"val Marked: Column<row: T, Boolean>","description":"io.github.inductiveautomation.kindling.log.LogColumnList.Marked","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/-marked.html","searchKeys":["Marked","val Marked: Column<row: T, Boolean>","io.github.inductiveautomation.kindling.log.LogColumnList.Marked"]},{"name":"val Message: Column<row: T, String>","description":"io.github.inductiveautomation.kindling.log.LogColumnList.Message","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/-message.html","searchKeys":["Message","val Message: Column<row: T, String>","io.github.inductiveautomation.kindling.log.LogColumnList.Message"]},{"name":"val Path.serializedForm: String","description":"io.github.inductiveautomation.kindling.utils.PathSerializer.serializedForm","location":"kindling/io.github.inductiveautomation.kindling.utils/-path-serializer/serialized-form.html","searchKeys":["serializedForm","val Path.serializedForm: String","io.github.inductiveautomation.kindling.utils.PathSerializer.serializedForm"]},{"name":"val ScaleFactor: Preference<Double>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.ScaleFactor","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/-scale-factor.html","searchKeys":["ScaleFactor","val ScaleFactor: Preference<Double>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.ScaleFactor"]},{"name":"val SchemaId: Column<CacheEntry, Int>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.SchemaId","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-schema-id.html","searchKeys":["SchemaId","val SchemaId: Column<CacheEntry, Int>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.SchemaId"]},{"name":"val SchemaName: Column<CacheEntry, String>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.SchemaName","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-schema-name.html","searchKeys":["SchemaName","val SchemaName: Column<CacheEntry, String>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.SchemaName"]},{"name":"val SelectedTimeZone: Preference<ZoneId>","description":"io.github.inductiveautomation.kindling.log.LogViewer.SelectedTimeZone","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/-selected-time-zone.html","searchKeys":["SelectedTimeZone","val SelectedTimeZone: Preference<ZoneId>","io.github.inductiveautomation.kindling.log.LogViewer.SelectedTimeZone"]},{"name":"val ShowDensity: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.log.LogViewer.ShowDensity","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/-show-density.html","searchKeys":["ShowDensity","val ShowDensity: Preference<Boolean>","io.github.inductiveautomation.kindling.log.LogViewer.ShowDensity"]},{"name":"val ShowEmptyValues: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.ShowEmptyValues","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/-show-empty-values.html","searchKeys":["ShowEmptyValues","val ShowEmptyValues: Preference<Boolean>","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.ShowEmptyValues"]},{"name":"val ShowFullLoggerNames: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.ShowFullLoggerNames","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-show-full-logger-names.html","searchKeys":["ShowFullLoggerNames","val ShowFullLoggerNames: Preference<Boolean>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.ShowFullLoggerNames"]},{"name":"val ShowNullThreads: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.thread.MultiThreadViewer.ShowNullThreads","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-viewer/-show-null-threads.html","searchKeys":["ShowNullThreads","val ShowNullThreads: Preference<Boolean>","io.github.inductiveautomation.kindling.thread.MultiThreadViewer.ShowNullThreads"]},{"name":"val TableModel.columnIndices: IntRange","description":"io.github.inductiveautomation.kindling.utils.columnIndices","location":"kindling/io.github.inductiveautomation.kindling.utils/column-indices.html","searchKeys":["columnIndices","val TableModel.columnIndices: IntRange","io.github.inductiveautomation.kindling.utils.columnIndices"]},{"name":"val TableModel.rowIndices: IntRange","description":"io.github.inductiveautomation.kindling.utils.rowIndices","location":"kindling/io.github.inductiveautomation.kindling.utils/row-indices.html","searchKeys":["rowIndices","val TableModel.rowIndices: IntRange","io.github.inductiveautomation.kindling.utils.rowIndices"]},{"name":"val Theme: Preference<Theme>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.Theme","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-u-i/-theme.html","searchKeys":["Theme","val Theme: Preference<Theme>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.UI.Theme"]},{"name":"val Thread: Column<SystemLogEvent, String>","description":"io.github.inductiveautomation.kindling.log.SystemLogColumns.Thread","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-columns/-thread.html","searchKeys":["Thread","val Thread: Column<SystemLogEvent, String>","io.github.inductiveautomation.kindling.log.SystemLogColumns.Thread"]},{"name":"val TimeStampFormatter: DateTimeFormatter","description":"io.github.inductiveautomation.kindling.log.LogViewer.TimeStampFormatter","location":"kindling/io.github.inductiveautomation.kindling.log/-log-viewer/-time-stamp-formatter.html","searchKeys":["TimeStampFormatter","val TimeStampFormatter: DateTimeFormatter","io.github.inductiveautomation.kindling.log.LogViewer.TimeStampFormatter"]},{"name":"val Timestamp: Column<CacheEntry, String>","description":"io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.Timestamp","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-model/-cache-columns/-timestamp.html","searchKeys":["Timestamp","val Timestamp: Column<CacheEntry, String>","io.github.inductiveautomation.kindling.cache.CacheModel.CacheColumns.Timestamp"]},{"name":"val Timestamp: Column<row: T, Instant>","description":"io.github.inductiveautomation.kindling.log.LogColumnList.Timestamp","location":"kindling/io.github.inductiveautomation.kindling.log/-log-column-list/-timestamp.html","searchKeys":["Timestamp","val Timestamp: Column<row: T, Instant>","io.github.inductiveautomation.kindling.log.LogColumnList.Timestamp"]},{"name":"val UseHyperlinks: Preference<Boolean>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.UseHyperlinks","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/-general/-use-hyperlinks.html","searchKeys":["UseHyperlinks","val UseHyperlinks: Preference<Boolean>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.General.UseHyperlinks"]},{"name":"val Value: Column<MDCTableRow, String?>","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Value","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/-m-d-c-columns/-value.html","searchKeys":["Value","val Value: Column<MDCTableRow, String?>","io.github.inductiveautomation.kindling.log.MDCTableModel.MDCColumns.Value"]},{"name":"val Value: Column<Map.Entry<String, String>, String>","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns.Value","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/-details-columns/-value.html","searchKeys":["Value","val Value: Column<Map.Entry<String, String>, String>","io.github.inductiveautomation.kindling.internal.DetailsModel.DetailsColumns.Value"]},{"name":"val _parent: () -> TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Column._parent","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/_parent.html","searchKeys":["_parent","val _parent: () -> TreeNode","io.github.inductiveautomation.kindling.idb.generic.Column._parent"]},{"name":"val _parent: () -> TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.Table._parent","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/_parent.html","searchKeys":["_parent","val _parent: () -> TreeNode","io.github.inductiveautomation.kindling.idb.generic.Table._parent"]},{"name":"val actions: MutableList<Action>","description":"io.github.inductiveautomation.kindling.core.DetailsPane.actions","location":"kindling/io.github.inductiveautomation.kindling.core/-details-pane/actions.html","searchKeys":["actions","val actions: MutableList<Action>","io.github.inductiveautomation.kindling.core.DetailsPane.actions"]},{"name":"val attemptCount: Int","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.attemptCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/attempt-count.html","searchKeys":["attemptCount","val attemptCount: Int","io.github.inductiveautomation.kindling.cache.CacheEntry.attemptCount"]},{"name":"val blocker: Column<ThreadLifespan, Boolean>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.blocker","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-multi-thread-columns/blocker.html","searchKeys":["blocker","val blocker: Column<ThreadLifespan, Boolean>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.blocker"]},{"name":"val blocker: Column<ThreadLifespan, Int?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.blocker","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/blocker.html","searchKeys":["blocker","val blocker: Column<ThreadLifespan, Int?>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.blocker"]},{"name":"val blocker: Thread.Blocker? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.blocker","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/blocker.html","searchKeys":["blocker","val blocker: Thread.Blocker? = null","io.github.inductiveautomation.kindling.thread.model.Thread.blocker"]},{"name":"val body: List<Detail.BodyLine>","description":"io.github.inductiveautomation.kindling.core.Detail.body","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/body.html","searchKeys":["body","val body: List<Detail.BodyLine>","io.github.inductiveautomation.kindling.core.Detail.body"]},{"name":"val body: List<String>","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.body","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/body.html","searchKeys":["body","val body: List<String>","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.body"]},{"name":"val byFilter: Map<FileFilter, Tool>","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.byFilter","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/by-filter.html","searchKeys":["byFilter","val byFilter: Map<FileFilter, Tool>","io.github.inductiveautomation.kindling.core.Tool.Companion.byFilter"]},{"name":"val byTitle: Map<String, Tool>","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.byTitle","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/by-title.html","searchKeys":["byTitle","val byTitle: Map<String, Tool>","io.github.inductiveautomation.kindling.core.Tool.Companion.byTitle"]},{"name":"val cacheFileExtensions: List<String>","description":"io.github.inductiveautomation.kindling.cache.CacheView.Companion.cacheFileExtensions","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-view/-companion/cache-file-extensions.html","searchKeys":["cacheFileExtensions","val cacheFileExtensions: List<String>","io.github.inductiveautomation.kindling.cache.CacheView.Companion.cacheFileExtensions"]},{"name":"val categories: List<PreferenceCategory>","description":"io.github.inductiveautomation.kindling.core.Kindling.Preferences.categories","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/-preferences/categories.html","searchKeys":["categories","val categories: List<PreferenceCategory>","io.github.inductiveautomation.kindling.core.Kindling.Preferences.categories"]},{"name":"val category: PreferenceCategory","description":"io.github.inductiveautomation.kindling.core.Preference.category","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/category.html","searchKeys":["category","val category: PreferenceCategory","io.github.inductiveautomation.kindling.core.Preference.category"]},{"name":"val classMap: Properties?","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.classMap","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/class-map.html","searchKeys":["classMap","val classMap: Properties?","io.github.inductiveautomation.kindling.utils.MajorVersion.classMap"]},{"name":"val className: String","description":"deser.support.ClassDetails.className","location":"kindling/deser.support/-class-details/class-name.html","searchKeys":["className","val className: String","deser.support.ClassDetails.className"]},{"name":"val clazz: Class<C>","description":"io.github.inductiveautomation.kindling.utils.Column.clazz","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/clazz.html","searchKeys":["clazz","val clazz: Class<C>","io.github.inductiveautomation.kindling.utils.Column.clazz"]},{"name":"val columnCustomization: TableColumnExt.(model: TableModel) -> Unit?","description":"io.github.inductiveautomation.kindling.utils.Column.columnCustomization","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/column-customization.html","searchKeys":["columnCustomization","val columnCustomization: TableColumnExt.(model: TableModel) -> Unit?","io.github.inductiveautomation.kindling.utils.Column.columnCustomization"]},{"name":"val columnNames: List<String>","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.columnNames","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/column-names.html","searchKeys":["columnNames","val columnNames: List<String>","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.columnNames"]},{"name":"val columns: List<Column>","description":"io.github.inductiveautomation.kindling.idb.generic.Table.columns","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/columns.html","searchKeys":["columns","val columns: List<Column>","io.github.inductiveautomation.kindling.idb.generic.Table.columns"]},{"name":"val columns: LogColumnList<T>","description":"io.github.inductiveautomation.kindling.log.LogsModel.columns","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/columns.html","searchKeys":["columns","val columns: LogColumnList<T>","io.github.inductiveautomation.kindling.log.LogsModel.columns"]},{"name":"val columns: ThreadColumnList","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.columns","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/columns.html","searchKeys":["columns","val columns: ThreadColumnList","io.github.inductiveautomation.kindling.thread.model.ThreadModel.columns"]},{"name":"val comparator: Comparator<FilterModelEntry>","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.comparator","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/comparator.html","searchKeys":["comparator","val comparator: Comparator<FilterModelEntry>","io.github.inductiveautomation.kindling.utils.FilterComparator.comparator"]},{"name":"val comparator: Comparator<Table>","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.comparator","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/comparator.html","searchKeys":["comparator","val comparator: Comparator<Table>","io.github.inductiveautomation.kindling.idb.generic.TableComparator.comparator"]},{"name":"val component: JPanel","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.component","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/component.html","searchKeys":["component","val component: JPanel","io.github.inductiveautomation.kindling.idb.generic.SortableTree.component"]},{"name":"val component: Lazy<Component>","description":"io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.component","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/-lazy-tab/component.html","searchKeys":["component","val component: Lazy<Component>","io.github.inductiveautomation.kindling.utils.TabStrip.LazyTab.component"]},{"name":"val connectionId: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.connectionId","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/connection-id.html","searchKeys":["connectionId","val connectionId: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.connectionId"]},{"name":"val connectionStatus: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.connectionStatus","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/connection-status.html","searchKeys":["connectionStatus","val connectionStatus: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.connectionStatus"]},{"name":"val connections: List<DiagramModel.Connection>","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.connections","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/connections.html","searchKeys":["connections","val connections: List<DiagramModel.Connection>","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.connections"]},{"name":"val count: Int","description":"io.github.inductiveautomation.kindling.utils.FilterModelEntry.count","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model-entry/count.html","searchKeys":["count","val count: Int","io.github.inductiveautomation.kindling.utils.FilterModelEntry.count"]},{"name":"val cpu: Column<ThreadLifespan, Double?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.cpu","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/cpu.html","searchKeys":["cpu","val cpu: Column<ThreadLifespan, Double?>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.cpu"]},{"name":"val cpuUsage: Double? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.cpuUsage","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/cpu-usage.html","searchKeys":["cpuUsage","val cpuUsage: Double? = null","io.github.inductiveautomation.kindling.thread.model.Thread.cpuUsage"]},{"name":"val daemon: Column<ThreadLifespan, Boolean>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.daemon","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/daemon.html","searchKeys":["daemon","val daemon: Column<ThreadLifespan, Boolean>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.daemon"]},{"name":"val data: EventData","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.data","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/data.html","searchKeys":["data","val data: EventData","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.data"]},{"name":"val data: List<List<*>>","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.data","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-success/data.html","searchKeys":["data","val data: List<List<*>>","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Success.data"]},{"name":"val data: List<MDCTableRow>","description":"io.github.inductiveautomation.kindling.log.MDCTableModel.data","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-model/data.html","searchKeys":["data","val data: List<MDCTableRow>","io.github.inductiveautomation.kindling.log.MDCTableModel.data"]},{"name":"val data: List<T>","description":"io.github.inductiveautomation.kindling.log.LogsModel.data","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/data.html","searchKeys":["data","val data: List<T>","io.github.inductiveautomation.kindling.log.LogsModel.data"]},{"name":"val data: Map<T, Int>","description":"io.github.inductiveautomation.kindling.utils.FilterModel.data","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/data.html","searchKeys":["data","val data: Map<T, Int>","io.github.inductiveautomation.kindling.utils.FilterModel.data"]},{"name":"val dataCount: Int","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.dataCount","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/data-count.html","searchKeys":["dataCount","val dataCount: Int","io.github.inductiveautomation.kindling.cache.CacheEntry.dataCount"]},{"name":"val datasource: String","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.datasource","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/datasource.html","searchKeys":["datasource","val datasource: String","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.datasource"]},{"name":"val deadlockIds: List<Int>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump.deadlockIds","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/deadlock-ids.html","searchKeys":["deadlockIds","val deadlockIds: List<Int>","io.github.inductiveautomation.kindling.thread.model.ThreadDump.deadlockIds"]},{"name":"val defaultValue: String?","description":"io.github.inductiveautomation.kindling.idb.generic.Column.defaultValue","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/default-value.html","searchKeys":["defaultValue","val defaultValue: String?","io.github.inductiveautomation.kindling.idb.generic.Column.defaultValue"]},{"name":"val depth: Column<ThreadLifespan, Int>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.depth","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/depth.html","searchKeys":["depth","val depth: Column<ThreadLifespan, Int>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.depth"]},{"name":"val description: String","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.description","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/description.html","searchKeys":["description","val description: String","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.description"]},{"name":"val description: String? = null","description":"io.github.inductiveautomation.kindling.core.Preference.description","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/description.html","searchKeys":["description","val description: String? = null","io.github.inductiveautomation.kindling.core.Preference.description"]},{"name":"val details: Map<String, String>","description":"io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.details","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-alarm-journal-data/details.html","searchKeys":["details","val details: Map<String, String>","io.github.inductiveautomation.kindling.cache.model.AlarmJournalData.details"]},{"name":"val details: Map<String, String?>","description":"io.github.inductiveautomation.kindling.core.Detail.details","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/details.html","searchKeys":["details","val details: Map<String, String?>","io.github.inductiveautomation.kindling.core.Detail.details"]},{"name":"val details: String","description":"io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error.details","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-query-result/-error/details.html","searchKeys":["details","val details: String","io.github.inductiveautomation.kindling.idb.generic.QueryResult.Error.details"]},{"name":"val edition: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.edition","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/edition.html","searchKeys":["edition","val edition: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.edition"]},{"name":"val editor: JComponent?","description":"io.github.inductiveautomation.kindling.core.Preference.editor","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/editor.html","searchKeys":["editor","val editor: JComponent?","io.github.inductiveautomation.kindling.core.Preference.editor"]},{"name":"val entries: EnumEntries<FilterComparator>","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.entries","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/entries.html","searchKeys":["entries","val entries: EnumEntries<FilterComparator>","io.github.inductiveautomation.kindling.utils.FilterComparator.entries"]},{"name":"val entries: EnumEntries<IdbTool>","description":"io.github.inductiveautomation.kindling.idb.IdbTool.entries","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-tool/entries.html","searchKeys":["entries","val entries: EnumEntries<IdbTool>","io.github.inductiveautomation.kindling.idb.IdbTool.entries"]},{"name":"val entries: EnumEntries<Level>","description":"io.github.inductiveautomation.kindling.log.Level.entries","location":"kindling/io.github.inductiveautomation.kindling.log/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Level>","io.github.inductiveautomation.kindling.log.Level.entries"]},{"name":"val entries: EnumEntries<LinkHandlingStrategy>","description":"io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.entries","location":"kindling/io.github.inductiveautomation.kindling.core/-link-handling-strategy/entries.html","searchKeys":["entries","val entries: EnumEntries<LinkHandlingStrategy>","io.github.inductiveautomation.kindling.core.LinkHandlingStrategy.entries"]},{"name":"val entries: EnumEntries<MajorVersion>","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.entries","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/entries.html","searchKeys":["entries","val entries: EnumEntries<MajorVersion>","io.github.inductiveautomation.kindling.utils.MajorVersion.entries"]},{"name":"val entries: EnumEntries<MetricCard.Companion.MetricPresentation>","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.entries","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/entries.html","searchKeys":["entries","val entries: EnumEntries<MetricCard.Companion.MetricPresentation>","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.entries"]},{"name":"val entries: EnumEntries<TableComparator>","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.entries","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/entries.html","searchKeys":["entries","val entries: EnumEntries<TableComparator>","io.github.inductiveautomation.kindling.idb.generic.TableComparator.entries"]},{"name":"val errors: List<String>","description":"io.github.inductiveautomation.kindling.cache.SchemaRecord.errors","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-record/errors.html","searchKeys":["errors","val errors: List<String>","io.github.inductiveautomation.kindling.cache.SchemaRecord.errors"]},{"name":"val exportFileChooser: JFileChooser","description":"io.github.inductiveautomation.kindling.core.ToolPanel.Companion.exportFileChooser","location":"kindling/io.github.inductiveautomation.kindling.core/-tool-panel/-companion/export-file-chooser.html","searchKeys":["exportFileChooser","val exportFileChooser: JFileChooser","io.github.inductiveautomation.kindling.core.ToolPanel.Companion.exportFileChooser"]},{"name":"val exportZipFileChooser: JFileChooser","description":"io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion.exportZipFileChooser","location":"kindling/io.github.inductiveautomation.kindling.zip.views/-project-view/-companion/export-zip-file-chooser.html","searchKeys":["exportZipFileChooser","val exportZipFileChooser: JFileChooser","io.github.inductiveautomation.kindling.zip.views.ProjectView.Companion.exportZipFileChooser"]},{"name":"val extensions: List<String>","description":"io.github.inductiveautomation.kindling.cache.CacheViewer.extensions","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-viewer/extensions.html","searchKeys":["extensions","val extensions: List<String>","io.github.inductiveautomation.kindling.cache.CacheViewer.extensions"]},{"name":"val filterList: FilterList","description":"io.github.inductiveautomation.kindling.utils.FilterListPanel.filterList","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list-panel/filter-list.html","searchKeys":["filterList","val filterList: FilterList","io.github.inductiveautomation.kindling.utils.FilterListPanel.filterList"]},{"name":"val filterPanels: List<FilterPanel<T>>","description":"io.github.inductiveautomation.kindling.utils.FilterSidebar.filterPanels","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-sidebar/filter-panels.html","searchKeys":["filterPanels","val filterPanels: List<FilterPanel<T>>","io.github.inductiveautomation.kindling.utils.FilterSidebar.filterPanels"]},{"name":"val formatter: NumberFormat","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.formatter","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/formatter.html","searchKeys":["formatter","val formatter: NumberFormat","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.formatter"]},{"name":"val forumThread: URI","description":"io.github.inductiveautomation.kindling.core.Kindling.forumThread","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/forum-thread.html","searchKeys":["forumThread","val forumThread: URI","io.github.inductiveautomation.kindling.core.Kindling.forumThread"]},{"name":"val frame: String? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.frame","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-monitors/frame.html","searchKeys":["frame","val frame: String? = null","io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.frame"]},{"name":"val frameIcons: List<Image>","description":"io.github.inductiveautomation.kindling.core.Kindling.frameIcons","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/frame-icons.html","searchKeys":["frameIcons","val frameIcons: List<Image>","io.github.inductiveautomation.kindling.core.Kindling.frameIcons"]},{"name":"val getValue: (row: R) -> C","description":"io.github.inductiveautomation.kindling.utils.Column.getValue","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/get-value.html","searchKeys":["getValue","val getValue: (row: R) -> C","io.github.inductiveautomation.kindling.utils.Column.getValue"]},{"name":"val header: String","description":"io.github.inductiveautomation.kindling.utils.Column.header","location":"kindling/io.github.inductiveautomation.kindling.utils/-column/header.html","searchKeys":["header","val header: String","io.github.inductiveautomation.kindling.utils.Column.header"]},{"name":"val hidden: Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Column.hidden","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/hidden.html","searchKeys":["hidden","val hidden: Boolean","io.github.inductiveautomation.kindling.idb.generic.Column.hidden"]},{"name":"val homepage: URI","description":"io.github.inductiveautomation.kindling.core.Kindling.homepage","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/homepage.html","searchKeys":["homepage","val homepage: URI","io.github.inductiveautomation.kindling.core.Kindling.homepage"]},{"name":"val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.icon","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/icon.html","searchKeys":["icon","val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.idb.generic.TableComparator.icon"]},{"name":"val icon: FlatSVGIcon","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.icon","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/icon.html","searchKeys":["icon","val icon: FlatSVGIcon","io.github.inductiveautomation.kindling.utils.FilterComparator.icon"]},{"name":"val id: Column<ThreadLifespan, Int>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.id","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/id.html","searchKeys":["id","val id: Column<ThreadLifespan, Int>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.id"]},{"name":"val id: Int","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.id","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/id.html","searchKeys":["id","val id: Int","io.github.inductiveautomation.kindling.cache.CacheEntry.id"]},{"name":"val id: Int","description":"io.github.inductiveautomation.kindling.cache.SchemaRecord.id","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-record/id.html","searchKeys":["id","val id: Int","io.github.inductiveautomation.kindling.cache.SchemaRecord.id"]},{"name":"val id: Int","description":"io.github.inductiveautomation.kindling.cache.SchemaRow.id","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-row/id.html","searchKeys":["id","val id: Int","io.github.inductiveautomation.kindling.cache.SchemaRow.id"]},{"name":"val id: Int","description":"io.github.inductiveautomation.kindling.thread.model.Thread.id","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/id.html","searchKeys":["id","val id: Int","io.github.inductiveautomation.kindling.thread.model.Thread.id"]},{"name":"val indices: IntRange","description":"io.github.inductiveautomation.kindling.utils.TabStrip.indices","location":"kindling/io.github.inductiveautomation.kindling.utils/-tab-strip/indices.html","searchKeys":["indices","val indices: IntRange","io.github.inductiveautomation.kindling.utils.TabStrip.indices"]},{"name":"val isDaemon: Boolean","description":"io.github.inductiveautomation.kindling.thread.model.Thread.isDaemon","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/is-daemon.html","searchKeys":["isDaemon","val isDaemon: Boolean","io.github.inductiveautomation.kindling.thread.model.Thread.isDaemon"]},{"name":"val isDark: Boolean","description":"io.github.inductiveautomation.kindling.core.Theme.isDark","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/is-dark.html","searchKeys":["isDark","val isDark: Boolean","io.github.inductiveautomation.kindling.core.Theme.isDark"]},{"name":"val isShowTrend: Boolean","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.isShowTrend","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/-companion/-metric-presentation/is-show-trend.html","searchKeys":["isShowTrend","val isShowTrend: Boolean","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.Companion.MetricPresentation.isShowTrend"]},{"name":"val isSingleContext: Boolean","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.isSingleContext","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/is-single-context.html","searchKeys":["isSingleContext","val isSingleContext: Boolean","io.github.inductiveautomation.kindling.thread.model.ThreadModel.isSingleContext"]},{"name":"val key: String","description":"io.github.inductiveautomation.kindling.core.Preference.key","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/key.html","searchKeys":["key","val key: String","io.github.inductiveautomation.kindling.core.Preference.key"]},{"name":"val key: String","description":"io.github.inductiveautomation.kindling.log.MDC.key","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c/key.html","searchKeys":["key","val key: String","io.github.inductiveautomation.kindling.log.MDC.key"]},{"name":"val key: String","description":"io.github.inductiveautomation.kindling.log.MDCTableRow.key","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/key.html","searchKeys":["key","val key: String","io.github.inductiveautomation.kindling.log.MDCTableRow.key"]},{"name":"val key: String?","description":"io.github.inductiveautomation.kindling.utils.FilterModelEntry.key","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model-entry/key.html","searchKeys":["key","val key: String?","io.github.inductiveautomation.kindling.utils.FilterModelEntry.key"]},{"name":"val link: String? = null","description":"io.github.inductiveautomation.kindling.core.Detail.BodyLine.link","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-body-line/link.html","searchKeys":["link","val link: String? = null","io.github.inductiveautomation.kindling.core.Detail.BodyLine.link"]},{"name":"val listeners: MutableList<(newValue: T) -> Unit>","description":"io.github.inductiveautomation.kindling.core.Preference.listeners","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/listeners.html","searchKeys":["listeners","val listeners: MutableList<(newValue: T) -> Unit>","io.github.inductiveautomation.kindling.core.Preference.listeners"]},{"name":"val localGatewayName: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.localGatewayName","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/local-gateway-name.html","searchKeys":["localGatewayName","val localGatewayName: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.localGatewayName"]},{"name":"val lock: String","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.lock","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-blocker/lock.html","searchKeys":["lock","val lock: String","io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.lock"]},{"name":"val lock: String","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.lock","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-monitors/lock.html","searchKeys":["lock","val lock: String","io.github.inductiveautomation.kindling.thread.model.Thread.Monitors.lock"]},{"name":"val lockedMonitors: List<Thread.Monitors>","description":"io.github.inductiveautomation.kindling.thread.model.Thread.lockedMonitors","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/locked-monitors.html","searchKeys":["lockedMonitors","val lockedMonitors: List<Thread.Monitors>","io.github.inductiveautomation.kindling.thread.model.Thread.lockedMonitors"]},{"name":"val lockedSynchronizers: List<String>","description":"io.github.inductiveautomation.kindling.thread.model.Thread.lockedSynchronizers","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/locked-synchronizers.html","searchKeys":["lockedSynchronizers","val lockedSynchronizers: List<String>","io.github.inductiveautomation.kindling.thread.model.Thread.lockedSynchronizers"]},{"name":"val logo: SVGDocument","description":"io.github.inductiveautomation.kindling.core.Kindling.logo","location":"kindling/io.github.inductiveautomation.kindling.core/-kindling/logo.html","searchKeys":["logo","val logo: SVGDocument","io.github.inductiveautomation.kindling.core.Kindling.logo"]},{"name":"val lookAndFeelClassname: String","description":"io.github.inductiveautomation.kindling.core.Theme.lookAndFeelClassname","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/look-and-feel-classname.html","searchKeys":["lookAndFeelClassname","val lookAndFeelClassname: String","io.github.inductiveautomation.kindling.core.Theme.lookAndFeelClassname"]},{"name":"val mark: Column<ThreadLifespan, Boolean>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.mark","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/mark.html","searchKeys":["mark","val mark: Column<ThreadLifespan, Boolean>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.mark"]},{"name":"val markIndex: Int","description":"io.github.inductiveautomation.kindling.log.LogsModel.markIndex","location":"kindling/io.github.inductiveautomation.kindling.log/-logs-model/mark-index.html","searchKeys":["markIndex","val markIndex: Int","io.github.inductiveautomation.kindling.log.LogsModel.markIndex"]},{"name":"val markIndex: Int","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.markIndex","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/mark-index.html","searchKeys":["markIndex","val markIndex: Int","io.github.inductiveautomation.kindling.thread.model.ThreadModel.markIndex"]},{"name":"val mdc: List<MDC>","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.mdc","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/mdc.html","searchKeys":["mdc","val mdc: List<MDC>","io.github.inductiveautomation.kindling.log.SystemLogEvent.mdc"]},{"name":"val menuShortcutKeyMaskEx: Int","description":"io.github.inductiveautomation.kindling.utils.menuShortcutKeyMaskEx","location":"kindling/io.github.inductiveautomation.kindling.utils/menu-shortcut-key-mask-ex.html","searchKeys":["menuShortcutKeyMaskEx","val menuShortcutKeyMaskEx: Int","io.github.inductiveautomation.kindling.utils.menuShortcutKeyMaskEx"]},{"name":"val message: String?","description":"io.github.inductiveautomation.kindling.cache.SchemaRow.message","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-row/message.html","searchKeys":["message","val message: String?","io.github.inductiveautomation.kindling.cache.SchemaRow.message"]},{"name":"val message: String? = null","description":"io.github.inductiveautomation.kindling.core.Detail.message","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/message.html","searchKeys":["message","val message: String? = null","io.github.inductiveautomation.kindling.core.Detail.message"]},{"name":"val metric: Metric","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricCard.metric","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-card/metric.html","searchKeys":["metric","val metric: Metric","io.github.inductiveautomation.kindling.idb.metrics.MetricCard.metric"]},{"name":"val name: Column<ThreadLifespan, String>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.name","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/name.html","searchKeys":["name","val name: Column<ThreadLifespan, String>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.cache.SchemaRecord.name","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-record/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.cache.SchemaRecord.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.core.Preference.name","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.core.Preference.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.core.Theme.name","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.core.Theme.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.idb.generic.Column.name","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.idb.generic.Column.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.idb.generic.Table.name","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.idb.generic.Table.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.idb.metrics.Metric.name","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.idb.metrics.Metric.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricNode.name","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-node/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.idb.metrics.MetricNode.name"]},{"name":"val name: String","description":"io.github.inductiveautomation.kindling.thread.model.Thread.name","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/name.html","searchKeys":["name","val name: String","io.github.inductiveautomation.kindling.thread.model.Thread.name"]},{"name":"val notNull: Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Column.notNull","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/not-null.html","searchKeys":["notNull","val notNull: Boolean","io.github.inductiveautomation.kindling.idb.generic.Column.notNull"]},{"name":"val owner: Int? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.owner","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/-blocker/owner.html","searchKeys":["owner","val owner: Int? = null","io.github.inductiveautomation.kindling.thread.model.Thread.Blocker.owner"]},{"name":"val path: Path","description":"io.github.inductiveautomation.kindling.idb.IdbView.path","location":"kindling/io.github.inductiveautomation.kindling.idb/-idb-view/path.html","searchKeys":["path","val path: Path","io.github.inductiveautomation.kindling.idb.IdbView.path"]},{"name":"val paths: List<Path>","description":"io.github.inductiveautomation.kindling.thread.MultiThreadView.paths","location":"kindling/io.github.inductiveautomation.kindling.thread/-multi-thread-view/paths.html","searchKeys":["paths","val paths: List<Path>","io.github.inductiveautomation.kindling.thread.MultiThreadView.paths"]},{"name":"val percentages: Map<T, String>","description":"io.github.inductiveautomation.kindling.utils.FilterModel.percentages","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/percentages.html","searchKeys":["percentages","val percentages: Map<T, String>","io.github.inductiveautomation.kindling.utils.FilterModel.percentages"]},{"name":"val pool: Column<ThreadLifespan, String?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.pool","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/pool.html","searchKeys":["pool","val pool: Column<ThreadLifespan, String?>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.pool"]},{"name":"val pool: String?","description":"io.github.inductiveautomation.kindling.thread.model.Thread.pool","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/pool.html","searchKeys":["pool","val pool: String?","io.github.inductiveautomation.kindling.thread.model.Thread.pool"]},{"name":"val preferencesEditor: JFrame","description":"io.github.inductiveautomation.kindling.core.preferencesEditor","location":"kindling/io.github.inductiveautomation.kindling.core/preferences-editor.html","searchKeys":["preferencesEditor","val preferencesEditor: JFrame","io.github.inductiveautomation.kindling.core.preferencesEditor"]},{"name":"val primaryKey: Boolean","description":"io.github.inductiveautomation.kindling.idb.generic.Column.primaryKey","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/primary-key.html","searchKeys":["primaryKey","val primaryKey: Boolean","io.github.inductiveautomation.kindling.idb.generic.Column.primaryKey"]},{"name":"val query: String","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.query","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/query.html","searchKeys":["query","val query: String","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.query"]},{"name":"val rSyntaxThemeName: String","description":"io.github.inductiveautomation.kindling.core.Theme.rSyntaxThemeName","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/r-syntax-theme-name.html","searchKeys":["rSyntaxThemeName","val rSyntaxThemeName: String","io.github.inductiveautomation.kindling.core.Theme.rSyntaxThemeName"]},{"name":"val redundantRole: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.redundantRole","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/redundant-role.html","searchKeys":["redundantRole","val redundantRole: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.redundantRole"]},{"name":"val redundantRole: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.redundantRole","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/redundant-role.html","searchKeys":["redundantRole","val redundantRole: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.redundantRole"]},{"name":"val requiresRestart: Boolean = false","description":"io.github.inductiveautomation.kindling.core.Preference.requiresRestart","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/requires-restart.html","searchKeys":["requiresRestart","val requiresRestart: Boolean = false","io.github.inductiveautomation.kindling.core.Preference.requiresRestart"]},{"name":"val schemaId: Int","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.schemaId","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/schema-id.html","searchKeys":["schemaId","val schemaId: Int","io.github.inductiveautomation.kindling.cache.CacheEntry.schemaId"]},{"name":"val schemaName: String","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.schemaName","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/schema-name.html","searchKeys":["schemaName","val schemaName: String","io.github.inductiveautomation.kindling.cache.CacheEntry.schemaName"]},{"name":"val scope: Column<ThreadLifespan, String?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.scope","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/scope.html","searchKeys":["scope","val scope: Column<ThreadLifespan, String?>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.scope"]},{"name":"val scope: String? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.scope","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/scope.html","searchKeys":["scope","val scope: String? = null","io.github.inductiveautomation.kindling.thread.model.Thread.scope"]},{"name":"val selectedLeafNodes: List<MetricNode>","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricTree.selectedLeafNodes","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-tree/selected-leaf-nodes.html","searchKeys":["selectedLeafNodes","val selectedLeafNodes: List<MetricNode>","io.github.inductiveautomation.kindling.idb.metrics.MetricTree.selectedLeafNodes"]},{"name":"val serializer: KSerializer<T>","description":"io.github.inductiveautomation.kindling.core.Preference.serializer","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","io.github.inductiveautomation.kindling.core.Preference.serializer"]},{"name":"val signature: String","description":"io.github.inductiveautomation.kindling.cache.SchemaRow.signature","location":"kindling/io.github.inductiveautomation.kindling.cache/-schema-row/signature.html","searchKeys":["signature","val signature: String","io.github.inductiveautomation.kindling.cache.SchemaRow.signature"]},{"name":"val size: Long","description":"io.github.inductiveautomation.kindling.idb.generic.Table.size","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table/size.html","searchKeys":["size","val size: Long","io.github.inductiveautomation.kindling.idb.generic.Table.size"]},{"name":"val sortKey: (T) -> String?","description":"io.github.inductiveautomation.kindling.utils.FilterModel.sortKey","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-model/sort-key.html","searchKeys":["sortKey","val sortKey: (T) -> String?","io.github.inductiveautomation.kindling.utils.FilterModel.sortKey"]},{"name":"val stacktrace: Column<ThreadLifespan, String>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.stacktrace","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/stacktrace.html","searchKeys":["stacktrace","val stacktrace: Column<ThreadLifespan, String>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.stacktrace"]},{"name":"val stacktrace: StackTrace","description":"io.github.inductiveautomation.kindling.thread.model.Thread.stacktrace","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/stacktrace.html","searchKeys":["stacktrace","val stacktrace: StackTrace","io.github.inductiveautomation.kindling.thread.model.Thread.stacktrace"]},{"name":"val state: Column<ThreadLifespan, String>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.state","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-multi-thread-columns/state.html","searchKeys":["state","val state: Column<ThreadLifespan, String>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.MultiThreadColumns.state"]},{"name":"val state: Column<ThreadLifespan, Thread.State>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.state","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/-single-thread-columns/state.html","searchKeys":["state","val state: Column<ThreadLifespan, Thread.State>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.SingleThreadColumns.state"]},{"name":"val state: Thread.State","description":"io.github.inductiveautomation.kindling.thread.model.Thread.state","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/state.html","searchKeys":["state","val state: Thread.State","io.github.inductiveautomation.kindling.thread.model.Thread.state"]},{"name":"val stateList: FilterList","description":"io.github.inductiveautomation.kindling.thread.StatePanel.stateList","location":"kindling/io.github.inductiveautomation.kindling.thread/-state-panel/state-list.html","searchKeys":["stateList","val stateList: FilterList","io.github.inductiveautomation.kindling.thread.StatePanel.stateList"]},{"name":"val system: Column<ThreadLifespan, String?>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.system","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-column-list/system.html","searchKeys":["system","val system: Column<ThreadLifespan, String?>","io.github.inductiveautomation.kindling.thread.model.ThreadColumnList.system"]},{"name":"val system: String? = null","description":"io.github.inductiveautomation.kindling.thread.model.Thread.system","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/system.html","searchKeys":["system","val system: String? = null","io.github.inductiveautomation.kindling.thread.model.Thread.system"]},{"name":"val systemName: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.systemName","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/-connection/system-name.html","searchKeys":["systemName","val systemName: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.Connection.systemName"]},{"name":"val table: ReifiedJXTable<LogsModel<out LogEvent>>","description":"io.github.inductiveautomation.kindling.log.LogPanel.table","location":"kindling/io.github.inductiveautomation.kindling.log/-log-panel/table.html","searchKeys":["table","val table: ReifiedJXTable<LogsModel<out LogEvent>>","io.github.inductiveautomation.kindling.log.LogPanel.table"]},{"name":"val tables: List<Table>","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.tables","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/tables.html","searchKeys":["tables","val tables: List<Table>","io.github.inductiveautomation.kindling.idb.generic.SortableTree.tables"]},{"name":"val text: String","description":"io.github.inductiveautomation.kindling.core.Detail.BodyLine.text","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/-body-line/text.html","searchKeys":["text","val text: String","io.github.inductiveautomation.kindling.core.Detail.BodyLine.text"]},{"name":"val themes: Map<String, Theme>","description":"io.github.inductiveautomation.kindling.core.Theme.Companion.themes","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/-companion/themes.html","searchKeys":["themes","val themes: Map<String, Theme>","io.github.inductiveautomation.kindling.core.Theme.Companion.themes"]},{"name":"val thread: String","description":"io.github.inductiveautomation.kindling.log.SystemLogEvent.thread","location":"kindling/io.github.inductiveautomation.kindling.log/-system-log-event/thread.html","searchKeys":["thread","val thread: String","io.github.inductiveautomation.kindling.log.SystemLogEvent.thread"]},{"name":"val threadData: List<ThreadLifespan>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadModel.threadData","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-model/thread-data.html","searchKeys":["threadData","val threadData: List<ThreadLifespan>","io.github.inductiveautomation.kindling.thread.model.ThreadModel.threadData"]},{"name":"val threads: List<Thread>","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump.threads","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/threads.html","searchKeys":["threads","val threads: List<Thread>","io.github.inductiveautomation.kindling.thread.model.ThreadDump.threads"]},{"name":"val timestamp: Date","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricData.timestamp","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-data/timestamp.html","searchKeys":["timestamp","val timestamp: Date","io.github.inductiveautomation.kindling.idb.metrics.MetricData.timestamp"]},{"name":"val timestamp: String","description":"io.github.inductiveautomation.kindling.cache.CacheEntry.timestamp","location":"kindling/io.github.inductiveautomation.kindling.cache/-cache-entry/timestamp.html","searchKeys":["timestamp","val timestamp: String","io.github.inductiveautomation.kindling.cache.CacheEntry.timestamp"]},{"name":"val title: String","description":"io.github.inductiveautomation.kindling.core.Detail.title","location":"kindling/io.github.inductiveautomation.kindling.core/-detail/title.html","searchKeys":["title","val title: String","io.github.inductiveautomation.kindling.core.Detail.title"]},{"name":"val tools: List<Tool>","description":"io.github.inductiveautomation.kindling.core.Tool.Companion.tools","location":"kindling/io.github.inductiveautomation.kindling.core/-tool/-companion/tools.html","searchKeys":["tools","val tools: List<Tool>","io.github.inductiveautomation.kindling.core.Tool.Companion.tools"]},{"name":"val tooltip: String","description":"io.github.inductiveautomation.kindling.idb.generic.TableComparator.tooltip","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-table-comparator/tooltip.html","searchKeys":["tooltip","val tooltip: String","io.github.inductiveautomation.kindling.idb.generic.TableComparator.tooltip"]},{"name":"val tooltip: String","description":"io.github.inductiveautomation.kindling.utils.FilterComparator.tooltip","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-comparator/tooltip.html","searchKeys":["tooltip","val tooltip: String","io.github.inductiveautomation.kindling.utils.FilterComparator.tooltip"]},{"name":"val tree: DBMetaDataTree","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.tree","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/tree.html","searchKeys":["tree","val tree: DBMetaDataTree","io.github.inductiveautomation.kindling.idb.generic.SortableTree.tree"]},{"name":"val type: String","description":"io.github.inductiveautomation.kindling.idb.generic.Column.type","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-column/type.html","searchKeys":["type","val type: String","io.github.inductiveautomation.kindling.idb.generic.Column.type"]},{"name":"val typeCode: Byte","description":"deser.support.ClassField.typeCode","location":"kindling/deser.support/-class-field/type-code.html","searchKeys":["typeCode","val typeCode: Byte","deser.support.ClassField.typeCode"]},{"name":"val value: Double","description":"io.github.inductiveautomation.kindling.idb.metrics.MetricData.value","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric-data/value.html","searchKeys":["value","val value: Double","io.github.inductiveautomation.kindling.idb.metrics.MetricData.value"]},{"name":"val value: String?","description":"io.github.inductiveautomation.kindling.log.MDC.value","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c/value.html","searchKeys":["value","val value: String?","io.github.inductiveautomation.kindling.log.MDC.value"]},{"name":"val value: String?","description":"io.github.inductiveautomation.kindling.log.MDCTableRow.value","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/value.html","searchKeys":["value","val value: String?","io.github.inductiveautomation.kindling.log.MDCTableRow.value"]},{"name":"val values: Array<Any?>","description":"io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.values","location":"kindling/io.github.inductiveautomation.kindling.cache.model/-scripted-s-f-data/values.html","searchKeys":["values","val values: Array<Any?>","io.github.inductiveautomation.kindling.cache.model.ScriptedSFData.values"]},{"name":"val version: String","description":"io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.version","location":"kindling/io.github.inductiveautomation.kindling.gatewaynetwork/-diagram-model/version.html","searchKeys":["version","val version: String","io.github.inductiveautomation.kindling.gatewaynetwork.DiagramModel.version"]},{"name":"val version: String","description":"io.github.inductiveautomation.kindling.thread.model.ThreadDump.version","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread-dump/version.html","searchKeys":["version","val version: String","io.github.inductiveautomation.kindling.thread.model.ThreadDump.version"]},{"name":"val version: String","description":"io.github.inductiveautomation.kindling.utils.MajorVersion.version","location":"kindling/io.github.inductiveautomation.kindling.utils/-major-version/version.html","searchKeys":["version","val version: String","io.github.inductiveautomation.kindling.utils.MajorVersion.version"]},{"name":"value class Metric(val name: String)","description":"io.github.inductiveautomation.kindling.idb.metrics.Metric","location":"kindling/io.github.inductiveautomation.kindling.idb.metrics/-metric/index.html","searchKeys":["Metric","value class Metric(val name: String)","io.github.inductiveautomation.kindling.idb.metrics.Metric"]},{"name":"var JFreeChart.theme: Theme","description":"io.github.inductiveautomation.kindling.core.Theme.Companion.theme","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/-companion/theme.html","searchKeys":["theme","var JFreeChart.theme: Theme","io.github.inductiveautomation.kindling.core.Theme.Companion.theme"]},{"name":"var RSyntaxTextArea.theme: Theme","description":"io.github.inductiveautomation.kindling.core.Theme.Companion.theme","location":"kindling/io.github.inductiveautomation.kindling.core/-theme/-companion/theme.html","searchKeys":["theme","var RSyntaxTextArea.theme: Theme","io.github.inductiveautomation.kindling.core.Theme.Companion.theme"]},{"name":"var accelerator: KeyStroke?","description":"io.github.inductiveautomation.kindling.utils.Action.accelerator","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/accelerator.html","searchKeys":["accelerator","var accelerator: KeyStroke?","io.github.inductiveautomation.kindling.utils.Action.accelerator"]},{"name":"var comparator: FilterComparator","description":"io.github.inductiveautomation.kindling.utils.FilterList.SortAction.comparator","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/-sort-action/comparator.html","searchKeys":["comparator","var comparator: FilterComparator","io.github.inductiveautomation.kindling.utils.FilterList.SortAction.comparator"]},{"name":"var comparator: FilterComparator","description":"io.github.inductiveautomation.kindling.utils.FilterList.comparator","location":"kindling/io.github.inductiveautomation.kindling.utils/-filter-list/comparator.html","searchKeys":["comparator","var comparator: FilterComparator","io.github.inductiveautomation.kindling.utils.FilterList.comparator"]},{"name":"var comparator: TableComparator","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction.comparator","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/-sort-action/comparator.html","searchKeys":["comparator","var comparator: TableComparator","io.github.inductiveautomation.kindling.idb.generic.SortableTree.SortAction.comparator"]},{"name":"var comparator: TableComparator","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.comparator","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/comparator.html","searchKeys":["comparator","var comparator: TableComparator","io.github.inductiveautomation.kindling.idb.generic.SortableTree.comparator"]},{"name":"var currentValue: T","description":"io.github.inductiveautomation.kindling.core.Preference.currentValue","location":"kindling/io.github.inductiveautomation.kindling.core/-preference/current-value.html","searchKeys":["currentValue","var currentValue: T","io.github.inductiveautomation.kindling.core.Preference.currentValue"]},{"name":"var description: String?","description":"io.github.inductiveautomation.kindling.utils.Action.description","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/description.html","searchKeys":["description","var description: String?","io.github.inductiveautomation.kindling.utils.Action.description"]},{"name":"var details: List<Map.Entry<String, String>>","description":"io.github.inductiveautomation.kindling.internal.DetailsModel.details","location":"kindling/io.github.inductiveautomation.kindling.internal/-details-model/details.html","searchKeys":["details","var details: List<Map.Entry<String, String>>","io.github.inductiveautomation.kindling.internal.DetailsModel.details"]},{"name":"var events: List<Detail>","description":"io.github.inductiveautomation.kindling.core.DetailsPane.events","location":"kindling/io.github.inductiveautomation.kindling.core/-details-pane/events.html","searchKeys":["events","var events: List<Detail>","io.github.inductiveautomation.kindling.core.DetailsPane.events"]},{"name":"var icon: Icon?","description":"io.github.inductiveautomation.kindling.utils.Action.icon","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/icon.html","searchKeys":["icon","var icon: Icon?","io.github.inductiveautomation.kindling.utils.Action.icon"]},{"name":"var inclusive: Boolean","description":"io.github.inductiveautomation.kindling.log.MDCTableRow.inclusive","location":"kindling/io.github.inductiveautomation.kindling.log/-m-d-c-table-row/inclusive.html","searchKeys":["inclusive","var inclusive: Boolean","io.github.inductiveautomation.kindling.log.MDCTableRow.inclusive"]},{"name":"var localTime: LocalTime","description":"io.github.inductiveautomation.kindling.log.TimeSelector.localTime","location":"kindling/io.github.inductiveautomation.kindling.log/-time-selector/local-time.html","searchKeys":["localTime","var localTime: LocalTime","io.github.inductiveautomation.kindling.log.TimeSelector.localTime"]},{"name":"var marked: Boolean","description":"io.github.inductiveautomation.kindling.thread.model.Thread.marked","location":"kindling/io.github.inductiveautomation.kindling.thread.model/-thread/marked.html","searchKeys":["marked","var marked: Boolean","io.github.inductiveautomation.kindling.thread.model.Thread.marked"]},{"name":"var name: String?","description":"io.github.inductiveautomation.kindling.utils.Action.name","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/name.html","searchKeys":["name","var name: String?","io.github.inductiveautomation.kindling.utils.Action.name"]},{"name":"var parent: AbstractTreeNode?","description":"io.github.inductiveautomation.kindling.utils.AbstractTreeNode.parent","location":"kindling/io.github.inductiveautomation.kindling.utils/-abstract-tree-node/parent.html","searchKeys":["parent","var parent: AbstractTreeNode?","io.github.inductiveautomation.kindling.utils.AbstractTreeNode.parent"]},{"name":"var result: QueryResult?","description":"io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.result","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-results-panel/result.html","searchKeys":["result","var result: QueryResult?","io.github.inductiveautomation.kindling.idb.generic.ResultsPanel.result"]},{"name":"var root: TreeNode","description":"io.github.inductiveautomation.kindling.idb.generic.SortableTree.root","location":"kindling/io.github.inductiveautomation.kindling.idb.generic/-sortable-tree/root.html","searchKeys":["root","var root: TreeNode","io.github.inductiveautomation.kindling.idb.generic.SortableTree.root"]},{"name":"var selected: Boolean","description":"io.github.inductiveautomation.kindling.utils.Action.selected","location":"kindling/io.github.inductiveautomation.kindling.utils/-action/selected.html","searchKeys":["selected","var selected: Boolean","io.github.inductiveautomation.kindling.utils.Action.selected"]},{"name":"var text: String?","description":"io.github.inductiveautomation.kindling.utils.ScrollingTextPane.text","location":"kindling/io.github.inductiveautomation.kindling.utils/-scrolling-text-pane/text.html","searchKeys":["text","var text: String?","io.github.inductiveautomation.kindling.utils.ScrollingTextPane.text"]},{"name":"var threads: ThreadLifespan","description":"io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.threads","location":"kindling/io.github.inductiveautomation.kindling.thread/-thread-comparison-pane/threads.html","searchKeys":["threads","var threads: ThreadLifespan","io.github.inductiveautomation.kindling.thread.ThreadComparisonPane.threads"]},{"name":"var time: Instant","description":"io.github.inductiveautomation.kindling.log.DateTimeSelector.time","location":"kindling/io.github.inductiveautomation.kindling.log/-date-time-selector/time.html","searchKeys":["time","var time: Instant","io.github.inductiveautomation.kindling.log.DateTimeSelector.time"]}]
