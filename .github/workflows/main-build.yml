name: Publish new version upon tag commit
on:
  push:
    tags:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build & JPackage
        run: ./gradlew build jpackage
        env:
          TAG_VERSION: ${{github.ref_name}}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: |
            app/build/jpackage/*.deb
            app/build/jpackage/*.rpm
            app/build/jpackage/*.exe
            app/build/jpackage/*.msi
      - name: Upload jar
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: fatjar
          path: app/build/libs/kindling-bundle.jar
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest
          path: artifacts
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-latest
          path: artifacts
      - name: Download bundle jar
        uses: actions/download-artifact@v3
        with:
          name: fatjar
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            artifacts/*
            kindling-bundle.jar
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '17'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      - name: Install JDeploy
        run: npm install
      - name: Set package version
        run: npm --no-git-tag-version version ${{github.ref_name}}
      - name: JDeploy Publish
        run: npx jdeploy publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
